;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 09-Jan-18 7:45:41 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2B5C      	GOTO       860
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00B3      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B2      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;Loop counter.c,20 :: 		void interrupt(){
;Loop counter.c,21 :: 		if(INTF_bit){
0x000B	0x1C8B      	BTFSS      INTF_bit, BitPos(INTF_bit+0)
0x000C	0x280F      	GOTO       L_interrupt22
;Loop counter.c,22 :: 		INTF_bit = 0;
0x000D	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;Loop counter.c,23 :: 		IRF = 1;
0x000E	0x1431      	BSF        _IRF, BitPos(_IRF+0)
;Loop counter.c,24 :: 		}
L_interrupt22:
;Loop counter.c,25 :: 		}
L_end_interrupt:
L__interrupt82:
0x000F	0x0832      	MOVF       ___savePCLATH, 0
0x0010	0x008A      	MOVWF      PCLATH
0x0011	0x0E33      	SWAPF      ___saveSTATUS, 0
0x0012	0x0083      	MOVWF      STATUS
0x0013	0x0EFF      	SWAPF      R15, 1
0x0014	0x0E7F      	SWAPF      R15, 0
0x0015	0x0009      	RETFIE
; end of _interrupt
_masking:
;Loop counter.c,32 :: 		void masking(unsigned short temp){
;Loop counter.c,33 :: 		temp = anode[temp];
0x0016	0x1283      	BCF        STATUS, 5
0x0017	0x1303      	BCF        STATUS, 6
0x0018	0x0844      	MOVF       FARG_masking_temp, 0
0x0019	0x3E20      	ADDLW      _anode
0x001A	0x0084      	MOVWF      FSR
0x001B	0x0800      	MOVF       INDF, 0
0x001C	0x00F2      	MOVWF      R2
0x001D	0x0872      	MOVF       R2, 0
0x001E	0x00C4      	MOVWF      FARG_masking_temp
;Loop counter.c,34 :: 		PORTB = temp << 1;
0x001F	0x0872      	MOVF       R2, 0
0x0020	0x00F0      	MOVWF      R0
0x0021	0x0DF0      	RLF        R0, 1
0x0022	0x1070      	BCF        R0, 0
0x0023	0x0870      	MOVF       R0, 0
0x0024	0x0086      	MOVWF      PORTB
;Loop counter.c,35 :: 		}
L_end_masking:
0x0025	0x0008      	RETURN
; end of _masking
_Mul_16X16_U:
;__Lib_Math.c,136 :: 		
;__Lib_Math.c,143 :: 		
0x0026	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,144 :: 		
0x0027	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,145 :: 		
0x0028	0x01FB      	CLRF       R11
;__Lib_Math.c,146 :: 		
0x0029	0x01FA      	CLRF       R10
;__Lib_Math.c,147 :: 		
0x002A	0x01F9      	CLRF       R9
;__Lib_Math.c,148 :: 		
0x002B	0x3080      	MOVLW      128
;__Lib_Math.c,149 :: 		
0x002C	0x00F8      	MOVWF      R8
;__Lib_Math.c,150 :: 		
0x002D	0x0CF1      	RRF        R1, 1
;__Lib_Math.c,151 :: 		
0x002E	0x0CF0      	RRF        R0, 1
;__Lib_Math.c,152 :: 		
0x002F	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,153 :: 		
0x0030	0x283A      	GOTO       $+10
;__Lib_Math.c,154 :: 		
0x0031	0x0874      	MOVF       R4, 0
;__Lib_Math.c,155 :: 		
0x0032	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,156 :: 		
0x0033	0x0875      	MOVF       R5, 0
;__Lib_Math.c,157 :: 		
0x0034	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,158 :: 		
0x0035	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,159 :: 		
0x0036	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,160 :: 		
0x0037	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,161 :: 		
0x0038	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,162 :: 		
0x0039	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,163 :: 		
0x003A	0x1FF0      	BTFSS      R0, 7
;__Lib_Math.c,164 :: 		
0x003B	0x2842      	GOTO       $+7
;__Lib_Math.c,165 :: 		
0x003C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,166 :: 		
0x003D	0x07FA      	ADDWF      R10, 1
;__Lib_Math.c,167 :: 		
0x003E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,168 :: 		
0x003F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,169 :: 		
0x0040	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,170 :: 		
0x0041	0x07FB      	ADDWF      R11, 1
;__Lib_Math.c,171 :: 		
0x0042	0x0CFB      	RRF        R11, 1
;__Lib_Math.c,172 :: 		
0x0043	0x0CFA      	RRF        R10, 1
;__Lib_Math.c,173 :: 		
0x0044	0x0CF9      	RRF        R9, 1
;__Lib_Math.c,174 :: 		
0x0045	0x0CF8      	RRF        R8, 1
;__Lib_Math.c,175 :: 		
0x0046	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,176 :: 		
0x0047	0x282D      	GOTO       $-26
;__Lib_Math.c,177 :: 		
0x0048	0x087B      	MOVF       R11, 0
;__Lib_Math.c,178 :: 		
0x0049	0x00F3      	MOVWF      R3
;__Lib_Math.c,179 :: 		
0x004A	0x087A      	MOVF       R10, 0
;__Lib_Math.c,180 :: 		
0x004B	0x00F2      	MOVWF      R2
;__Lib_Math.c,181 :: 		
0x004C	0x0879      	MOVF       R9, 0
;__Lib_Math.c,182 :: 		
0x004D	0x00F1      	MOVWF      R1
;__Lib_Math.c,183 :: 		
0x004E	0x0878      	MOVF       R8, 0
;__Lib_Math.c,184 :: 		
0x004F	0x00F0      	MOVWF      R0
;__Lib_Math.c,187 :: 		
L_end_Mul_16X16_U:
0x0050	0x0008      	RETURN
; end of _Mul_16X16_U
_Delay_1ms:
;__Lib_Delays.c,35 :: 		void Delay_1ms() {
;__Lib_Delays.c,36 :: 		Delay_ms(1);
0x0051	0x3003      	MOVLW      3
0x0052	0x1283      	BCF        STATUS, 5
0x0053	0x1303      	BCF        STATUS, 6
0x0054	0x00FC      	MOVWF      R12
0x0055	0x3097      	MOVLW      151
0x0056	0x00FD      	MOVWF      R13
L_Delay_1ms6:
0x0057	0x0BFD      	DECFSZ     R13, 1
0x0058	0x2857      	GOTO       L_Delay_1ms6
0x0059	0x0BFC      	DECFSZ     R12, 1
0x005A	0x2857      	GOTO       L_Delay_1ms6
0x005B	0x0000      	NOP
0x005C	0x0000      	NOP
;__Lib_Delays.c,37 :: 		}
L_end_Delay_1ms:
0x005D	0x0008      	RETURN
; end of _Delay_1ms
_clear_digit:
;Loop counter.c,27 :: 		void clear_digit(){
;Loop counter.c,28 :: 		digit_1 = 0; digit_2 = 0;
0x005E	0x1283      	BCF        STATUS, 5
0x005F	0x1303      	BCF        STATUS, 6
0x0060	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
0x0061	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
;Loop counter.c,29 :: 		digit_3 = 0; digit_4 = 0;
0x0062	0x1105      	BCF        RA2_bit, BitPos(RA2_bit+0)
0x0063	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;Loop counter.c,30 :: 		}
L_end_clear_digit:
0x0064	0x0008      	RETURN
; end of _clear_digit
_isdigit:
;__Lib_CType.c,23 :: 		
;__Lib_CType.c,24 :: 		
0x0065	0x1283      	BCF        STATUS, 5
0x0066	0x1303      	BCF        STATUS, 6
0x0067	0x0844      	MOVF       FARG_isdigit_character, 0
0x0068	0x3C39      	SUBLW      57
0x0069	0x1C03      	BTFSS      STATUS, 0
0x006A	0x2872      	GOTO       L_isdigit9
0x006B	0x3030      	MOVLW      48
0x006C	0x0244      	SUBWF      FARG_isdigit_character, 0
0x006D	0x1C03      	BTFSS      STATUS, 0
0x006E	0x2872      	GOTO       L_isdigit9
0x006F	0x3001      	MOVLW      1
0x0070	0x00F0      	MOVWF      R0
0x0071	0x2873      	GOTO       L_isdigit8
L_isdigit9:
0x0072	0x01F0      	CLRF       R0
L_isdigit8:
;__Lib_CType.c,25 :: 		
L_end_isdigit:
0x0073	0x0008      	RETURN
; end of _isdigit
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0074	0x1283      	BCF        STATUS, 5
0x0075	0x1303      	BCF        STATUS, 6
0x0076	0x0837      	MOVF       ___DoICPAddr+1, 0
0x0077	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0078	0x0836      	MOVF       ___DoICPAddr, 0
0x0079	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x007A	0x0008      	RETURN
; end of _____DoICP
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x007B	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x007C	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x007D	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x007E	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x007F	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0080	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0081	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0082	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x0083	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x0084	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x0085	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x0086	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0087	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0088	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0089	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x008A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x008B	0x2893      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x008C	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x008D	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x008E	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x008F	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0090	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0091	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0092	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x0093	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x0094	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x0095	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x0096	0x2881      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x0097	0x0008      	RETURN
; end of _Div_16X16_U
_kp_scan:
;keypad4x3.h,30 :: 		char kp_scan(){
;keypad4x3.h,31 :: 		char key = 0;
0x0098	0x1283      	BCF        STATUS, 5
0x0099	0x1303      	BCF        STATUS, 6
0x009A	0x01BD      	CLRF       kp_scan_key_L0
;keypad4x3.h,32 :: 		kp_row1 = 1; kp_row2 = 0; kp_row3 = 0; kp_row4 = 0;
0x009B	0x1707      	BSF        RC6_bit, BitPos(RC6_bit+0)
0x009C	0x1287      	BCF        RC5_bit, BitPos(RC5_bit+0)
0x009D	0x1207      	BCF        RC4_bit, BitPos(RC4_bit+0)
0x009E	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
;keypad4x3.h,33 :: 		delay_1ms();
0x009F	0x2051      	CALL       _Delay_1ms
;keypad4x3.h,34 :: 		if(kp_col1 == 1) key = '1';
0x00A0	0x1D07      	BTFSS      RC2_bit, BitPos(RC2_bit+0)
0x00A1	0x28A5      	GOTO       L_kp_scan0
0x00A2	0x3031      	MOVLW      49
0x00A3	0x00BD      	MOVWF      kp_scan_key_L0
0x00A4	0x28AE      	GOTO       L_kp_scan1
L_kp_scan0:
;keypad4x3.h,35 :: 		else if(kp_col2 == 1) key = '2';
0x00A5	0x1C87      	BTFSS      RC1_bit, BitPos(RC1_bit+0)
0x00A6	0x28AA      	GOTO       L_kp_scan2
0x00A7	0x3032      	MOVLW      50
0x00A8	0x00BD      	MOVWF      kp_scan_key_L0
0x00A9	0x28AE      	GOTO       L_kp_scan3
L_kp_scan2:
;keypad4x3.h,36 :: 		else if(kp_col3 == 1) key = '3';
0x00AA	0x1C07      	BTFSS      RC0_bit, BitPos(RC0_bit+0)
0x00AB	0x28AE      	GOTO       L_kp_scan4
0x00AC	0x3033      	MOVLW      51
0x00AD	0x00BD      	MOVWF      kp_scan_key_L0
L_kp_scan4:
L_kp_scan3:
L_kp_scan1:
;keypad4x3.h,37 :: 		kp_row1 = 0; kp_row2 = 1; kp_row3 = 0; kp_row4 = 0;
0x00AE	0x1307      	BCF        RC6_bit, BitPos(RC6_bit+0)
0x00AF	0x1687      	BSF        RC5_bit, BitPos(RC5_bit+0)
0x00B0	0x1207      	BCF        RC4_bit, BitPos(RC4_bit+0)
0x00B1	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
;keypad4x3.h,38 :: 		delay_1ms();
0x00B2	0x2051      	CALL       _Delay_1ms
;keypad4x3.h,39 :: 		if(kp_col1 == 1) key = '4';
0x00B3	0x1D07      	BTFSS      RC2_bit, BitPos(RC2_bit+0)
0x00B4	0x28B8      	GOTO       L_kp_scan5
0x00B5	0x3034      	MOVLW      52
0x00B6	0x00BD      	MOVWF      kp_scan_key_L0
0x00B7	0x28C1      	GOTO       L_kp_scan6
L_kp_scan5:
;keypad4x3.h,40 :: 		else if(kp_col2 == 1) key = '5';
0x00B8	0x1C87      	BTFSS      RC1_bit, BitPos(RC1_bit+0)
0x00B9	0x28BD      	GOTO       L_kp_scan7
0x00BA	0x3035      	MOVLW      53
0x00BB	0x00BD      	MOVWF      kp_scan_key_L0
0x00BC	0x28C1      	GOTO       L_kp_scan8
L_kp_scan7:
;keypad4x3.h,41 :: 		else if(kp_col3 == 1) key = '6';
0x00BD	0x1C07      	BTFSS      RC0_bit, BitPos(RC0_bit+0)
0x00BE	0x28C1      	GOTO       L_kp_scan9
0x00BF	0x3036      	MOVLW      54
0x00C0	0x00BD      	MOVWF      kp_scan_key_L0
L_kp_scan9:
L_kp_scan8:
L_kp_scan6:
;keypad4x3.h,42 :: 		kp_row1 = 0; kp_row2 = 0; kp_row3 = 1; kp_row4 = 0;
0x00C1	0x1307      	BCF        RC6_bit, BitPos(RC6_bit+0)
0x00C2	0x1287      	BCF        RC5_bit, BitPos(RC5_bit+0)
0x00C3	0x1607      	BSF        RC4_bit, BitPos(RC4_bit+0)
0x00C4	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
;keypad4x3.h,43 :: 		delay_1ms();
0x00C5	0x2051      	CALL       _Delay_1ms
;keypad4x3.h,44 :: 		if(kp_col1 == 1) key = '7';
0x00C6	0x1D07      	BTFSS      RC2_bit, BitPos(RC2_bit+0)
0x00C7	0x28CB      	GOTO       L_kp_scan10
0x00C8	0x3037      	MOVLW      55
0x00C9	0x00BD      	MOVWF      kp_scan_key_L0
0x00CA	0x28D4      	GOTO       L_kp_scan11
L_kp_scan10:
;keypad4x3.h,45 :: 		else if(kp_col2 == 1) key = '8';
0x00CB	0x1C87      	BTFSS      RC1_bit, BitPos(RC1_bit+0)
0x00CC	0x28D0      	GOTO       L_kp_scan12
0x00CD	0x3038      	MOVLW      56
0x00CE	0x00BD      	MOVWF      kp_scan_key_L0
0x00CF	0x28D4      	GOTO       L_kp_scan13
L_kp_scan12:
;keypad4x3.h,46 :: 		else if(kp_col3 == 1) key = '9';
0x00D0	0x1C07      	BTFSS      RC0_bit, BitPos(RC0_bit+0)
0x00D1	0x28D4      	GOTO       L_kp_scan14
0x00D2	0x3039      	MOVLW      57
0x00D3	0x00BD      	MOVWF      kp_scan_key_L0
L_kp_scan14:
L_kp_scan13:
L_kp_scan11:
;keypad4x3.h,47 :: 		kp_row1 = 0; kp_row2 = 0; kp_row3 = 0; kp_row4 = 1;
0x00D4	0x1307      	BCF        RC6_bit, BitPos(RC6_bit+0)
0x00D5	0x1287      	BCF        RC5_bit, BitPos(RC5_bit+0)
0x00D6	0x1207      	BCF        RC4_bit, BitPos(RC4_bit+0)
0x00D7	0x1587      	BSF        RC3_bit, BitPos(RC3_bit+0)
;keypad4x3.h,48 :: 		delay_1ms();
0x00D8	0x2051      	CALL       _Delay_1ms
;keypad4x3.h,49 :: 		if(kp_col1 == 1) key = '*';
0x00D9	0x1D07      	BTFSS      RC2_bit, BitPos(RC2_bit+0)
0x00DA	0x28DE      	GOTO       L_kp_scan15
0x00DB	0x302A      	MOVLW      42
0x00DC	0x00BD      	MOVWF      kp_scan_key_L0
0x00DD	0x28E7      	GOTO       L_kp_scan16
L_kp_scan15:
;keypad4x3.h,50 :: 		else if(kp_col2 == 1) key = '0';
0x00DE	0x1C87      	BTFSS      RC1_bit, BitPos(RC1_bit+0)
0x00DF	0x28E3      	GOTO       L_kp_scan17
0x00E0	0x3030      	MOVLW      48
0x00E1	0x00BD      	MOVWF      kp_scan_key_L0
0x00E2	0x28E7      	GOTO       L_kp_scan18
L_kp_scan17:
;keypad4x3.h,51 :: 		else if(kp_col3 == 1) key = '#';
0x00E3	0x1C07      	BTFSS      RC0_bit, BitPos(RC0_bit+0)
0x00E4	0x28E7      	GOTO       L_kp_scan19
0x00E5	0x3023      	MOVLW      35
0x00E6	0x00BD      	MOVWF      kp_scan_key_L0
L_kp_scan19:
L_kp_scan18:
L_kp_scan16:
;keypad4x3.h,52 :: 		return key;
0x00E7	0x083D      	MOVF       kp_scan_key_L0, 0
0x00E8	0x00F0      	MOVWF      R0
;keypad4x3.h,53 :: 		}
L_end_kp_scan:
0x00E9	0x0008      	RETURN
; end of _kp_scan
_atoi:
;__Lib_CStdlib.c,181 :: 		
;__Lib_CStdlib.c,186 :: 		
___atoi_skipws_atoi:
;__Lib_CStdlib.c,187 :: 		
0x00EA	0x1283      	BCF        STATUS, 5
0x00EB	0x1303      	BCF        STATUS, 6
0x00EC	0x083D      	MOVF       FARG_atoi_s, 0
0x00ED	0x0084      	MOVWF      FSR
0x00EE	0x0800      	MOVF       INDF, 0
0x00EF	0x00BE      	MOVWF      atoi_c_L0
0x00F0	0x01BF      	CLRF       atoi_c_L0+1
0x00F1	0x3000      	MOVLW      0
0x00F2	0x00BF      	MOVWF      atoi_c_L0+1
;__Lib_CStdlib.c,188 :: 		
0x00F3	0x3000      	MOVLW      0
0x00F4	0x063F      	XORWF      atoi_c_L0+1, 0
0x00F5	0x1D03      	BTFSS      STATUS, 2
0x00F6	0x28F9      	GOTO       L__atoi99
0x00F7	0x3020      	MOVLW      32
0x00F8	0x063E      	XORWF      atoi_c_L0, 0
L__atoi99:
0x00F9	0x1903      	BTFSC      STATUS, 2
0x00FA	0x2904      	GOTO       L__atoi90
0x00FB	0x3000      	MOVLW      0
0x00FC	0x063F      	XORWF      atoi_c_L0+1, 0
0x00FD	0x1D03      	BTFSS      STATUS, 2
0x00FE	0x2901      	GOTO       L__atoi100
0x00FF	0x3009      	MOVLW      9
0x0100	0x063E      	XORWF      atoi_c_L0, 0
L__atoi100:
0x0101	0x1903      	BTFSC      STATUS, 2
0x0102	0x2904      	GOTO       L__atoi90
0x0103	0x2906      	GOTO       L_atoi55
L__atoi90:
;__Lib_CStdlib.c,189 :: 		
0x0104	0x0ABD      	INCF       FARG_atoi_s, 1
;__Lib_CStdlib.c,190 :: 		
0x0105	0x28EA      	GOTO       ___atoi_skipws_atoi
;__Lib_CStdlib.c,191 :: 		
L_atoi55:
;__Lib_CStdlib.c,192 :: 		
0x0106	0x01C0      	CLRF       atoi_a_L0
0x0107	0x01C1      	CLRF       atoi_a_L0+1
;__Lib_CStdlib.c,193 :: 		
0x0108	0x01C2      	CLRF       atoi_sign_L0
0x0109	0x01C3      	CLRF       atoi_sign_L0+1
;__Lib_CStdlib.c,194 :: 		
0x010A	0x3000      	MOVLW      0
0x010B	0x063F      	XORWF      atoi_c_L0+1, 0
0x010C	0x1D03      	BTFSS      STATUS, 2
0x010D	0x2910      	GOTO       L__atoi101
0x010E	0x302D      	MOVLW      45
0x010F	0x063E      	XORWF      atoi_c_L0, 0
L__atoi101:
0x0110	0x1D03      	BTFSS      STATUS, 2
0x0111	0x2917      	GOTO       L_atoi56
;__Lib_CStdlib.c,195 :: 		
0x0112	0x0AC2      	INCF       atoi_sign_L0, 1
0x0113	0x1903      	BTFSC      STATUS, 2
0x0114	0x0AC3      	INCF       atoi_sign_L0+1, 1
;__Lib_CStdlib.c,196 :: 		
0x0115	0x0ABD      	INCF       FARG_atoi_s, 1
;__Lib_CStdlib.c,197 :: 		
0x0116	0x2920      	GOTO       L_atoi57
L_atoi56:
;__Lib_CStdlib.c,199 :: 		
0x0117	0x3000      	MOVLW      0
0x0118	0x063F      	XORWF      atoi_c_L0+1, 0
0x0119	0x1D03      	BTFSS      STATUS, 2
0x011A	0x291D      	GOTO       L__atoi102
0x011B	0x302B      	MOVLW      43
0x011C	0x063E      	XORWF      atoi_c_L0, 0
L__atoi102:
0x011D	0x1D03      	BTFSS      STATUS, 2
0x011E	0x2920      	GOTO       L_atoi58
;__Lib_CStdlib.c,200 :: 		
0x011F	0x0ABD      	INCF       FARG_atoi_s, 1
L_atoi58:
L_atoi57:
;__Lib_CStdlib.c,201 :: 		
___atoi_conv_atoi:
;__Lib_CStdlib.c,202 :: 		
0x0120	0x083D      	MOVF       FARG_atoi_s, 0
0x0121	0x0084      	MOVWF      FSR
0x0122	0x0800      	MOVF       INDF, 0
0x0123	0x00BE      	MOVWF      atoi_c_L0
0x0124	0x01BF      	CLRF       atoi_c_L0+1
0x0125	0x3000      	MOVLW      0
0x0126	0x00BF      	MOVWF      atoi_c_L0+1
;__Lib_CStdlib.c,203 :: 		
0x0127	0x083E      	MOVF       atoi_c_L0, 0
0x0128	0x00C4      	MOVWF      FARG_isdigit_character
0x0129	0x2065      	CALL       _isdigit
0x012A	0x0870      	MOVF       R0, 0
0x012B	0x1903      	BTFSC      STATUS, 2
0x012C	0x2948      	GOTO       L_atoi59
;__Lib_CStdlib.c,204 :: 		
0x012D	0x0840      	MOVF       atoi_a_L0, 0
0x012E	0x00F0      	MOVWF      R0
0x012F	0x0841      	MOVF       atoi_a_L0+1, 0
0x0130	0x00F1      	MOVWF      R0+1
0x0131	0x300A      	MOVLW      10
0x0132	0x00F4      	MOVWF      R4
0x0133	0x3000      	MOVLW      0
0x0134	0x00F5      	MOVWF      R4+1
0x0135	0x2026      	CALL       _Mul_16X16_U
0x0136	0x3030      	MOVLW      48
0x0137	0x023E      	SUBWF      atoi_c_L0, 0
0x0138	0x00F2      	MOVWF      R2
0x0139	0x3000      	MOVLW      0
0x013A	0x1C03      	BTFSS      STATUS, 0
0x013B	0x3E01      	ADDLW      1
0x013C	0x023F      	SUBWF      atoi_c_L0+1, 0
0x013D	0x00F3      	MOVWF      R2+1
0x013E	0x0872      	MOVF       R2, 0
0x013F	0x0770      	ADDWF      R0, 0
0x0140	0x00C0      	MOVWF      atoi_a_L0
0x0141	0x0871      	MOVF       R0+1, 0
0x0142	0x1803      	BTFSC      STATUS, 0
0x0143	0x3E01      	ADDLW      1
0x0144	0x0773      	ADDWF      R2+1, 0
0x0145	0x00C1      	MOVWF      atoi_a_L0+1
;__Lib_CStdlib.c,205 :: 		
0x0146	0x0ABD      	INCF       FARG_atoi_s, 1
;__Lib_CStdlib.c,206 :: 		
0x0147	0x2920      	GOTO       ___atoi_conv_atoi
;__Lib_CStdlib.c,207 :: 		
L_atoi59:
;__Lib_CStdlib.c,208 :: 		
0x0148	0x0842      	MOVF       atoi_sign_L0, 0
0x0149	0x0443      	IORWF      atoi_sign_L0+1, 0
0x014A	0x1903      	BTFSC      STATUS, 2
0x014B	0x2955      	GOTO       L_atoi60
;__Lib_CStdlib.c,209 :: 		
0x014C	0x0840      	MOVF       atoi_a_L0, 0
0x014D	0x3C00      	SUBLW      0
0x014E	0x00F0      	MOVWF      R0
0x014F	0x0841      	MOVF       atoi_a_L0+1, 0
0x0150	0x1C03      	BTFSS      STATUS, 0
0x0151	0x3E01      	ADDLW      1
0x0152	0x01F1      	CLRF       R0+1
0x0153	0x02F1      	SUBWF      R0+1, 1
0x0154	0x2959      	GOTO       L_end_atoi
L_atoi60:
;__Lib_CStdlib.c,210 :: 		
0x0155	0x0840      	MOVF       atoi_a_L0, 0
0x0156	0x00F0      	MOVWF      R0
0x0157	0x0841      	MOVF       atoi_a_L0+1, 0
0x0158	0x00F1      	MOVWF      R0+1
;__Lib_CStdlib.c,211 :: 		
L_end_atoi:
0x0159	0x0008      	RETURN
; end of _atoi
_blink:
;Loop counter.c,53 :: 		void blink(short seg){
;Loop counter.c,54 :: 		if(seg == 0){
0x015A	0x1283      	BCF        STATUS, 5
0x015B	0x1303      	BCF        STATUS, 6
0x015C	0x083D      	MOVF       FARG_blink_seg, 0
0x015D	0x3A00      	XORLW      0
0x015E	0x1D03      	BTFSS      STATUS, 2
0x015F	0x2970      	GOTO       L_blink27
;Loop counter.c,55 :: 		masking(digit[0]);
0x0160	0x082A      	MOVF       _digit, 0
0x0161	0x00C4      	MOVWF      FARG_masking_temp
0x0162	0x2016      	CALL       _masking
;Loop counter.c,56 :: 		digit_1 = 1; delay_ms(1); clear_digit();
0x0163	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x0164	0x3003      	MOVLW      3
0x0165	0x00FC      	MOVWF      R12
0x0166	0x3097      	MOVLW      151
0x0167	0x00FD      	MOVWF      R13
L_blink28:
0x0168	0x0BFD      	DECFSZ     R13, 1
0x0169	0x2968      	GOTO       L_blink28
0x016A	0x0BFC      	DECFSZ     R12, 1
0x016B	0x2968      	GOTO       L_blink28
0x016C	0x0000      	NOP
0x016D	0x0000      	NOP
0x016E	0x205E      	CALL       _clear_digit
;Loop counter.c,57 :: 		}
0x016F	0x29AB      	GOTO       L_blink29
L_blink27:
;Loop counter.c,58 :: 		else if(seg == 1){
0x0170	0x083D      	MOVF       FARG_blink_seg, 0
0x0171	0x3A01      	XORLW      1
0x0172	0x1D03      	BTFSS      STATUS, 2
0x0173	0x2984      	GOTO       L_blink30
;Loop counter.c,59 :: 		masking(digit[1]);
0x0174	0x082B      	MOVF       _digit+1, 0
0x0175	0x00C4      	MOVWF      FARG_masking_temp
0x0176	0x2016      	CALL       _masking
;Loop counter.c,60 :: 		digit_2 = 1; delay_ms(1); clear_digit();
0x0177	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
0x0178	0x3003      	MOVLW      3
0x0179	0x00FC      	MOVWF      R12
0x017A	0x3097      	MOVLW      151
0x017B	0x00FD      	MOVWF      R13
L_blink31:
0x017C	0x0BFD      	DECFSZ     R13, 1
0x017D	0x297C      	GOTO       L_blink31
0x017E	0x0BFC      	DECFSZ     R12, 1
0x017F	0x297C      	GOTO       L_blink31
0x0180	0x0000      	NOP
0x0181	0x0000      	NOP
0x0182	0x205E      	CALL       _clear_digit
;Loop counter.c,61 :: 		}
0x0183	0x29AB      	GOTO       L_blink32
L_blink30:
;Loop counter.c,62 :: 		else if(seg == 2){
0x0184	0x083D      	MOVF       FARG_blink_seg, 0
0x0185	0x3A02      	XORLW      2
0x0186	0x1D03      	BTFSS      STATUS, 2
0x0187	0x2998      	GOTO       L_blink33
;Loop counter.c,63 :: 		masking(digit[2]);
0x0188	0x082C      	MOVF       _digit+2, 0
0x0189	0x00C4      	MOVWF      FARG_masking_temp
0x018A	0x2016      	CALL       _masking
;Loop counter.c,64 :: 		digit_3 = 1; delay_ms(1); clear_digit();
0x018B	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
0x018C	0x3003      	MOVLW      3
0x018D	0x00FC      	MOVWF      R12
0x018E	0x3097      	MOVLW      151
0x018F	0x00FD      	MOVWF      R13
L_blink34:
0x0190	0x0BFD      	DECFSZ     R13, 1
0x0191	0x2990      	GOTO       L_blink34
0x0192	0x0BFC      	DECFSZ     R12, 1
0x0193	0x2990      	GOTO       L_blink34
0x0194	0x0000      	NOP
0x0195	0x0000      	NOP
0x0196	0x205E      	CALL       _clear_digit
;Loop counter.c,65 :: 		}
0x0197	0x29AB      	GOTO       L_blink35
L_blink33:
;Loop counter.c,66 :: 		else if(seg == 3){
0x0198	0x083D      	MOVF       FARG_blink_seg, 0
0x0199	0x3A03      	XORLW      3
0x019A	0x1D03      	BTFSS      STATUS, 2
0x019B	0x29AB      	GOTO       L_blink36
;Loop counter.c,67 :: 		masking(digit[3]);
0x019C	0x082D      	MOVF       _digit+3, 0
0x019D	0x00C4      	MOVWF      FARG_masking_temp
0x019E	0x2016      	CALL       _masking
;Loop counter.c,68 :: 		digit_4 = 1; delay_ms(1); clear_digit();
0x019F	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
0x01A0	0x3003      	MOVLW      3
0x01A1	0x00FC      	MOVWF      R12
0x01A2	0x3097      	MOVLW      151
0x01A3	0x00FD      	MOVWF      R13
L_blink37:
0x01A4	0x0BFD      	DECFSZ     R13, 1
0x01A5	0x29A4      	GOTO       L_blink37
0x01A6	0x0BFC      	DECFSZ     R12, 1
0x01A7	0x29A4      	GOTO       L_blink37
0x01A8	0x0000      	NOP
0x01A9	0x0000      	NOP
0x01AA	0x205E      	CALL       _clear_digit
;Loop counter.c,69 :: 		}
L_blink36:
L_blink35:
L_blink32:
L_blink29:
;Loop counter.c,70 :: 		}
L_end_blink:
0x01AB	0x0008      	RETURN
; end of _blink
_Delay_1sec:
;__Lib_Delays.c,55 :: 		void Delay_1sec() {
;__Lib_Delays.c,56 :: 		Delay_ms(1000);
0x01AC	0x300B      	MOVLW      11
0x01AD	0x1283      	BCF        STATUS, 5
0x01AE	0x1303      	BCF        STATUS, 6
0x01AF	0x00FB      	MOVWF      R11
0x01B0	0x3026      	MOVLW      38
0x01B1	0x00FC      	MOVWF      R12
0x01B2	0x305D      	MOVLW      93
0x01B3	0x00FD      	MOVWF      R13
L_Delay_1sec11:
0x01B4	0x0BFD      	DECFSZ     R13, 1
0x01B5	0x29B4      	GOTO       L_Delay_1sec11
0x01B6	0x0BFC      	DECFSZ     R12, 1
0x01B7	0x29B4      	GOTO       L_Delay_1sec11
0x01B8	0x0BFB      	DECFSZ     R11, 1
0x01B9	0x29B4      	GOTO       L_Delay_1sec11
0x01BA	0x0000      	NOP
0x01BB	0x0000      	NOP
;__Lib_Delays.c,57 :: 		}
L_end_Delay_1sec:
0x01BC	0x0008      	RETURN
; end of _Delay_1sec
_EEPROM_Write:
;__Lib_EEPROM.c,16 :: 		
;__Lib_EEPROM.c,20 :: 		
L_EEPROM_Write0:
0x01BD	0x1683      	BSF        STATUS, 5
0x01BE	0x1703      	BSF        STATUS, 6
0x01BF	0x1C8C      	BTFSS      EECON1, 1
0x01C0	0x29C3      	GOTO       L_EEPROM_Write1
0x01C1	0x0000      	NOP
0x01C2	0x29BD      	GOTO       L_EEPROM_Write0
L_EEPROM_Write1:
;__Lib_EEPROM.c,21 :: 		
0x01C3	0x1283      	BCF        STATUS, 5
0x01C4	0x1303      	BCF        STATUS, 6
0x01C5	0x083D      	MOVF       FARG_EEPROM_Write_Address, 0
0x01C6	0x1703      	BSF        STATUS, 6
0x01C7	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,22 :: 		
0x01C8	0x1303      	BCF        STATUS, 6
0x01C9	0x083E      	MOVF       FARG_EEPROM_Write_data_, 0
0x01CA	0x1703      	BSF        STATUS, 6
0x01CB	0x008C      	MOVWF      EEDATA
;__Lib_EEPROM.c,23 :: 		
0x01CC	0x1683      	BSF        STATUS, 5
0x01CD	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,24 :: 		
0x01CE	0x150C      	BSF        EECON1, 2
;__Lib_EEPROM.c,26 :: 		
0x01CF	0x080B      	MOVF       INTCON, 0
0x01D0	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,29 :: 		
0x01D1	0x138B      	BCF        INTCON, 7
;__Lib_EEPROM.c,30 :: 		
0x01D2	0x3055      	MOVLW      85
0x01D3	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,31 :: 		
0x01D4	0x30AA      	MOVLW      170
0x01D5	0x008D      	MOVWF      EECON2
;__Lib_EEPROM.c,32 :: 		
0x01D6	0x148C      	BSF        EECON1, 1
;__Lib_EEPROM.c,36 :: 		
0x01D7	0x1BF0      	BTFSC      R0, 7
0x01D8	0x29DB      	GOTO       L__EEPROM_Write4
0x01D9	0x138B      	BCF        INTCON, 7
0x01DA	0x29DC      	GOTO       L__EEPROM_Write5
L__EEPROM_Write4:
0x01DB	0x178B      	BSF        INTCON, 7
L__EEPROM_Write5:
;__Lib_EEPROM.c,37 :: 		
0x01DC	0x110C      	BCF        EECON1, 2
;__Lib_EEPROM.c,38 :: 		
L_end_EEPROM_Write:
0x01DD	0x0008      	RETURN
; end of _EEPROM_Write
_setup:
;Loop counter.c,72 :: 		void setup(){
;Loop counter.c,73 :: 		int de, x = 0;
0x01DE	0x1283      	BCF        STATUS, 5
0x01DF	0x1303      	BCF        STATUS, 6
0x01E0	0x01BB      	CLRF       setup_x_L0
0x01E1	0x01BC      	CLRF       setup_x_L0+1
;Loop counter.c,74 :: 		counter.full = 0;
0x01E2	0x01B4      	CLRF       _counter
0x01E3	0x01B5      	CLRF       _counter+1
;Loop counter.c,75 :: 		delay_1sec();
0x01E4	0x21AC      	CALL       _Delay_1sec
;Loop counter.c,77 :: 		while(1){
L_setup38:
;Loop counter.c,78 :: 		key = kp_scan();
0x01E5	0x2098      	CALL       _kp_scan
0x01E6	0x0870      	MOVF       R0, 0
0x01E7	0x00B8      	MOVWF      _key
;Loop counter.c,79 :: 		if(key >= '0' && key <= '9') digit[x] = key - 48;
0x01E8	0x3030      	MOVLW      48
0x01E9	0x0270      	SUBWF      R0, 0
0x01EA	0x1C03      	BTFSS      STATUS, 0
0x01EB	0x29F8      	GOTO       L_setup42
0x01EC	0x0838      	MOVF       _key, 0
0x01ED	0x3C39      	SUBLW      57
0x01EE	0x1C03      	BTFSS      STATUS, 0
0x01EF	0x29F8      	GOTO       L_setup42
L__setup75:
0x01F0	0x083B      	MOVF       setup_x_L0, 0
0x01F1	0x3E2A      	ADDLW      _digit
0x01F2	0x0084      	MOVWF      FSR
0x01F3	0x3030      	MOVLW      48
0x01F4	0x0238      	SUBWF      _key, 0
0x01F5	0x00F0      	MOVWF      R0
0x01F6	0x0870      	MOVF       R0, 0
0x01F7	0x0080      	MOVWF      INDF
L_setup42:
;Loop counter.c,80 :: 		if(key == '*') {
0x01F8	0x0838      	MOVF       _key, 0
0x01F9	0x3A2A      	XORLW      42
0x01FA	0x1D03      	BTFSS      STATUS, 2
0x01FB	0x2A1A      	GOTO       L_setup43
;Loop counter.c,81 :: 		delay_ms(300);
0x01FC	0x3004      	MOVLW      4
0x01FD	0x00FB      	MOVWF      R11
0x01FE	0x300C      	MOVLW      12
0x01FF	0x00FC      	MOVWF      R12
0x0200	0x3033      	MOVLW      51
0x0201	0x00FD      	MOVWF      R13
L_setup44:
0x0202	0x0BFD      	DECFSZ     R13, 1
0x0203	0x2A02      	GOTO       L_setup44
0x0204	0x0BFC      	DECFSZ     R12, 1
0x0205	0x2A02      	GOTO       L_setup44
0x0206	0x0BFB      	DECFSZ     R11, 1
0x0207	0x2A02      	GOTO       L_setup44
0x0208	0x0000      	NOP
0x0209	0x0000      	NOP
;Loop counter.c,82 :: 		x++;
0x020A	0x0ABB      	INCF       setup_x_L0, 1
0x020B	0x1903      	BTFSC      STATUS, 2
0x020C	0x0ABC      	INCF       setup_x_L0+1, 1
;Loop counter.c,83 :: 		if(x > 3) x = 0;
0x020D	0x3080      	MOVLW      128
0x020E	0x00F0      	MOVWF      R0
0x020F	0x3080      	MOVLW      128
0x0210	0x063C      	XORWF      setup_x_L0+1, 0
0x0211	0x0270      	SUBWF      R0, 0
0x0212	0x1D03      	BTFSS      STATUS, 2
0x0213	0x2A16      	GOTO       L__setup88
0x0214	0x083B      	MOVF       setup_x_L0, 0
0x0215	0x3C03      	SUBLW      3
L__setup88:
0x0216	0x1803      	BTFSC      STATUS, 0
0x0217	0x2A1A      	GOTO       L_setup45
0x0218	0x01BB      	CLRF       setup_x_L0
0x0219	0x01BC      	CLRF       setup_x_L0+1
L_setup45:
;Loop counter.c,84 :: 		}
L_setup43:
;Loop counter.c,85 :: 		if(key == '#') break;
0x021A	0x0838      	MOVF       _key, 0
0x021B	0x3A23      	XORLW      35
0x021C	0x1D03      	BTFSS      STATUS, 2
0x021D	0x2A1F      	GOTO       L_setup46
0x021E	0x2A82      	GOTO       L_setup39
L_setup46:
;Loop counter.c,87 :: 		for(de = 0; de < 100; de++){
0x021F	0x01B9      	CLRF       setup_de_L0
0x0220	0x01BA      	CLRF       setup_de_L0+1
L_setup47:
0x0221	0x3080      	MOVLW      128
0x0222	0x063A      	XORWF      setup_de_L0+1, 0
0x0223	0x00F0      	MOVWF      R0
0x0224	0x3080      	MOVLW      128
0x0225	0x0270      	SUBWF      R0, 0
0x0226	0x1D03      	BTFSS      STATUS, 2
0x0227	0x2A2A      	GOTO       L__setup89
0x0228	0x3064      	MOVLW      100
0x0229	0x0239      	SUBWF      setup_de_L0, 0
L__setup89:
0x022A	0x1803      	BTFSC      STATUS, 0
0x022B	0x2A6C      	GOTO       L_setup48
;Loop counter.c,88 :: 		masking(digit[0]);
0x022C	0x082A      	MOVF       _digit, 0
0x022D	0x00C4      	MOVWF      FARG_masking_temp
0x022E	0x2016      	CALL       _masking
;Loop counter.c,89 :: 		digit_1 = 1; delay_ms(1); clear_digit();
0x022F	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x0230	0x3003      	MOVLW      3
0x0231	0x00FC      	MOVWF      R12
0x0232	0x3097      	MOVLW      151
0x0233	0x00FD      	MOVWF      R13
L_setup50:
0x0234	0x0BFD      	DECFSZ     R13, 1
0x0235	0x2A34      	GOTO       L_setup50
0x0236	0x0BFC      	DECFSZ     R12, 1
0x0237	0x2A34      	GOTO       L_setup50
0x0238	0x0000      	NOP
0x0239	0x0000      	NOP
0x023A	0x205E      	CALL       _clear_digit
;Loop counter.c,90 :: 		masking(digit[1]);
0x023B	0x082B      	MOVF       _digit+1, 0
0x023C	0x00C4      	MOVWF      FARG_masking_temp
0x023D	0x2016      	CALL       _masking
;Loop counter.c,91 :: 		digit_2 = 1; delay_ms(1); clear_digit();
0x023E	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
0x023F	0x3003      	MOVLW      3
0x0240	0x00FC      	MOVWF      R12
0x0241	0x3097      	MOVLW      151
0x0242	0x00FD      	MOVWF      R13
L_setup51:
0x0243	0x0BFD      	DECFSZ     R13, 1
0x0244	0x2A43      	GOTO       L_setup51
0x0245	0x0BFC      	DECFSZ     R12, 1
0x0246	0x2A43      	GOTO       L_setup51
0x0247	0x0000      	NOP
0x0248	0x0000      	NOP
0x0249	0x205E      	CALL       _clear_digit
;Loop counter.c,92 :: 		masking(digit[2]);
0x024A	0x082C      	MOVF       _digit+2, 0
0x024B	0x00C4      	MOVWF      FARG_masking_temp
0x024C	0x2016      	CALL       _masking
;Loop counter.c,93 :: 		digit_3 = 1; delay_ms(1); clear_digit();
0x024D	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
0x024E	0x3003      	MOVLW      3
0x024F	0x00FC      	MOVWF      R12
0x0250	0x3097      	MOVLW      151
0x0251	0x00FD      	MOVWF      R13
L_setup52:
0x0252	0x0BFD      	DECFSZ     R13, 1
0x0253	0x2A52      	GOTO       L_setup52
0x0254	0x0BFC      	DECFSZ     R12, 1
0x0255	0x2A52      	GOTO       L_setup52
0x0256	0x0000      	NOP
0x0257	0x0000      	NOP
0x0258	0x205E      	CALL       _clear_digit
;Loop counter.c,94 :: 		masking(digit[3]);
0x0259	0x082D      	MOVF       _digit+3, 0
0x025A	0x00C4      	MOVWF      FARG_masking_temp
0x025B	0x2016      	CALL       _masking
;Loop counter.c,95 :: 		digit_4 = 1; delay_ms(1); clear_digit();
0x025C	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
0x025D	0x3003      	MOVLW      3
0x025E	0x00FC      	MOVWF      R12
0x025F	0x3097      	MOVLW      151
0x0260	0x00FD      	MOVWF      R13
L_setup53:
0x0261	0x0BFD      	DECFSZ     R13, 1
0x0262	0x2A61      	GOTO       L_setup53
0x0263	0x0BFC      	DECFSZ     R12, 1
0x0264	0x2A61      	GOTO       L_setup53
0x0265	0x0000      	NOP
0x0266	0x0000      	NOP
0x0267	0x205E      	CALL       _clear_digit
;Loop counter.c,87 :: 		for(de = 0; de < 100; de++){
0x0268	0x0AB9      	INCF       setup_de_L0, 1
0x0269	0x1903      	BTFSC      STATUS, 2
0x026A	0x0ABA      	INCF       setup_de_L0+1, 1
;Loop counter.c,96 :: 		}
0x026B	0x2A21      	GOTO       L_setup47
L_setup48:
;Loop counter.c,97 :: 		for(de = 0; de < 300; de++) blink(x);
0x026C	0x01B9      	CLRF       setup_de_L0
0x026D	0x01BA      	CLRF       setup_de_L0+1
L_setup54:
0x026E	0x3080      	MOVLW      128
0x026F	0x063A      	XORWF      setup_de_L0+1, 0
0x0270	0x00F0      	MOVWF      R0
0x0271	0x3080      	MOVLW      128
0x0272	0x3A01      	XORLW      1
0x0273	0x0270      	SUBWF      R0, 0
0x0274	0x1D03      	BTFSS      STATUS, 2
0x0275	0x2A78      	GOTO       L__setup90
0x0276	0x302C      	MOVLW      44
0x0277	0x0239      	SUBWF      setup_de_L0, 0
L__setup90:
0x0278	0x1803      	BTFSC      STATUS, 0
0x0279	0x2A81      	GOTO       L_setup55
0x027A	0x083B      	MOVF       setup_x_L0, 0
0x027B	0x00BD      	MOVWF      FARG_blink_seg
0x027C	0x215A      	CALL       _blink
0x027D	0x0AB9      	INCF       setup_de_L0, 1
0x027E	0x1903      	BTFSC      STATUS, 2
0x027F	0x0ABA      	INCF       setup_de_L0+1, 1
0x0280	0x2A6E      	GOTO       L_setup54
L_setup55:
;Loop counter.c,98 :: 		}
0x0281	0x29E5      	GOTO       L_setup38
L_setup39:
;Loop counter.c,99 :: 		for(x = 0; x < 4; x++) digit[x] = digit[x] + 48;
0x0282	0x01BB      	CLRF       setup_x_L0
0x0283	0x01BC      	CLRF       setup_x_L0+1
L_setup57:
0x0284	0x3080      	MOVLW      128
0x0285	0x063C      	XORWF      setup_x_L0+1, 0
0x0286	0x00F0      	MOVWF      R0
0x0287	0x3080      	MOVLW      128
0x0288	0x0270      	SUBWF      R0, 0
0x0289	0x1D03      	BTFSS      STATUS, 2
0x028A	0x2A8D      	GOTO       L__setup91
0x028B	0x3004      	MOVLW      4
0x028C	0x023B      	SUBWF      setup_x_L0, 0
L__setup91:
0x028D	0x1803      	BTFSC      STATUS, 0
0x028E	0x2A9F      	GOTO       L_setup58
0x028F	0x083B      	MOVF       setup_x_L0, 0
0x0290	0x3E2A      	ADDLW      _digit
0x0291	0x00F1      	MOVWF      R1
0x0292	0x0871      	MOVF       R1, 0
0x0293	0x0084      	MOVWF      FSR
0x0294	0x3030      	MOVLW      48
0x0295	0x0700      	ADDWF      INDF, 0
0x0296	0x00F0      	MOVWF      R0
0x0297	0x0871      	MOVF       R1, 0
0x0298	0x0084      	MOVWF      FSR
0x0299	0x0870      	MOVF       R0, 0
0x029A	0x0080      	MOVWF      INDF
0x029B	0x0ABB      	INCF       setup_x_L0, 1
0x029C	0x1903      	BTFSC      STATUS, 2
0x029D	0x0ABC      	INCF       setup_x_L0+1, 1
0x029E	0x2A84      	GOTO       L_setup57
L_setup58:
;Loop counter.c,100 :: 		digit[4] = 0;
0x029F	0x01AE      	CLRF       _digit+4
;Loop counter.c,101 :: 		countup.full = atoi(digit);
0x02A0	0x302A      	MOVLW      _digit
0x02A1	0x00BD      	MOVWF      FARG_atoi_s
0x02A2	0x20EA      	CALL       _atoi
0x02A3	0x0870      	MOVF       R0, 0
0x02A4	0x00AF      	MOVWF      _countup
0x02A5	0x0871      	MOVF       R0+1, 0
0x02A6	0x00B0      	MOVWF      _countup+1
;Loop counter.c,102 :: 		EEPROM_write(2, countup.lsb);
0x02A7	0x3002      	MOVLW      2
0x02A8	0x00BD      	MOVWF      FARG_EEPROM_Write_Address
0x02A9	0x082F      	MOVF       _countup, 0
0x02AA	0x00BE      	MOVWF      FARG_EEPROM_Write_data_
0x02AB	0x21BD      	CALL       _EEPROM_Write
;Loop counter.c,103 :: 		EEPROM_write(3, countup.msb);
0x02AC	0x3003      	MOVLW      3
0x02AD	0x1283      	BCF        STATUS, 5
0x02AE	0x1303      	BCF        STATUS, 6
0x02AF	0x00BD      	MOVWF      FARG_EEPROM_Write_Address
0x02B0	0x082F      	MOVF       _countup, 0
0x02B1	0x00BE      	MOVWF      FARG_EEPROM_Write_data_
0x02B2	0x21BD      	CALL       _EEPROM_Write
;Loop counter.c,104 :: 		}
L_end_setup:
0x02B3	0x0008      	RETURN
; end of _setup
_EEPROM_Read:
;__Lib_EEPROM.c,4 :: 		
;__Lib_EEPROM.c,5 :: 		
0x02B4	0x1283      	BCF        STATUS, 5
0x02B5	0x1303      	BCF        STATUS, 6
0x02B6	0x0839      	MOVF       FARG_EEPROM_Read_Address, 0
0x02B7	0x1703      	BSF        STATUS, 6
0x02B8	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.c,6 :: 		
0x02B9	0x1683      	BSF        STATUS, 5
0x02BA	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.c,12 :: 		
0x02BB	0x140C      	BSF        EECON1, 0
;__Lib_EEPROM.c,13 :: 		
0x02BC	0x1283      	BCF        STATUS, 5
0x02BD	0x080C      	MOVF       EEDATA, 0
0x02BE	0x00F0      	MOVWF      R0
;__Lib_EEPROM.c,14 :: 		
L_end_EEPROM_Read:
0x02BF	0x0008      	RETURN
; end of _EEPROM_Read
_segment_int:
;Loop counter.c,37 :: 		void segment_int(unsigned int count){
;Loop counter.c,38 :: 		digit[0] = count / 1000;
0x02C0	0x30E8      	MOVLW      232
0x02C1	0x1283      	BCF        STATUS, 5
0x02C2	0x1303      	BCF        STATUS, 6
0x02C3	0x00F4      	MOVWF      R4
0x02C4	0x3003      	MOVLW      3
0x02C5	0x00F5      	MOVWF      R4+1
0x02C6	0x0839      	MOVF       FARG_segment_int_count, 0
0x02C7	0x00F0      	MOVWF      R0
0x02C8	0x083A      	MOVF       FARG_segment_int_count+1, 0
0x02C9	0x00F1      	MOVWF      R0+1
0x02CA	0x207B      	CALL       _Div_16X16_U
0x02CB	0x0870      	MOVF       R0, 0
0x02CC	0x00AA      	MOVWF      _digit
;Loop counter.c,39 :: 		digit[1] = (count % 1000) / 100;
0x02CD	0x30E8      	MOVLW      232
0x02CE	0x00F4      	MOVWF      R4
0x02CF	0x3003      	MOVLW      3
0x02D0	0x00F5      	MOVWF      R4+1
0x02D1	0x0839      	MOVF       FARG_segment_int_count, 0
0x02D2	0x00F0      	MOVWF      R0
0x02D3	0x083A      	MOVF       FARG_segment_int_count+1, 0
0x02D4	0x00F1      	MOVWF      R0+1
0x02D5	0x207B      	CALL       _Div_16X16_U
0x02D6	0x0878      	MOVF       R8, 0
0x02D7	0x00F0      	MOVWF      R0
0x02D8	0x0879      	MOVF       R8+1, 0
0x02D9	0x00F1      	MOVWF      R0+1
0x02DA	0x3064      	MOVLW      100
0x02DB	0x00F4      	MOVWF      R4
0x02DC	0x3000      	MOVLW      0
0x02DD	0x00F5      	MOVWF      R4+1
0x02DE	0x207B      	CALL       _Div_16X16_U
0x02DF	0x0870      	MOVF       R0, 0
0x02E0	0x00AB      	MOVWF      _digit+1
;Loop counter.c,40 :: 		digit[2] = (count % 100) / 10;
0x02E1	0x3064      	MOVLW      100
0x02E2	0x00F4      	MOVWF      R4
0x02E3	0x3000      	MOVLW      0
0x02E4	0x00F5      	MOVWF      R4+1
0x02E5	0x0839      	MOVF       FARG_segment_int_count, 0
0x02E6	0x00F0      	MOVWF      R0
0x02E7	0x083A      	MOVF       FARG_segment_int_count+1, 0
0x02E8	0x00F1      	MOVWF      R0+1
0x02E9	0x207B      	CALL       _Div_16X16_U
0x02EA	0x0878      	MOVF       R8, 0
0x02EB	0x00F0      	MOVWF      R0
0x02EC	0x0879      	MOVF       R8+1, 0
0x02ED	0x00F1      	MOVWF      R0+1
0x02EE	0x300A      	MOVLW      10
0x02EF	0x00F4      	MOVWF      R4
0x02F0	0x3000      	MOVLW      0
0x02F1	0x00F5      	MOVWF      R4+1
0x02F2	0x207B      	CALL       _Div_16X16_U
0x02F3	0x0870      	MOVF       R0, 0
0x02F4	0x00AC      	MOVWF      _digit+2
;Loop counter.c,41 :: 		digit[3] = count % 10;
0x02F5	0x300A      	MOVLW      10
0x02F6	0x00F4      	MOVWF      R4
0x02F7	0x3000      	MOVLW      0
0x02F8	0x00F5      	MOVWF      R4+1
0x02F9	0x0839      	MOVF       FARG_segment_int_count, 0
0x02FA	0x00F0      	MOVWF      R0
0x02FB	0x083A      	MOVF       FARG_segment_int_count+1, 0
0x02FC	0x00F1      	MOVWF      R0+1
0x02FD	0x207B      	CALL       _Div_16X16_U
0x02FE	0x0878      	MOVF       R8, 0
0x02FF	0x00F0      	MOVWF      R0
0x0300	0x0879      	MOVF       R8+1, 0
0x0301	0x00F1      	MOVWF      R0+1
0x0302	0x0870      	MOVF       R0, 0
0x0303	0x00AD      	MOVWF      _digit+3
;Loop counter.c,43 :: 		masking(digit[0]);
0x0304	0x082A      	MOVF       _digit, 0
0x0305	0x00C4      	MOVWF      FARG_masking_temp
0x0306	0x2016      	CALL       _masking
;Loop counter.c,44 :: 		digit_1 = 1; delay_ms(1); clear_digit();
0x0307	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x0308	0x3003      	MOVLW      3
0x0309	0x00FC      	MOVWF      R12
0x030A	0x3097      	MOVLW      151
0x030B	0x00FD      	MOVWF      R13
L_segment_int23:
0x030C	0x0BFD      	DECFSZ     R13, 1
0x030D	0x2B0C      	GOTO       L_segment_int23
0x030E	0x0BFC      	DECFSZ     R12, 1
0x030F	0x2B0C      	GOTO       L_segment_int23
0x0310	0x0000      	NOP
0x0311	0x0000      	NOP
0x0312	0x205E      	CALL       _clear_digit
;Loop counter.c,45 :: 		masking(digit[1]);
0x0313	0x082B      	MOVF       _digit+1, 0
0x0314	0x00C4      	MOVWF      FARG_masking_temp
0x0315	0x2016      	CALL       _masking
;Loop counter.c,46 :: 		digit_2 = 1; delay_ms(1); clear_digit();
0x0316	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
0x0317	0x3003      	MOVLW      3
0x0318	0x00FC      	MOVWF      R12
0x0319	0x3097      	MOVLW      151
0x031A	0x00FD      	MOVWF      R13
L_segment_int24:
0x031B	0x0BFD      	DECFSZ     R13, 1
0x031C	0x2B1B      	GOTO       L_segment_int24
0x031D	0x0BFC      	DECFSZ     R12, 1
0x031E	0x2B1B      	GOTO       L_segment_int24
0x031F	0x0000      	NOP
0x0320	0x0000      	NOP
0x0321	0x205E      	CALL       _clear_digit
;Loop counter.c,47 :: 		masking(digit[2]);
0x0322	0x082C      	MOVF       _digit+2, 0
0x0323	0x00C4      	MOVWF      FARG_masking_temp
0x0324	0x2016      	CALL       _masking
;Loop counter.c,48 :: 		digit_3 = 1; delay_ms(1); clear_digit();
0x0325	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
0x0326	0x3003      	MOVLW      3
0x0327	0x00FC      	MOVWF      R12
0x0328	0x3097      	MOVLW      151
0x0329	0x00FD      	MOVWF      R13
L_segment_int25:
0x032A	0x0BFD      	DECFSZ     R13, 1
0x032B	0x2B2A      	GOTO       L_segment_int25
0x032C	0x0BFC      	DECFSZ     R12, 1
0x032D	0x2B2A      	GOTO       L_segment_int25
0x032E	0x0000      	NOP
0x032F	0x0000      	NOP
0x0330	0x205E      	CALL       _clear_digit
;Loop counter.c,49 :: 		masking(digit[3]);
0x0331	0x082D      	MOVF       _digit+3, 0
0x0332	0x00C4      	MOVWF      FARG_masking_temp
0x0333	0x2016      	CALL       _masking
;Loop counter.c,50 :: 		digit_4 = 1; delay_ms(1); clear_digit();
0x0334	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
0x0335	0x3003      	MOVLW      3
0x0336	0x00FC      	MOVWF      R12
0x0337	0x3097      	MOVLW      151
0x0338	0x00FD      	MOVWF      R13
L_segment_int26:
0x0339	0x0BFD      	DECFSZ     R13, 1
0x033A	0x2B39      	GOTO       L_segment_int26
0x033B	0x0BFC      	DECFSZ     R12, 1
0x033C	0x2B39      	GOTO       L_segment_int26
0x033D	0x0000      	NOP
0x033E	0x0000      	NOP
0x033F	0x205E      	CALL       _clear_digit
;Loop counter.c,51 :: 		}
L_end_segment_int:
0x0340	0x0008      	RETURN
; end of _segment_int
_kp_init:
;keypad4x3.h,16 :: 		void kp_init(){
;keypad4x3.h,17 :: 		kp_row1_dir = 0;
0x0341	0x1683      	BSF        STATUS, 5
0x0342	0x1303      	BCF        STATUS, 6
0x0343	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;keypad4x3.h,18 :: 		kp_row2_dir = 0;
0x0344	0x1287      	BCF        TRISC5_bit, BitPos(TRISC5_bit+0)
;keypad4x3.h,19 :: 		kp_row3_dir = 0;
0x0345	0x1207      	BCF        TRISC4_bit, BitPos(TRISC4_bit+0)
;keypad4x3.h,20 :: 		kp_row4_dir = 0;
0x0346	0x1187      	BCF        TRISC3_bit, BitPos(TRISC3_bit+0)
;keypad4x3.h,21 :: 		kp_col1_dir = 1;
0x0347	0x1507      	BSF        TRISC2_bit, BitPos(TRISC2_bit+0)
;keypad4x3.h,22 :: 		kp_col2_dir = 1;
0x0348	0x1487      	BSF        TRISC1_bit, BitPos(TRISC1_bit+0)
;keypad4x3.h,23 :: 		kp_col3_dir = 1;
0x0349	0x1407      	BSF        TRISC0_bit, BitPos(TRISC0_bit+0)
;keypad4x3.h,24 :: 		kp_row1 = 0;
0x034A	0x1283      	BCF        STATUS, 5
0x034B	0x1307      	BCF        RC6_bit, BitPos(RC6_bit+0)
;keypad4x3.h,25 :: 		kp_row2 = 0;
0x034C	0x1287      	BCF        RC5_bit, BitPos(RC5_bit+0)
;keypad4x3.h,26 :: 		kp_row3 = 0;
0x034D	0x1207      	BCF        RC4_bit, BitPos(RC4_bit+0)
;keypad4x3.h,27 :: 		kp_row4 = 0;
0x034E	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
;keypad4x3.h,28 :: 		}
L_end_kp_init:
0x034F	0x0008      	RETURN
; end of _kp_init
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0350	0x2074      	CALL       _____DoICP
0x0351	0x118A      	BCF        PCLATH, 3
0x0352	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0353	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0354	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0355	0x0AB6      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0356	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0357	0x0AB7      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0358	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0359	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x035A	0x2B50      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x035B	0x0008      	RETURN
; end of ___CC2DW
_main:
0x035C	0x30C0      	MOVLW      192
0x035D	0x1283      	BCF        STATUS, 5
0x035E	0x1303      	BCF        STATUS, 6
0x035F	0x00A0      	MOVWF      _anode
0x0360	0x30F9      	MOVLW      249
0x0361	0x00A1      	MOVWF      33
0x0362	0x30A4      	MOVLW      164
0x0363	0x00A2      	MOVWF      34
0x0364	0x30B0      	MOVLW      176
0x0365	0x00A3      	MOVWF      35
0x0366	0x3099      	MOVLW      153
0x0367	0x00A4      	MOVWF      36
0x0368	0x3092      	MOVLW      146
0x0369	0x00A5      	MOVWF      37
0x036A	0x3082      	MOVLW      130
0x036B	0x00A6      	MOVWF      38
0x036C	0x30F8      	MOVLW      248
0x036D	0x00A7      	MOVWF      39
0x036E	0x3080      	MOVLW      128
0x036F	0x00A8      	MOVWF      40
0x0370	0x3090      	MOVLW      144
0x0371	0x00A9      	MOVWF      41
;Loop counter.c,106 :: 		void main() {
;Loop counter.c,107 :: 		kp_init();
0x0372	0x2341      	CALL       _kp_init
;Loop counter.c,108 :: 		ADCON1 = 7;
0x0373	0x3007      	MOVLW      7
0x0374	0x1683      	BSF        STATUS, 5
0x0375	0x009F      	MOVWF      ADCON1
;Loop counter.c,109 :: 		TRISA = 0x00;
0x0376	0x0185      	CLRF       TRISA
;Loop counter.c,110 :: 		PORTA = 0x00;
0x0377	0x1283      	BCF        STATUS, 5
0x0378	0x0185      	CLRF       PORTA
;Loop counter.c,111 :: 		TRISB = 0x01;
0x0379	0x3001      	MOVLW      1
0x037A	0x1683      	BSF        STATUS, 5
0x037B	0x0086      	MOVWF      TRISB
;Loop counter.c,112 :: 		PORTB = 0x00;
0x037C	0x1283      	BCF        STATUS, 5
0x037D	0x0186      	CLRF       PORTB
;Loop counter.c,113 :: 		INTE_bit = 1;
0x037E	0x160B      	BSF        INTE_bit, BitPos(INTE_bit+0)
;Loop counter.c,114 :: 		INTF_bit = 0;
0x037F	0x108B      	BCF        INTF_bit, BitPos(INTF_bit+0)
;Loop counter.c,115 :: 		INTEDG_bit = 0;
0x0380	0x1683      	BSF        STATUS, 5
0x0381	0x1301      	BCF        INTEDG_bit, BitPos(INTEDG_bit+0)
;Loop counter.c,116 :: 		GIE_bit = 1;
0x0382	0x178B      	BSF        GIE_bit, BitPos(GIE_bit+0)
;Loop counter.c,117 :: 		IRF = 0;
0x0383	0x1283      	BCF        STATUS, 5
0x0384	0x1031      	BCF        _IRF, BitPos(_IRF+0)
;Loop counter.c,118 :: 		counter.lsb = EEPROM_read(0);
0x0385	0x01B9      	CLRF       FARG_EEPROM_Read_Address
0x0386	0x22B4      	CALL       _EEPROM_Read
0x0387	0x0870      	MOVF       R0, 0
0x0388	0x1303      	BCF        STATUS, 6
0x0389	0x00B4      	MOVWF      _counter
;Loop counter.c,119 :: 		counter.msb = EEPROM_read(1);
0x038A	0x3001      	MOVLW      1
0x038B	0x00B9      	MOVWF      FARG_EEPROM_Read_Address
0x038C	0x22B4      	CALL       _EEPROM_Read
0x038D	0x0870      	MOVF       R0, 0
0x038E	0x1303      	BCF        STATUS, 6
0x038F	0x00B4      	MOVWF      _counter
;Loop counter.c,120 :: 		countup.lsb = EEPROM_read(2);
0x0390	0x3002      	MOVLW      2
0x0391	0x00B9      	MOVWF      FARG_EEPROM_Read_Address
0x0392	0x22B4      	CALL       _EEPROM_Read
0x0393	0x0870      	MOVF       R0, 0
0x0394	0x1303      	BCF        STATUS, 6
0x0395	0x00AF      	MOVWF      _countup
;Loop counter.c,121 :: 		countup.msb = EEPROM_read(3);
0x0396	0x3003      	MOVLW      3
0x0397	0x00B9      	MOVWF      FARG_EEPROM_Read_Address
0x0398	0x22B4      	CALL       _EEPROM_Read
0x0399	0x0870      	MOVF       R0, 0
0x039A	0x1303      	BCF        STATUS, 6
0x039B	0x00AF      	MOVWF      _countup
;Loop counter.c,123 :: 		while(1){
L_main60:
;Loop counter.c,124 :: 		key = kp_scan();
0x039C	0x2098      	CALL       _kp_scan
0x039D	0x0870      	MOVF       R0, 0
0x039E	0x00B8      	MOVWF      _key
;Loop counter.c,125 :: 		if(key == '*') setup();
0x039F	0x0870      	MOVF       R0, 0
0x03A0	0x3A2A      	XORLW      42
0x03A1	0x1D03      	BTFSS      STATUS, 2
0x03A2	0x2BA4      	GOTO       L_main62
0x03A3	0x21DE      	CALL       _setup
L_main62:
;Loop counter.c,126 :: 		if(key == '#'){
0x03A4	0x1283      	BCF        STATUS, 5
0x03A5	0x1303      	BCF        STATUS, 6
0x03A6	0x0838      	MOVF       _key, 0
0x03A7	0x3A23      	XORLW      35
0x03A8	0x1D03      	BTFSS      STATUS, 2
0x03A9	0x2BBA      	GOTO       L_main63
;Loop counter.c,127 :: 		relay_f = ~relay_f;
0x03AA	0x3002      	MOVLW      2
0x03AB	0x06B1      	XORWF      _relay_f, 1
;Loop counter.c,128 :: 		delay_ms(300);
0x03AC	0x3004      	MOVLW      4
0x03AD	0x00FB      	MOVWF      R11
0x03AE	0x300C      	MOVLW      12
0x03AF	0x00FC      	MOVWF      R12
0x03B0	0x3033      	MOVLW      51
0x03B1	0x00FD      	MOVWF      R13
L_main64:
0x03B2	0x0BFD      	DECFSZ     R13, 1
0x03B3	0x2BB2      	GOTO       L_main64
0x03B4	0x0BFC      	DECFSZ     R12, 1
0x03B5	0x2BB2      	GOTO       L_main64
0x03B6	0x0BFB      	DECFSZ     R11, 1
0x03B7	0x2BB2      	GOTO       L_main64
0x03B8	0x0000      	NOP
0x03B9	0x0000      	NOP
;Loop counter.c,129 :: 		}
L_main63:
;Loop counter.c,131 :: 		segment_int(counter.full);
0x03BA	0x0834      	MOVF       _counter, 0
0x03BB	0x00B9      	MOVWF      FARG_segment_int_count
0x03BC	0x0835      	MOVF       _counter+1, 0
0x03BD	0x00BA      	MOVWF      FARG_segment_int_count+1
0x03BE	0x22C0      	CALL       _segment_int
;Loop counter.c,133 :: 		if(IRF && counter.full < countup.full) {
0x03BF	0x1C31      	BTFSS      _IRF, BitPos(_IRF+0)
0x03C0	0x2BF8      	GOTO       L_main67
0x03C1	0x0830      	MOVF       _countup+1, 0
0x03C2	0x0235      	SUBWF      _counter+1, 0
0x03C3	0x1D03      	BTFSS      STATUS, 2
0x03C4	0x2BC7      	GOTO       L__main93
0x03C5	0x082F      	MOVF       _countup, 0
0x03C6	0x0234      	SUBWF      _counter, 0
L__main93:
0x03C7	0x1803      	BTFSC      STATUS, 0
0x03C8	0x2BF8      	GOTO       L_main67
L__main77:
;Loop counter.c,134 :: 		if(relay_f) relay = 1;
0x03C9	0x1CB1      	BTFSS      _relay_f, BitPos(_relay_f+0)
0x03CA	0x2BCC      	GOTO       L_main68
0x03CB	0x1685      	BSF        RA5_bit, BitPos(RA5_bit+0)
L_main68:
;Loop counter.c,135 :: 		if(key == '5') counter.full--;
0x03CC	0x0838      	MOVF       _key, 0
0x03CD	0x3A35      	XORLW      53
0x03CE	0x1D03      	BTFSS      STATUS, 2
0x03CF	0x2BDD      	GOTO       L_main69
0x03D0	0x3001      	MOVLW      1
0x03D1	0x0234      	SUBWF      _counter, 0
0x03D2	0x00F0      	MOVWF      R0
0x03D3	0x3000      	MOVLW      0
0x03D4	0x1C03      	BTFSS      STATUS, 0
0x03D5	0x3E01      	ADDLW      1
0x03D6	0x0235      	SUBWF      _counter+1, 0
0x03D7	0x00F1      	MOVWF      R0+1
0x03D8	0x0870      	MOVF       R0, 0
0x03D9	0x00B4      	MOVWF      _counter
0x03DA	0x0871      	MOVF       R0+1, 0
0x03DB	0x00B5      	MOVWF      _counter+1
0x03DC	0x2BE9      	GOTO       L_main70
L_main69:
;Loop counter.c,136 :: 		else counter.full++;
0x03DD	0x0834      	MOVF       _counter, 0
0x03DE	0x3E01      	ADDLW      1
0x03DF	0x00F0      	MOVWF      R0
0x03E0	0x3000      	MOVLW      0
0x03E1	0x1803      	BTFSC      STATUS, 0
0x03E2	0x3E01      	ADDLW      1
0x03E3	0x0735      	ADDWF      _counter+1, 0
0x03E4	0x00F1      	MOVWF      R0+1
0x03E5	0x0870      	MOVF       R0, 0
0x03E6	0x00B4      	MOVWF      _counter
0x03E7	0x0871      	MOVF       R0+1, 0
0x03E8	0x00B5      	MOVWF      _counter+1
L_main70:
;Loop counter.c,137 :: 		EEPROM_write(0, counter.lsb);
0x03E9	0x01BD      	CLRF       FARG_EEPROM_Write_Address
0x03EA	0x0834      	MOVF       _counter, 0
0x03EB	0x00BE      	MOVWF      FARG_EEPROM_Write_data_
0x03EC	0x21BD      	CALL       _EEPROM_Write
;Loop counter.c,138 :: 		EEPROM_write(1, counter.msb);
0x03ED	0x3001      	MOVLW      1
0x03EE	0x1283      	BCF        STATUS, 5
0x03EF	0x1303      	BCF        STATUS, 6
0x03F0	0x00BD      	MOVWF      FARG_EEPROM_Write_Address
0x03F1	0x0834      	MOVF       _counter, 0
0x03F2	0x00BE      	MOVWF      FARG_EEPROM_Write_data_
0x03F3	0x21BD      	CALL       _EEPROM_Write
;Loop counter.c,139 :: 		IRF = 0;
0x03F4	0x1283      	BCF        STATUS, 5
0x03F5	0x1303      	BCF        STATUS, 6
0x03F6	0x1031      	BCF        _IRF, BitPos(_IRF+0)
;Loop counter.c,140 :: 		}
0x03F7	0x2BF9      	GOTO       L_main71
L_main67:
;Loop counter.c,141 :: 		else relay = 0;
0x03F8	0x1285      	BCF        RA5_bit, BitPos(RA5_bit+0)
L_main71:
;Loop counter.c,142 :: 		if(relay_f && counter.full < countup.full) relay = 1;
0x03F9	0x1CB1      	BTFSS      _relay_f, BitPos(_relay_f+0)
0x03FA	0x2C04      	GOTO       L_main74
0x03FB	0x0830      	MOVF       _countup+1, 0
0x03FC	0x0235      	SUBWF      _counter+1, 0
0x03FD	0x1D03      	BTFSS      STATUS, 2
0x03FE	0x2C01      	GOTO       L__main94
0x03FF	0x082F      	MOVF       _countup, 0
0x0400	0x0234      	SUBWF      _counter, 0
L__main94:
0x0401	0x1803      	BTFSC      STATUS, 0
0x0402	0x2C04      	GOTO       L_main74
L__main76:
0x0403	0x1685      	BSF        RA5_bit, BitPos(RA5_bit+0)
L_main74:
;Loop counter.c,143 :: 		}
0x0404	0x2B9C      	GOTO       L_main60
;Loop counter.c,144 :: 		}
L_end_main:
0x0405	0x2C05      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [18]    _interrupt
0x0016      [16]    _masking
0x0026      [43]    _Mul_16X16_U
0x0051      [13]    _Delay_1ms
0x005E       [7]    _clear_digit
0x0065      [15]    _isdigit
0x0074       [7]    _____DoICP
0x007B      [29]    _Div_16X16_U
0x0098      [82]    _kp_scan
0x00EA     [112]    _atoi
0x015A      [82]    _blink
0x01AC      [17]    _Delay_1sec
0x01BD      [33]    _EEPROM_Write
0x01DE     [214]    _setup
0x02B4      [12]    _EEPROM_Read
0x02C0     [129]    _segment_int
0x0341      [15]    _kp_init
0x0350      [12]    ___CC2DW
0x035C     [170]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0005       [0]    RA5_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA0_bit
0x0005       [0]    RA3_bit
0x0006       [1]    PORTB
0x0007       [0]    kp_col3
0x0007       [0]    kp_row3
0x0007       [0]    kp_row2
0x0007       [0]    kp_row1
0x0007       [0]    kp_col2
0x0007       [0]    kp_col1
0x0007       [0]    kp_row4
0x0007       [0]    RC5_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC3_bit
0x000A       [1]    PCLATH
0x000B       [0]    GIE_bit
0x000B       [0]    INTF_bit
0x000B       [1]    INTCON
0x000B       [0]    INTE_bit
0x0020      [10]    _anode
0x002A       [5]    _digit
0x002F       [2]    _countup
0x0031       [0]    _IRF
0x0031       [0]    _relay_f
0x0032       [1]    ___savePCLATH
0x0033       [1]    ___saveSTATUS
0x0034       [2]    _counter
0x0036       [2]    ___DoICPAddr
0x0038       [1]    _key
0x0039       [1]    FARG_EEPROM_Read_Address
0x0039       [2]    setup_de_L0
0x0039       [2]    FARG_segment_int_count
0x003B       [2]    setup_x_L0
0x003D       [1]    FARG_EEPROM_Write_Address
0x003D       [1]    FARG_blink_seg
0x003D       [1]    kp_scan_key_L0
0x003D       [1]    FARG_atoi_s
0x003E       [1]    FARG_EEPROM_Write_data_
0x003E       [2]    atoi_c_L0
0x0040       [2]    atoi_a_L0
0x0042       [2]    atoi_sign_L0
0x0044       [1]    FARG_masking_temp
0x0044       [1]    FARG_isdigit_character
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    INTEDG_bit
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    kp_row3_dir
0x0087       [0]    kp_row2_dir
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC0_bit
0x0087       [0]    kp_row1_dir
0x0087       [0]    TRISC5_bit
0x0087       [0]    kp_col3_dir
0x0087       [0]    kp_col2_dir
0x0087       [0]    TRISC4_bit
0x0087       [0]    kp_row4_dir
0x0087       [0]    kp_col1_dir
0x009F       [1]    ADCON1
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x018C       [1]    EECON1
0x018D       [1]    EECON2
