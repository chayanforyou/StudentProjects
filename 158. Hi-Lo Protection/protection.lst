MPASM  5.42                               A.S   12-17-2015  22:33:18         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE


                      00002         list
                      00003 ;{
                      00004 ;FILE F1 = E:\ELECTRONICS\S TECH BD\PROJECTS\PROTECTION\PROTECTION.BAS
                      00005 ;FILE F2 = E:\ELECTRONICS\S TECH BD\PROJECTS\PROTECTION\PROTECTION.PRP
                      00006 ;}
                      00007 ;[Variable Listing]
                      00008 ;adc,0028,DT_WORD,2
                      00009 ;delay,002A,DT_WORD,2
                      00010 ;blink,002C,DT_WORD,2
                      00011 ;delay_led,0007.0,DT_BIT
                      00012 ;low_led,0007.1,DT_BIT
                      00013 ;normal_led,0007.2,DT_BIT
                      00014 ;high_led,0007.3,DT_BIT
                      00015 ;relay,0007.4,DT_BIT
                      00016 ;[End Listing]
                      00017 ;[TOTAL VARS] 14

                      00019 #define CONFIG_REQ 1
MESSAGE[308]: WARNING LEVEL SUPERSEDED BY COMMAND LINE VALUE. (2)
                      00020  LIST  P = 16F676, F = INHX8M, W = 2, X = ON, R = DEC, MM = ON, N = 0, C = 255
  00000000            00021 INDF equ 0X0000
  00000001            00022 TMR0 equ 0X0001
  00000002            00023 PCL equ 0X0002
  00000003            00024 STATUS equ 0X0003
  00000004            00025 FSR equ 0X0004
  00000005            00026 PORTA equ 0X0005
  00000006            00027 PORTB equ 0X0006
  00000007            00028 PORTC equ 0X0007
  0000000A            00029 PCLATH equ 0X000A
  0000000B            00030 INTCON equ 0X000B
  0000000C            00031 PIR1 equ 0X000C
  0000000E            00032 TMR1L equ 0X000E
  0000000F            00033 TMR1LH equ 0X000F
  0000000F            00034 TMR1H equ 0X000F
  00000010            00035 T1CON equ 0X0010
  00000019            00036 CMCON equ 0X0019
  0000001E            00037 ADRESLH equ 0X001E
  0000001E            00038 ADRESH equ 0X001E
  0000001F            00039 ADCON0 equ 0X001F
  00000081            00040 OPTION_REG equ 0X0081
  00000085            00041 TRISA equ 0X0085
  00000086            00042 TRISB equ 0X0086
  00000087            00043 TRISC equ 0X0087
  0000008C            00044 PIE1 equ 0X008C
  0000008E            00045 PCON equ 0X008E
  00000090            00046 OSCCAL equ 0X0090
  00000091            00047 ANSEL equ 0X0091
  00000095            00048 WPU equ 0X0095
  00000095            00049 WPUA equ 0X0095
  00000096            00050 IOC equ 0X0096
  00000096            00051 IOCA equ 0X0096
  00000099            00052 VRCON equ 0X0099
  0000009A            00053 EEDATL equ 0X009A
  0000009A            00054 EEDATA equ 0X009A
  0000009A            00055 EEDAT equ 0X009A
  0000009B            00056 EEADR equ 0X009B
  0000009C            00057 EECON1 equ 0X009C
  0000009D            00058 EECON2 equ 0X009D
  0000009E            00059 ADRESL equ 0X009E
  0000009F            00060 ADCON1 equ 0X009F
  00000007            00061 IRP=7
  00000006            00062 RP1=6
  00000005            00063 RP0=5
  00000004            00064 NOT_TO=4
  00000003            00065 NOT_PD=3
  00000002            00066 Z=2
  00000001            00067 DC=1
  00000000            00068 C=0
  00000007            00069 GIE=7
  00000006            00070 PEIE=6
  00000005            00071 T0IE=5
  00000004            00072 INTE=4
  00000003            00073 RAIE=3
  00000002            00074 T0IF=2
  00000001            00075 INTF=1
  00000000            00076 RAIF=0
  00000007            00077 EEIF=7
  00000006            00078 ADIF=6
  00000003            00079 CMIF=3
  00000000            00080 T1IF=0
  00000000            00081 TMR1IF=0
  00000006            00082 TMR1GE=6
  00000005            00083 T1CKPS1=5
  00000004            00084 T1CKPS0=4
  00000003            00085 T1OSCEN=3
  00000002            00086 NOT_T1SYNC=2
  00000001            00087 TMR1CS=1
  00000000            00088 TMR1ON=0
  00000006            00089 COUT=6
  00000004            00090 CINV=4
  00000003            00091 CIS=3
  00000002            00092 CM2=2
  00000001            00093 CM1=1
  00000000            00094 CM0=0
  00000007            00095 ADFM=7
  00000006            00096 VCFG=6
  00000004            00097 CHS2=4
  00000003            00098 CHS1=3
  00000002            00099 CHS0=2
  00000001            00100 GO=1
  00000001            00101 NOT_DONE=1
  00000001            00102 GO_DONE=1
  00000001            00103 PP_GO_DONE=1
  00000000            00104 ADON=0
  00000007            00105 NOT_GPPU=7
  00000007            00106 NOT_RAPU=7
  00000006            00107 INTEDG=6
  00000005            00108 T0CS=5
  00000004            00109 T0SE=4
  00000003            00110 PSA=3
  00000002            00111 PS2=2
  00000001            00112 PS1=1
  00000000            00113 PS0=0
  00000007            00114 EEIE=7
  00000006            00115 ADIE=6
  00000003            00116 CMIE=3
  00000000            00117 T1IE=0
  00000000            00118 TMR1IE=0
  00000001            00119 NOT_POR=1
  00000000            00120 NOT_BOD=0
  00000007            00121 CAL5=7
  00000006            00122 CAL4=6
  00000005            00123 CAL3=5
  00000004            00124 CAL2=4
  00000003            00125 CAL1=3
  00000002            00126 CAL0=2
  00000007            00127 ANS7=7
  00000006            00128 ANS6=6
  00000005            00129 ANS5=5
  00000004            00130 ANS4=4
  00000003            00131 ANS3=3
  00000002            00132 ANS2=2
  00000001            00133 ANS1=1
  00000000            00134 ANS0=0
  00000007            00135 VREN=7
  00000005            00136 VRR=5
  00000003            00137 VR3=3
  00000002            00138 VR2=2
  00000001            00139 VR1=1
  00000000            00140 VR0=0
  00000003            00141 WRERR=3
  00000003            00142 PP_WRERR=3
  00000002            00143 WREN=2
  00000002            00144 PP_WREN=2
  00000001            00145 WR=1
  00000001            00146 PP_WR=1
  00000000            00147 RD=0
  00000000            00148 PP_RD=0
  00000006            00149 ADCS2=6
  00000005            00150 ADCS1=5
  00000004            00151 ADCS0=4
  000000FF            00152   __MAXRAM 0XFF
                      00153   __BADRAM 0X06, 0X08-0X09, 0X0D, 0X11-0X18, 0X1A-0X1D, 0X60-0X7F
                      00154   __BADRAM 0X86, 0X88-0X89, 0X8D, 0X8F, 0X92-0X94, 0X97-0X98, 0XE0-0XFF
  00003EFF            00155 CPD_ON equ 0X3EFF
  00003FFF            00156 CPD_OFF equ 0X3FFF
  00003F7F            00157 CP_ON equ 0X3F7F
  00003FFF            00158 CP_OFF equ 0X3FFF
  00003FFF            00159 BODEN equ 0X3FFF
  00003FBF            00160 BODEN_OFF equ 0X3FBF
  00003FFF            00161 MCLRE_ON equ 0X3FFF
  00003FDF            00162 MCLRE_OFF equ 0X3FDF
  00003FFF            00163 PWRTE_OFF equ 0X3FFF
  00003FEF            00164 PWRTE_ON equ 0X3FEF
  00003FFF            00165 WDT_ON equ 0X3FFF
  00003FF7            00166 WDT_OFF equ 0X3FF7
  00003FF8            00167 LP_OSC equ 0X3FF8
  00003FF9            00168 XT_OSC equ 0X3FF9
  00003FFA            00169 HS_OSC equ 0X3FFA
  00003FFB            00170 EC_OSC equ 0X3FFB
  00003FFC            00171 INTRC_OSC_NOCLKOUT equ 0X3FFC
  00003FFD            00172 INTRC_OSC_CLKOUT equ 0X3FFD
  00003FFE            00173 EXTRC_OSC_NOCLKOUT equ 0X3FFE
  00003FFF            00174 EXTRC_OSC_CLKOUT equ 0X3FFF
  00000000            00175 WDTE_OFF equ 0X0000
  00000008            00176 WDTE_ON equ 0X0008
  00000003            00177 FOSC_EC equ 0X0003
  00000007            00178 FOSC_EXTRCCLK equ 0X0007
  00000006            00179 FOSC_EXTRCIO equ 0X0006
  00000002            00180 FOSC_HS equ 0X0002
  00000005            00181 FOSC_INTRCCLK equ 0X0005
  00000004            00182 FOSC_INTRCIO equ 0X0004
  00000000            00183 FOSC_LP equ 0X0000
  00000001            00184 FOSC_XT equ 0X0001
  00000000            00185 BOREN_OFF equ 0X0000
  00000040            00186 BOREN_ON equ 0X0040

                      00190 #define __16F676 1
                      00191 #define XTAL 4
                      00192 #define _CORE 14
                      00193 #define _MAXRAM 64
                      00194 #define _RAM_END 0X0040
                      00195 #define _MAXMEM 1024
                      00196 #define _ADC 8
                      00197 #define _ADC_RES 10
                      00198 #define _EEPROM 128
                      00199 #define _PAGES 1
                      00200 #define _BANKS 2
                      00201 #define RAM_BANKS 1
                      00202 #define _USART 0
                      00203 #define _USB 0
                      00204 #define _FLASH 0
                      00205 #define _CWRITE_BLOCK 0
                      00206 #define BANK0_START 0X20
                      00207 #define BANK0_END 0X5F
                      00208 #define _SYSTEM_VARIABLE_COUNT 8
  00000000            00209 ram_bank = 0
  00000000            00210 CURRENT@PAGE = 0
  00000000            00211 DEST@PAGE = 0
                      00212 #define LCD#TYPE 0
                      00214 f@call macro PDEST
                      00215 if(PDEST < 1)
                      00216 else
                      00217 if(PDEST > $)
                      00218 else
                      00219 endif
                      00220 endif
                      00221         call PDEST
                      00222         endm
                      00223 F@JUMP macro PDEST
                      00224 if(PDEST < 1)
                      00225 else
                      00226 if(PDEST > $)
                      00227 else
                      00228 endif
                      00229 endif
                      00230         goto PDEST
                      00231         endm
                      00232 set@page macro PDEST
                      00233         endm
                      00234 s@b     macro pVarin
                      00235 if((pVarin & 384) == 0)
                      00236 if(ram_bank == 1)
                      00237         bcf 3,5
                      00238 endif
                      00239 if(ram_bank == 2)
                      00240         bcf 3,6
                      00241 endif
                      00242 if(ram_bank == 3)
                      00243         bcf 3,5
                      00244         bcf 3,6
                      00245 endif
                      00246 ram_bank = 0
                      00247 endif
                      00248 if((pVarin & 384) == 128)
                      00249 if(ram_bank == 0)
                      00250         bsf 3,5
                      00251 endif
                      00252 if(ram_bank == 2)
                      00253         bsf 3,5
                      00254         bcf 3,6
                      00255 endif
                      00256 if(ram_bank == 3)
                      00257         bcf 3,6
                      00258 endif
                      00259 ram_bank = 1
                      00260 endif
                      00261 if((pVarin & 384) == 256)
                      00262 if(ram_bank == 0)
                      00263         bsf 3,6
                      00264 endif
                      00265 if(ram_bank == 1)
                      00266         bcf 3,5
                      00267         bsf 3,6
                      00268 endif
                      00269 if(ram_bank == 3)
                      00270         bcf 3,5
                      00271 endif
                      00272 ram_bank = 2
                      00273 endif
                      00274         endm
                      00275 r@b     macro
                      00276 if((ram_bank & 1) != 0)
                      00277         bcf 3,5
                      00278 endif
                      00279 if((ram_bank & 2) != 0)
                      00280         bcf 3,6
                      00281 endif
                      00282 ram_bank = 0
                      00283         endm
                      00284 jump macro PLABEL
                      00285     goto PLABEL
                      00286     endm
                      00287 wreg_byte macro pByteOut
                      00288     s@b pByteOut
                      00289     movwf pByteOut
                      00290     r@b
                      00291     endm
                      00292 wreg_bit macro pVarOut,pBitout
                      00293     s@b pVarOut
                      00294     andlw 1
                      00295     btfsc STATUS,2
                      00296     bcf pVarOut,pBitout
                      00297     btfss STATUS,2
                      00298     bsf pVarOut,pBitout
                      00299     r@b
                      00300     endm
                      00301 wreg_word macro pWordOut
                      00302     s@b pWordOut
                      00303     movwf pWordOut
                      00304     s@b pWordOut+1
                      00305     clrf pWordOut+1
                      00306     r@b
                      00307     endm
                      00308 wreg_dword macro pDwordOut
                      00309     s@b pDwordOut+3
                      00310     clrf pDwordOut+3
                      00311     s@b pDwordOut+2
                      00312     clrf pDwordOut+2
                      00313     s@b pDwordOut+1
                      00314     clrf pDwordOut+1
                      00315     s@b pDwordOut
                      00316     movwf pDwordOut
                      00317     r@b
                      00318     endm
                      00319 byte_wreg macro pByteIn
                      00320     s@b pByteIn
                      00321     movf pByteIn,W
                      00322     r@b
                      00323     endm
                      00324 num_wreg macro pNumIn
                      00325     movlw (pNumIn & 255)
                      00326     endm
                      00327 num_byte macro pNumIn,pByteOut
                      00328     s@b pByteOut
                      00329 if(pNumIn == 0)
                      00330     clrf pByteOut
                      00331 else
                      00332     movlw (pNumIn & 255)
                      00333     movwf pByteOut
                      00334 endif
                      00335     r@b
                      00336     endm
                      00337 num_bit macro pNumIn,pVarOut,pBitout
                      00338     s@b pVarOut
                      00339 if((pNumIn & 1) == 1)
                      00340     bsf pVarOut,pBitout
                      00341 else
                      00342     bcf pVarOut,pBitout
                      00343 endif
                      00344     r@b
                      00345     endm
                      00346 num_word macro pNumIn,pWordOut
                      00347 if((pNumIn & 255) == 0)
                      00348     s@b pWordOut
                      00349     clrf pWordOut
                      00350 else
                      00351     s@b pWordOut
                      00352     movlw low (pNumIn)
                      00353     movwf pWordOut
                      00354 endif
                      00355 if(((pNumIn >> 8) & 255) == 0)
                      00356     s@b pWordOut+1
                      00357     clrf pWordOut+1
                      00358 else
                      00359     s@b pWordOut+1
                      00360     movlw high (pNumIn)
                      00361     movwf pWordOut+1
                      00362 endif
                      00363     r@b
                      00364     endm
                      00365 num_dword macro pNumIn,pDwordOut
                      00366 if ((pNumIn >> 24 & 255) == 0)
                      00367     s@b pDwordOut+3
                      00368     clrf pDwordOut+3
                      00369 else
                      00370     s@b pDwordOut+3
                      00371     movlw ((pNumIn >> 24) & 255)
                      00372     movwf pDwordOut+3
                      00373 endif
                      00374 if( ((pNumIn >> 16) & 255) == 0)
                      00375     s@b pDwordOut+2
                      00376     clrf pDwordOut+2
                      00377 else
                      00378     s@b pDwordOut+2
                      00379     movlw ((pNumIn >> 16) & 255)
                      00380     movwf pDwordOut+2
                      00381 endif
                      00382 if( ((pNumIn >> 8) & 255) == 0)
                      00383     s@b pDwordOut+1
                      00384     clrf pDwordOut+1
                      00385 else
                      00386     s@b pDwordOut+1
                      00387     movlw high (pNumIn)
                      00388     movwf pDwordOut+1
                      00389 endif
                      00390 if((pNumIn & 255) == 0)
                      00391     s@b pDwordOut
                      00392     clrf pDwordOut
                      00393 else
                      00394     s@b pDwordOut
                      00395     movlw low (pNumIn)
                      00396     movwf pDwordOut
                      00397 endif
                      00398     r@b
                      00399     endm
                      00400 bit_wreg macro pVarin,pBitIn
                      00401     s@b pVarin
                      00402     clrw
                      00403     btfsc pVarin,pBitIn
                      00404     movlw 1
                      00405     r@b
                      00406     endm
                      00407 bit_byte macro pVarin,pBitIn,pByteOut
                      00408     s@b pVarin
                      00409     clrw
                      00410     btfsc pVarin,pBitIn
                      00411     movlw 1
                      00412     s@b pByteOut
                      00413     movwf pByteOut
                      00414     r@b
                      00415     endm
                      00416 bit_bit macro pVarin,pBitIn,pVarOut,pBitout
                      00417 if((pVarin & 65408) == (pVarOut & 65408))
                      00418     s@b pVarOut
                      00419     btfsc pVarin,pBitIn
                      00420     bsf pVarOut,pBitout
                      00421     btfss pVarin,pBitIn
                      00422     bcf pVarOut,pBitout
                      00423 else
                      00424     s@b pVarin
                      00425     clrdc
                      00426     btfsc pVarin,pBitIn
                      00427     setdc
                      00428     s@b pVarOut
                      00429     skpndc
                      00430     bsf pVarOut,pBitout
                      00431     skpdc
                      00432     bcf pVarOut,pBitout
                      00433 endif
                      00434     endm
                      00435 bit_word macro pVarin,pBitIn,pWordOut
                      00436     s@b pWordOut+1
                      00437     clrf pWordOut+1
                      00438     bit_byte pVarin,pBitIn,pWordOut
                      00439     endm
                      00440 bit_dword macro pVarin,pBitIn,pDwordOut
                      00441     s@b pDwordOut+3
                      00442     clrf pDwordOut+3
                      00443     s@b pDwordOut+2
                      00444     clrf pDwordOut+2
                      00445     s@b pDwordOut+1
                      00446     clrf pDwordOut+1
                      00447     bit_byte pVarin,pBitIn,pDwordOut
                      00448     endm
                      00449 word_wreg macro pWordIn
                      00450     byte_wreg pWordIn
                      00451     endm
                      00452 word_byte macro pWordIn,pByteOut
                      00453     byte_byte pWordIn,pByteOut
                      00454     endm
                      00455 word_bit macro pWordIn,pVarOut,pBitout
                      00456     byte_bit pWordIn, pVarOut, pBitout
                      00457     endm
                      00458 word_word macro pWordIn,pWordOut
                      00459     s@b pWordIn+1
                      00460     movf pWordIn+1,W
                      00461     s@b pWordOut+1
                      00462     movwf pWordOut+1
                      00463     byte_byte pWordIn,pWordOut
                      00464     endm
                      00465 word_dword macro pWordIn,pDwordOut
                      00466     s@b pDwordOut+3
                      00467     clrf pDwordOut+3
                      00468     s@b pDwordOut+2
                      00469     clrf pDwordOut+2
                      00470     byte_byte pWordIn+1,pDwordOut+1
                      00471     byte_byte pWordIn,pDwordOut
                      00472     endm
                      00473 byte_byte macro pByteIn,pByteOut
                      00474     s@b pByteIn
                      00475     movf pByteIn,W
                      00476     s@b pByteOut
                      00477     movwf pByteOut
                      00478     r@b
                      00479     endm
                      00480 byte_word macro pByteIn,pWordOut
                      00481     s@b pWordOut+1
                      00482     clrf pWordOut+1
                      00483     byte_byte pByteIn,pWordOut
                      00484     endm
                      00485 byte_dword macro pByteIn,pDwordOut
                      00486     s@b pDwordOut+3
                      00487     clrf pDwordOut+3
                      00488     s@b pDwordOut+2
                      00489     clrf pDwordOut+2
                      00490     s@b pDwordOut+1
                      00491     clrf pDwordOut+1
                      00492     byte_byte pByteIn,pDwordOut
                      00493     endm
                      00494     byte_bit macro pByteIn,pVarOut,pBitout
                      00495 if((pByteIn & 65408) == (pVarOut & 65408))
                      00496     s@b pByteIn
                      00497     btfsc pByteIn,0
                      00498     bsf pVarOut,pBitout
                      00499     btfss pByteIn,0
                      00500     bcf pVarOut,pBitout
                      00501 else
                      00502     s@b pByteIn
                      00503     rrf pByteIn,W
                      00504     s@b pVarOut
                      00505     skpnc
                      00506     bsf pVarOut,pBitout
                      00507     skpc
                      00508     bcf pVarOut,pBitout
                      00509 endif
                      00510     r@b
                      00511     endm
                      00512 dword_wreg macro pDwordIn
                      00513     byte_wreg pDwordIn
                      00514     endm
                      00515 dword_byte macro pDwordIn,pByteOut
                      00516     byte_byte pDwordIn,pByteOut
                      00517     endm
                      00518 dword_word macro pDwordIn,pWordOut
                      00519     s@b pDwordIn+1
                      00520     movf pDwordIn+1,W
                      00521     s@b pWordOut+1
                      00522     movwf pWordOut+1
                      00523     byte_byte pDwordIn,pWordOut
                      00524     endm
                      00525 dword_dword macro pDwordIn,pDwordOut
                      00526     byte_byte pDwordIn+3,pDwordOut+3
                      00527     byte_byte pDwordIn+2,pDwordOut+2
                      00528     byte_byte pDwordIn+1,pDwordOut+1
                      00529     byte_byte pDwordIn,pDwordOut
                      00530     endm
                      00531 dword_bit macro pDwordIn,pVarOut,pBitout
                      00532     byte_bit pDwordIn,pVarOut,pBitout
                      00533     endm
  0000                00534 variable CURRENT@PAGE = 0
  0000                00535 variable PDESTINATION@PAGE = 0
                      00536 FIND@PAGE macro pLabelIn
                      00537 local CURRENT_ADDR = $
                      00538 local DEST_ADDR = pLabelIn
                      00539 if((CURRENT_ADDR >= 0X1800) && (CURRENT_ADDR <= 0X2000))
                      00540     CURRENT@PAGE = 3
                      00541 endif
                      00542 if((CURRENT_ADDR >= 0X1000) && (CURRENT_ADDR <= 0X1800))
                      00543     CURRENT@PAGE = 2
                      00544 endif
                      00545 if((CURRENT_ADDR >= 0X0800) && (CURRENT_ADDR <= 0X1000))
                      00546     CURRENT@PAGE = 1
                      00547 endif
                      00548 if((CURRENT_ADDR >= 0) && (CURRENT_ADDR <= 0X0800))
                      00549     CURRENT@PAGE = 0
                      00550 endif
                      00551 if((DEST_ADDR >= 0X1800) && (DEST_ADDR <= 0X2000))
                      00552     PDESTINATION@PAGE = 3
                      00553 endif
                      00554 if((DEST_ADDR >= 0X1000) && (DEST_ADDR <= 0X1800))
                      00555     PDESTINATION@PAGE = 2
                      00556 endif
                      00557 if((DEST_ADDR >= 0X0800) && (DEST_ADDR <= 0X1000))
                      00558     PDESTINATION@PAGE = 1
                      00559 endif
                      00560 if((DEST_ADDR >= 0) && (DEST_ADDR <= 0X0800))
                      00561     PDESTINATION@PAGE = 0
                      00562 endif
                      00563     endm
                      00564 NUM_FSR macro pNumIn
                      00565     num_byte pNumIn, FSR
                      00566 if (((pNumIn >> 8) & 255) == 1)
                      00567     bsf STATUS,7
                      00568 else
                      00569     bcf STATUS,7
                      00570 endif
                      00571     endm
                      00572 label_word macro pLabelIn,pWordOut
                      00573     movlw low (pLabelIn)
                      00574     s@b pWordOut
                      00575     movwf pWordOut
                      00576     movlw high (pLabelIn)
                      00577     s@b pWordOut
                      00578     movwf pWordOut+1
                      00579     r@b
                      00580     endm
  00000020            00583 PP0 = 32
  00000021            00584 PP0H = 33
  00000022            00585 PP1 = 34
  00000023            00586 PP1H = 35
  00000024            00587 PP3 = 36
  00000025            00588 PP4 = 37
  00000026            00589 PP7 = 38
  00000027            00590 PP7H = 39
  00000028            00591 adc = 40
  00000029            00592 adcH = 41
  0000002A            00593 delay = 42
  0000002B            00594 delayH = 43
  0000002C            00595 blink = 44
  0000002D            00596 blinkH = 45
                      00597 #define delay_led PORTC,0
                      00598 #define low_led PORTC,1
                      00599 #define normal_led PORTC,2
                      00600 #define high_led PORTC,3
                      00601 #define relay PORTC,4
                      00602 #define LEDblink_delay 1000
                      00603 #define LEDblink_delayH 3
                      00604 #define delayTime 50
                      00605 #define low_value 200
                      00606 #define high_value 800
                      00607 #define high_valueH 3
                      00608 #define low_TO_normal 220
                      00609 #define high_TO_normal 780
                      00610 #define high_TO_normalH 3
0000                  00611 proton#code#start
0000                  00612         org 0
0000   283D           00613         goto proton#main#start
  00000032            00614 ADIN_STIME = 50
  00000003            00615 ADIN_TAD = 3
  0000000A            00616 ADIN_RES = 10
0001                  00617 RD@AD
0001   390F           00618         andlw 15
0002   00A4           00619         movwf 36
0003   1003           00620         clrc
0004   0DA4           00621         rlf 36,F
0005   0DA4           00622         rlf 36,F
0006   081F           00623         movf 31,W
0007   39E0           00624         andlw 224
0008   0424           00625         iorwf 36,W
0009   3801           00626         iorlw 1
000A   009F           00627         movwf 31
000B   3032           00628         movlw 50
000C   2024           00629         call DL@US
000D   149F           00630         bsf 31,PP_GO_DONE
000E   189F           00631         btfsc 31,PP_GO_DONE
000F   280E           00632         goto $ - 1
0010   081E           00633         movf 30,W
0011   00A7           00634         movwf 39
0012   1683           00635         bsf 3,5
0013   081E           00636         movf 158,W
0014   1283           00637         bcf 3,5
0015   00A6           00638         movwf 38
0016   2839           00639         goto I@NT
0017                  00640 DL@MS
0017   01A3           00641         clrf 35
0018                  00642 DLY@W
0018   00A2           00643         movwf 34
0019                  00644 DLY@P
0019   30FF           00645         movlw 255
001A   07A2           00646         addwf 34,F
001B   1C03           00647         skpc
001C   07A3           00648         addwf 35,F
001D   1C03           00649         skpc
001E   2839           00650         goto I@NT
001F   0000           00651         nop
0020   01A1           00652         clrf 33
0021   3000           00653         movlw 0
0022   2025           00654         call DLUS@W
0023   2819           00655         goto DLY@P
0024                  00656 DL@US
0024   01A1           00657         clrf 33
0025                  00658 DLUS@W
0025   3EE8           00659         addlw 232
0026   00A0           00660         movwf 32
0027   09A1           00661         comf 33,F
0028   30FC           00662         movlw 252
0029   1C03           00663         skpc
002A   282E           00664         goto $ + 4
002B   07A0           00665         addwf 32,F
002C   1803           00666         skpnc
002D   282B           00667         goto $ - 2
002E   07A0           00668         addwf 32,F
002F   0000           00669         nop
0030   0FA1           00670         incfsz 33,F
0031   282B           00671         goto $ - 6
0032   1820           00672         btfsc 32,0
0033   2834           00673         goto $ + 1
0034   1CA0           00674         btfss 32,1
0035   2838           00675         goto $ + 3
0036   0000           00676         nop
0037   2838           00677         goto $ + 1
0038   0008           00678         return
0039                  00679 I@NT
0039   1383           00680         bcf 3,7
003A                  00681 I@NT2
003A   1283           00682         bcf 3,5
003B   1303           00683         bcf 3,6
003C   0008           00684         return
003D                  00685 proton#main#start
003D   0183           00686         clrf 3

  0000003E            00689 F2_SOF equ $ ; PROTECTION.PRP
  0000003E            00690 F2_EOF equ $ ; PROTECTION.PRP
  0000003E            00691 F1_SOF equ $ ; PROTECTION.BAS
  0000003E            00692 F1_000003 equ $ ; IN [PROTECTION.BAS] ANSEL = $01 : ADCON0 = $83
003E   3001           00693         movlw 1
003F   1683           00694         bsf STATUS,5
  00000001            00695 ram_bank = 1
0040   0091           00696         movwf ANSEL
0041   3083           00697         movlw 131
0042   1283           00698         bcf STATUS,5
  00000000            00699 ram_bank = 0
0043   009F           00700         movwf ADCON0
  00000044            00701 F1_000004 equ $ ; IN [PROTECTION.BAS] TRISC = $00 : PORTC = $00
0044   1683           00702         bsf STATUS,5
  00000001            00703 ram_bank = 1
0045   0187           00704         clrf TRISC
0046   1283           00705         bcf STATUS,5
  00000000            00706 ram_bank = 0
0047   0187           00707         clrf PORTC
0048                  00708 delay_loop
  00000048            00709 F1_000025 equ $ ; IN [PROTECTION.BAS] normal_led = 0 : relay = 0
0048   1107           00710         bcf PORTC,2
0049   1207           00711         bcf PORTC,4
  0000004A            00712 F1_000026 equ $ ; IN [PROTECTION.BAS] low_led = 0 : high_led = 0
004A   1087           00713         bcf PORTC,1
004B   1187           00714         bcf PORTC,3
  0000004C            00715 F1_000027 equ $ ; IN [PROTECTION.BAS] FOR delay = 0 TO delayTime
004C   01AB           00716         clrf delayH
004D   01AA           00717         clrf delay
004E                  00718 FR@LB2
004E   08AB           00719         movf delayH,F
004F   1D03           00720         btfss STATUS,2
0050   2881           00721         goto NX@LB3
0051   3033           00722         movlw 51
0052   022A           00723         subwf delay,W
0053   1803           00724         btfsc STATUS,0
0054   2881           00725         goto NX@LB3
  00000055            00726 F1_000028 equ $ ; IN [PROTECTION.BAS] FOR blink = 0 TO LEDblink_delay
0055   01AD           00727         clrf blinkH
0056   01AC           00728         clrf blink
0057                  00729 FR@LB5
0057   3003           00730         movlw 3
0058   022D           00731         subwf blinkH,W
0059   1C03           00732         btfss STATUS,0
005A   2861           00733         goto CP@LB3
005B   1D03           00734         btfss STATUS,2
005C   2869           00735         goto NX@LB6
005D   30E9           00736         movlw 233
005E   022C           00737         subwf blink,W
005F   1803           00738         btfsc STATUS,0
0060   2869           00739         goto NX@LB6
0061                  00740 CP@LB3
  00000061            00741 F1_000029 equ $ ; IN [PROTECTION.BAS] delay_led = 1
0061   1407           00742         bsf PORTC,0
  00000062            00743 F1_000030 equ $ ; IN [PROTECTION.BAS] DELAYMS 1
0062   3001           00744         movlw 1
0063   2017           00745         call DL@MS
  00000064            00746 F1_000031 equ $ ; IN [PROTECTION.BAS] GOSUB checkADC
0064   20B1           00747         call checkADC
0065                  00748 CT@LB7
  00000065            00749 F1_000032 equ $ ; IN [PROTECTION.BAS] NEXT blink
0065   0AAC           00750         incf blink,F
0066   1903           00751         btfsc STATUS,2
0067   0FAD           00752         incfsz blinkH,F
0068   2857           00753         goto FR@LB5
0069                  00754 NX@LB6
  00000069            00755 F1_000033 equ $ ; IN [PROTECTION.BAS] FOR blink = 0 TO LEDblink_delay
0069   01AD           00756         clrf blinkH
006A   01AC           00757         clrf blink
006B                  00758 FR@LB8
006B   3003           00759         movlw 3
006C   022D           00760         subwf blinkH,W
006D   1C03           00761         btfss STATUS,0
006E   2875           00762         goto CP@LB4
006F   1D03           00763         btfss STATUS,2
0070   287D           00764         goto NX@LB9
0071   30E9           00765         movlw 233
0072   022C           00766         subwf blink,W
0073   1803           00767         btfsc STATUS,0
0074   287D           00768         goto NX@LB9
0075                  00769 CP@LB4
  00000075            00770 F1_000034 equ $ ; IN [PROTECTION.BAS] delay_led = 0
0075   1007           00771         bcf PORTC,0
  00000076            00772 F1_000035 equ $ ; IN [PROTECTION.BAS] DELAYMS 1
0076   3001           00773         movlw 1
0077   2017           00774         call DL@MS
  00000078            00775 F1_000036 equ $ ; IN [PROTECTION.BAS] GOSUB checkADC
0078   20B1           00776         call checkADC
0079                  00777 CT@LB10
  00000079            00778 F1_000037 equ $ ; IN [PROTECTION.BAS] NEXT blink
0079   0AAC           00779         incf blink,F
007A   1903           00780         btfsc STATUS,2
007B   0FAD           00781         incfsz blinkH,F
007C   286B           00782         goto FR@LB8
007D                  00783 NX@LB9
007D                  00784 CT@LB4
  0000007D            00785 F1_000038 equ $ ; IN [PROTECTION.BAS] NEXT delay
007D   0AAA           00786         incf delay,F
007E   1903           00787         btfsc STATUS,2
007F   0FAB           00788         incfsz delayH,F
0080   284E           00789         goto FR@LB2
0081                  00790 NX@LB3
0081                  00791 normal_loop
  00000081            00792 F1_000041 equ $ ; IN [PROTECTION.BAS] delay_led = 0
0081   1007           00793         bcf PORTC,0
  00000082            00794 F1_000042 equ $ ; IN [PROTECTION.BAS] normal_led = 1 : relay = 1
0082   1507           00795         bsf PORTC,2
0083   1607           00796         bsf PORTC,4
  00000084            00797 F1_000043 equ $ ; IN [PROTECTION.BAS] low_led = 0 : high_led = 0
0084   1087           00798         bcf PORTC,1
0085   1187           00799         bcf PORTC,3
  00000086            00800 F1_000044 equ $ ; IN [PROTECTION.BAS] GOSUB checkADC
0086   20B1           00801         call checkADC
  00000087            00802 F1_000045 equ $ ; IN [PROTECTION.BAS] goto normal_loop
0087   2881           00803         goto normal_loop
0088                  00804 low_loop
  00000088            00805 F1_000048 equ $ ; IN [PROTECTION.BAS] delay_led = 0
0088   1007           00806         bcf PORTC,0
  00000089            00807 F1_000049 equ $ ; IN [PROTECTION.BAS] normal_led = 0 : relay = 0
0089   1107           00808         bcf PORTC,2
008A   1207           00809         bcf PORTC,4
  0000008B            00810 F1_000050 equ $ ; IN [PROTECTION.BAS] low_led = 1 : high_led = 0
008B   1487           00811         bsf PORTC,1
008C   1187           00812         bcf PORTC,3
  0000008D            00813 F1_000051 equ $ ; IN [PROTECTION.BAS] adc = ADIN 0
008D   3000           00814         movlw 0
008E   2001           00815         call RD@AD
008F   00A8           00816         movwf adc
0090   0827           00817         movf PP7H,W
0091   00A9           00818         movwf adcH
  00000092            00819 F1_000052 equ $ ; IN [PROTECTION.BAS] if adc >= low_TO_normal THEN delay_loop
0092   08A9           00820         movf adcH,F
0093   1D03           00821         btfss STATUS,2
0094   2899           00822         goto CP@LB5
0095   30DC           00823         movlw 220
0096   0228           00824         subwf adc,W
0097   1C03           00825         btfss STATUS,0
0098   289A           00826         goto BC@LL11
0099                  00827 CP@LB5
0099   2848           00828         goto delay_loop
009A                  00829 BC@LL11
  0000009A            00830 F1_000053 equ $ ; IN [PROTECTION.BAS] goto low_loop
009A   2888           00831         goto low_loop
009B                  00832 high_loop
  0000009B            00833 F1_000056 equ $ ; IN [PROTECTION.BAS] delay_led = 0
009B   1007           00834         bcf PORTC,0
  0000009C            00835 F1_000057 equ $ ; IN [PROTECTION.BAS] normal_led = 0 : relay = 0
009C   1107           00836         bcf PORTC,2
009D   1207           00837         bcf PORTC,4
  0000009E            00838 F1_000058 equ $ ; IN [PROTECTION.BAS] low_led = 0 : high_led = 1
009E   1087           00839         bcf PORTC,1
009F   1587           00840         bsf PORTC,3
  000000A0            00841 F1_000059 equ $ ; IN [PROTECTION.BAS] adc = ADIN 0
00A0   3000           00842         movlw 0
00A1   2001           00843         call RD@AD
00A2   00A8           00844         movwf adc
00A3   0827           00845         movf PP7H,W
00A4   00A9           00846         movwf adcH
  000000A5            00847 F1_000060 equ $ ; IN [PROTECTION.BAS] if adc <= high_TO_normal THEN delay_loop
00A5   3003           00848         movlw 3
00A6   0229           00849         subwf adcH,W
00A7   1C03           00850         btfss STATUS,0
00A8   28AF           00851         goto CP@LB6
00A9   1D03           00852         btfss STATUS,2
00AA   28B0           00853         goto BC@LL13
00AB   300D           00854         movlw 13
00AC   0228           00855         subwf adc,W
00AD   1803           00856         btfsc STATUS,0
00AE   28B0           00857         goto BC@LL13
00AF                  00858 CP@LB6
00AF   2848           00859         goto delay_loop
00B0                  00860 BC@LL13
  000000B0            00861 F1_000061 equ $ ; IN [PROTECTION.BAS] goto high_loop
00B0   289B           00862         goto high_loop
00B1                  00863 checkADC
  000000B1            00864 F1_000064 equ $ ; IN [PROTECTION.BAS] adc = ADIN 0
00B1   3000           00865         movlw 0
00B2   2001           00866         call RD@AD
00B3   00A8           00867         movwf adc
00B4   0827           00868         movf PP7H,W
00B5   00A9           00869         movwf adcH
  000000B6            00870 F1_000065 equ $ ; IN [PROTECTION.BAS] if adc <= low_value THEN low_loop
00B6   08A9           00871         movf adcH,F
00B7   1D03           00872         btfss STATUS,2
00B8   28BE           00873         goto BC@LL15
00B9   30C9           00874         movlw 201
00BA   0228           00875         subwf adc,W
00BB   1803           00876         btfsc STATUS,0
00BC   28BE           00877         goto BC@LL15
00BD   2888           00878         goto low_loop
00BE                  00879 BC@LL15
  000000BE            00880 F1_000066 equ $ ; IN [PROTECTION.BAS] if adc >= high_value THEN high_loop
00BE   3003           00881         movlw 3
00BF   0229           00882         subwf adcH,W
00C0   1C03           00883         btfss STATUS,0
00C1   28C9           00884         goto BC@LL17
00C2   1D03           00885         btfss STATUS,2
00C3   28C8           00886         goto CP@LB8
00C4   3020           00887         movlw 32
00C5   0228           00888         subwf adc,W
00C6   1C03           00889         btfss STATUS,0
00C7   28C9           00890         goto BC@LL17
00C8                  00891 CP@LB8
00C8   289B           00892         goto high_loop
00C9                  00893 BC@LL17
  000000C9            00894 F1_000067 equ $ ; IN [PROTECTION.BAS] return
00C9   0008           00895         return
  000000CA            00896 F1_EOF equ $ ; PROTECTION.BAS
00CA                  00897 PB@LB19
00CA   28CA           00898         goto PB@LB19
00CB                  00900 __EOF
2007   3E04           00901 __config INTRC_OSC_NOCLKOUT&WDT_OFF&PWRTE_ON&BODEN_OFF&CP_ON&CPD_ON&MCLRE_OFF
                      00902         end
MPASM  5.42                               A.S   12-17-2015  22:33:18         PAGE  2


SYMBOL TABLE
  LABEL                             VALUE 

ADC                               00000028
ADCH                              00000029
ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIN_RES                          0000000A
ADIN_STIME                        00000032
ADIN_TAD                          00000003
ADON                              00000000
ADRESH                            0000001E
ADRESL                            0000009E
ADRESLH                           0000001E
ANS0                              00000000
ANS1                              00000001
ANS2                              00000002
ANS3                              00000003
ANS4                              00000004
ANS5                              00000005
ANS6                              00000006
ANS7                              00000007
ANSEL                             00000091
BANK0_END                         0X5F
BANK0_START                       0X20
BC@LL11                           0000009A
BC@LL13                           000000B0
BC@LL15                           000000BE
BC@LL17                           000000C9
BIT_BIT                           
BIT_BYTE                          
BIT_DWORD                         
BIT_WORD                          
BIT_WREG                          
BLINK                             0000002C
BLINKH                            0000002D
BODEN                             00003FFF
BODEN_OFF                         00003FBF
BOREN_OFF                         00000000
BOREN_ON                          00000040
BYTE_BIT                          
BYTE_BYTE                         
BYTE_DWORD                        
BYTE_WORD                         
BYTE_WREG                         
C                                 00000000
CAL0                              00000002
CAL1                              00000003
CAL2                              00000004
CAL3                              00000005
CAL4                              00000006
CAL5                              00000007
CHECKADC                          000000B1
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CINV                              00000004
CIS                               00000003
CM0                               00000000
CM1                               00000001
CM2                               00000002
CMCON                             00000019
CMIE                              00000003
CMIF                              00000003
CONFIG_REQ                        1
COUT                              00000006
CP@LB3                            00000061
CP@LB4                            00000075
CP@LB5                            00000099
CP@LB6                            000000AF
CP@LB8                            000000C8
CPD_OFF                           00003FFF
CPD_ON                            00003EFF
CP_OFF                            00003FFF
CP_ON                             00003F7F
CT@LB10                           00000079
CT@LB4                            0000007D
CT@LB7                            00000065
CURRENT@PAGE                      00000000
DC                                00000001
DELAY                             0000002A
DELAYH                            0000002B
DELAYTIME                         50
DELAY_LED                         PORTC,0
DELAY_LOOP                        00000048
DEST@PAGE                         00000000
DL@MS                             00000017
DL@US                             00000024
DLUS@W                            00000025
DLY@P                             00000019
DLY@W                             00000018
DWORD_BIT                         
DWORD_BYTE                        
DWORD_DWORD                       
DWORD_WORD                        
DWORD_WREG                        
EC_OSC                            00003FFB
EEADR                             0000009B
EECON1                            0000009C
EECON2                            0000009D
EEDAT                             0000009A
EEDATA                            0000009A
EEDATL                            0000009A
EEIE                              00000007
EEIF                              00000007
EXTRC_OSC_CLKOUT                  00003FFF
EXTRC_OSC_NOCLKOUT                00003FFE
F1_000003                         0000003E
F1_000004                         00000044
F1_000025                         00000048
F1_000026                         0000004A
F1_000027                         0000004C
F1_000028                         00000055
F1_000029                         00000061
F1_000030                         00000062
F1_000031                         00000064
F1_000032                         00000065
F1_000033                         00000069
F1_000034                         00000075
F1_000035                         00000076
F1_000036                         00000078
F1_000037                         00000079
F1_000038                         0000007D
F1_000041                         00000081
F1_000042                         00000082
F1_000043                         00000084
F1_000044                         00000086
F1_000045                         00000087
F1_000048                         00000088
F1_000049                         00000089
F1_000050                         0000008B
F1_000051                         0000008D
F1_000052                         00000092
F1_000053                         0000009A
F1_000056                         0000009B
F1_000057                         0000009C
F1_000058                         0000009E
F1_000059                         000000A0
F1_000060                         000000A5
F1_000061                         000000B0
F1_000064                         000000B1
F1_000065                         000000B6
F1_000066                         000000BE
F1_000067                         000000C9
F1_EOF                            000000CA
F1_SOF                            0000003E
F2_EOF                            0000003E
F2_SOF                            0000003E
F@CALL                            
F@JUMP                            
FIND@PAGE                         
FOSC_EC                           00000003
FOSC_EXTRCCLK                     00000007
FOSC_EXTRCIO                      00000006
FOSC_HS                           00000002
FOSC_INTRCCLK                     00000005
FOSC_INTRCIO                      00000004
FOSC_LP                           00000000
FOSC_XT                           00000001
FR@LB2                            0000004E
FR@LB5                            00000057
FR@LB8                            0000006B
FSR                               00000004
GIE                               00000007
GO                                00000001
GO_DONE                           00000001
HIGH_LED                          PORTC,3
HIGH_LOOP                         0000009B
HIGH_TO_NORMAL                    780
HIGH_TO_NORMALH                   3
HIGH_VALUE                        800
HIGH_VALUEH                       3
HS_OSC                            00003FFA
I@NT                              00000039
I@NT2                             0000003A
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
INTRC_OSC_CLKOUT                  00003FFD
INTRC_OSC_NOCLKOUT                00003FFC
IOC                               00000096
IOCA                              00000096
IRP                               00000007
JUMP                              
LABEL_WORD                        
LCD#TYPE                          0
LEDBLINK_DELAY                    1000
LEDBLINK_DELAYH                   3
LOW_LED                           PORTC,1
LOW_LOOP                          00000088
LOW_TO_NORMAL                     220
LOW_VALUE                         200
LP_OSC                            00003FF8
MCLRE_OFF                         00003FDF
MCLRE_ON                          00003FFF
NORMAL_LED                        PORTC,2
NORMAL_LOOP                       00000081
NOT_BOD                           00000000
NOT_DONE                          00000001
NOT_GPPU                          00000007
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RAPU                          00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NUM_BIT                           
NUM_BYTE                          
NUM_DWORD                         
NUM_FSR                           
NUM_WORD                          
NUM_WREG                          
NX@LB3                            00000081
NX@LB6                            00000069
NX@LB9                            0000007D
OPTION_REG                        00000081
OSCCAL                            00000090
PB@LB19                           000000CA
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDESTINATION@PAGE                 00000000
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PP0                               00000020
PP0H                              00000021
PP1                               00000022
PP1H                              00000023
PP3                               00000024
PP4                               00000025
PP7                               00000026
PP7H                              00000027
PP_GO_DONE                        00000001
PP_RD                             00000000
PP_WR                             00000001
PP_WREN                           00000002
PP_WRERR                          00000003
PROTON#CODE#START                 00000000
PROTON#MAIN#START                 0000003D
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PWRTE_OFF                         00003FFF
PWRTE_ON                          00003FEF
R@B                               
RAIE                              00000003
RAIF                              00000000
RAM_BANK                          00000000
RAM_BANKS                         1
RD                                00000000
RD@AD                             00000001
RELAY                             PORTC,4
RP0                               00000005
RP1                               00000006
S@B                               
SET@PAGE                          
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1IE                              00000000
T1IF                              00000000
T1OSCEN                           00000003
TMR0                              00000001
TMR1CS                            00000001
TMR1GE                            00000006
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1LH                            0000000F
TMR1ON                            00000000
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
VCFG                              00000006
VR0                               00000000
VR1                               00000001
VR2                               00000002
VR3                               00000003
VRCON                             00000099
VREN                              00000007
VRR                               00000005
WDTE_OFF                          00000000
WDTE_ON                           00000008
WDT_OFF                           00003FF7
WDT_ON                            00003FFF
WORD_BIT                          
WORD_BYTE                         
WORD_DWORD                        
WORD_WORD                         
WORD_WREG                         
WPU                               00000095
WPUA                              00000095
WR                                00000001
WREG_BIT                          
WREG_BYTE                         
WREG_DWORD                        
WREG_WORD                         
WREN                              00000002
WRERR                             00000003
XTAL                              4
XT_OSC                            00003FF9
Z                                 00000002
_ADC                              8
_ADC_RES                          10
_BANKS                            2
_CORE                             14
_CWRITE_BLOCK                     0
_EEPROM                           128
_FLASH                            0
_MAXMEM                           1024
_MAXRAM                           64
_PAGES                            1
_RAM_END                          0X0040
_SYSTEM_VARIABLE_COUNT            8
_USART                            0
_USB                              0
__16F676                          1
__EOF                             000000CB


MEMORY USAGE MAP ('X' = USED,  '-' = UNUSED)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXX----- ---------------- ---------------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

ALL OTHER MEMORY BLOCKS UNUSED.

PROGRAM MEMORY WORDS USED:   203
PROGRAM MEMORY WORDS FREE:   821


ERRORS   :     0
WARNINGS :     0 REPORTED,    11 SUPPRESSED
MESSAGES :     1 REPORTED,     4 SUPPRESSED


