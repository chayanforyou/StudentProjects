;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 20-Jul-19 4:47:47 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x29EB      	GOTO       491
_Delay_1us:
;__Lib_Delays.c,7 :: 		void Delay_1us() {
;__Lib_Delays.c,8 :: 		Delay_us(1);
0x0003	0x0000      	NOP
0x0004	0x0000      	NOP
;__Lib_Delays.c,9 :: 		}
L_end_Delay_1us:
0x0005	0x0008      	RETURN
; end of _Delay_1us
_Delay_5500us:
;__Lib_Delays.c,31 :: 		void Delay_5500us() {
;__Lib_Delays.c,32 :: 		Delay_us(5500);
0x0006	0x300F      	MOVLW      15
0x0007	0x1283      	BCF        STATUS, 5
0x0008	0x1303      	BCF        STATUS, 6
0x0009	0x00FC      	MOVWF      R12
0x000A	0x3047      	MOVLW      71
0x000B	0x00FD      	MOVWF      R13
L_Delay_5500us5:
0x000C	0x0BFD      	DECFSZ     R13, 1
0x000D	0x280C      	GOTO       L_Delay_5500us5
0x000E	0x0BFC      	DECFSZ     R12, 1
0x000F	0x280C      	GOTO       L_Delay_5500us5
0x0010	0x0000      	NOP
0x0011	0x0000      	NOP
;__Lib_Delays.c,33 :: 		}
L_end_Delay_5500us:
0x0012	0x0008      	RETURN
; end of _Delay_5500us
_Delay_50us:
;__Lib_Delays.c,19 :: 		void Delay_50us() {
;__Lib_Delays.c,20 :: 		Delay_us(50);
0x0013	0x3021      	MOVLW      33
0x0014	0x1283      	BCF        STATUS, 5
0x0015	0x1303      	BCF        STATUS, 6
0x0016	0x00FD      	MOVWF      R13
L_Delay_50us2:
0x0017	0x0BFD      	DECFSZ     R13, 1
0x0018	0x2817      	GOTO       L_Delay_50us2
;__Lib_Delays.c,21 :: 		}
L_end_Delay_50us:
0x0019	0x0008      	RETURN
; end of _Delay_50us
_Lcd_Cmd:
;__Lib_Lcd.c,18 :: 		
;__Lib_Lcd.c,20 :: 		
0x001A	0x1283      	BCF        STATUS, 5
0x001B	0x1303      	BCF        STATUS, 6
0x001C	0x1BBA      	BTFSC      FARG_Lcd_Cmd_out_char, 7
0x001D	0x2820      	GOTO       L__Lcd_Cmd21
0x001E	0x1386      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x001F	0x2821      	GOTO       L__Lcd_Cmd22
L__Lcd_Cmd21:
0x0020	0x1786      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd22:
;__Lib_Lcd.c,21 :: 		
0x0021	0x1B3A      	BTFSC      FARG_Lcd_Cmd_out_char, 6
0x0022	0x2825      	GOTO       L__Lcd_Cmd23
0x0023	0x1306      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0024	0x2826      	GOTO       L__Lcd_Cmd24
L__Lcd_Cmd23:
0x0025	0x1706      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd24:
;__Lib_Lcd.c,22 :: 		
0x0026	0x1ABA      	BTFSC      FARG_Lcd_Cmd_out_char, 5
0x0027	0x282A      	GOTO       L__Lcd_Cmd25
0x0028	0x1286      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0029	0x282B      	GOTO       L__Lcd_Cmd26
L__Lcd_Cmd25:
0x002A	0x1686      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd26:
;__Lib_Lcd.c,23 :: 		
0x002B	0x1A3A      	BTFSC      FARG_Lcd_Cmd_out_char, 4
0x002C	0x282F      	GOTO       L__Lcd_Cmd27
0x002D	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x002E	0x2830      	GOTO       L__Lcd_Cmd28
L__Lcd_Cmd27:
0x002F	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd28:
;__Lib_Lcd.c,25 :: 		
0x0030	0x1832      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0031	0x2834      	GOTO       L__Lcd_Cmd29
0x0032	0x1586      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x0033	0x2835      	GOTO       L__Lcd_Cmd30
L__Lcd_Cmd29:
0x0034	0x1186      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd30:
;__Lib_Lcd.c,28 :: 		
0x0035	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,29 :: 		
0x0036	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,30 :: 		
0x0037	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,33 :: 		
0x0038	0x19BA      	BTFSC      FARG_Lcd_Cmd_out_char, 3
0x0039	0x283C      	GOTO       L__Lcd_Cmd31
0x003A	0x1386      	BCF        LCD_D7, BitPos(LCD_D7+0)
0x003B	0x283D      	GOTO       L__Lcd_Cmd32
L__Lcd_Cmd31:
0x003C	0x1786      	BSF        LCD_D7, BitPos(LCD_D7+0)
L__Lcd_Cmd32:
;__Lib_Lcd.c,34 :: 		
0x003D	0x193A      	BTFSC      FARG_Lcd_Cmd_out_char, 2
0x003E	0x2841      	GOTO       L__Lcd_Cmd33
0x003F	0x1306      	BCF        LCD_D6, BitPos(LCD_D6+0)
0x0040	0x2842      	GOTO       L__Lcd_Cmd34
L__Lcd_Cmd33:
0x0041	0x1706      	BSF        LCD_D6, BitPos(LCD_D6+0)
L__Lcd_Cmd34:
;__Lib_Lcd.c,35 :: 		
0x0042	0x18BA      	BTFSC      FARG_Lcd_Cmd_out_char, 1
0x0043	0x2846      	GOTO       L__Lcd_Cmd35
0x0044	0x1286      	BCF        LCD_D5, BitPos(LCD_D5+0)
0x0045	0x2847      	GOTO       L__Lcd_Cmd36
L__Lcd_Cmd35:
0x0046	0x1686      	BSF        LCD_D5, BitPos(LCD_D5+0)
L__Lcd_Cmd36:
;__Lib_Lcd.c,36 :: 		
0x0047	0x183A      	BTFSC      FARG_Lcd_Cmd_out_char, 0
0x0048	0x284B      	GOTO       L__Lcd_Cmd37
0x0049	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
0x004A	0x284C      	GOTO       L__Lcd_Cmd38
L__Lcd_Cmd37:
0x004B	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
L__Lcd_Cmd38:
;__Lib_Lcd.c,38 :: 		
0x004C	0x1832      	BTFSC      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x004D	0x2850      	GOTO       L__Lcd_Cmd39
0x004E	0x1586      	BSF        LCD_RS, BitPos(LCD_RS+0)
0x004F	0x2851      	GOTO       L__Lcd_Cmd40
L__Lcd_Cmd39:
0x0050	0x1186      	BCF        LCD_RS, BitPos(LCD_RS+0)
L__Lcd_Cmd40:
;__Lib_Lcd.c,40 :: 		
0x0051	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,41 :: 		
0x0052	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,42 :: 		
0x0053	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,44 :: 		
0x0054	0x1C32      	BTFSS      __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
0x0055	0x2858      	GOTO       L_Lcd_Cmd0
;__Lib_Lcd.c,45 :: 		
0x0056	0x2006      	CALL       _Delay_5500us
0x0057	0x2859      	GOTO       L_Lcd_Cmd1
L_Lcd_Cmd0:
;__Lib_Lcd.c,47 :: 		
0x0058	0x2013      	CALL       _Delay_50us
L_Lcd_Cmd1:
;__Lib_Lcd.c,48 :: 		
L_end_Lcd_Cmd:
0x0059	0x0008      	RETURN
; end of _Lcd_Cmd
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x005A	0x1283      	BCF        STATUS, 5
0x005B	0x1303      	BCF        STATUS, 6
0x005C	0x0834      	MOVF       ___DoICPAddr+1, 0
0x005D	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x005E	0x0833      	MOVF       ___DoICPAddr, 0
0x005F	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0060	0x0008      	RETURN
; end of _____DoICP
_Lcd_Chr_CP:
;__Lib_Lcd.c,50 :: 		
;__Lib_Lcd.c,52 :: 		
0x0061	0x1283      	BCF        STATUS, 5
0x0062	0x1303      	BCF        STATUS, 6
0x0063	0x1032      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,53 :: 		
0x0064	0x0839      	MOVF       FARG_Lcd_Chr_CP_out_char, 0
0x0065	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0066	0x201A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,54 :: 		
0x0067	0x1432      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,55 :: 		
L_end_Lcd_Chr_CP:
0x0068	0x0008      	RETURN
; end of _Lcd_Chr_CP
_Lcd_Init:
;__Lib_Lcd.c,84 :: 		
;__Lib_Lcd.c,86 :: 		
0x0069	0x1683      	BSF        STATUS, 5
0x006A	0x1303      	BCF        STATUS, 6
0x006B	0x1106      	BCF        LCD_EN_Direction, BitPos(LCD_EN_Direction+0)
;__Lib_Lcd.c,87 :: 		
0x006C	0x1186      	BCF        LCD_RS_Direction, BitPos(LCD_RS_Direction+0)
;__Lib_Lcd.c,88 :: 		
0x006D	0x1206      	BCF        LCD_D4_Direction, BitPos(LCD_D4_Direction+0)
;__Lib_Lcd.c,89 :: 		
0x006E	0x1286      	BCF        LCD_D5_Direction, BitPos(LCD_D5_Direction+0)
;__Lib_Lcd.c,90 :: 		
0x006F	0x1306      	BCF        LCD_D6_Direction, BitPos(LCD_D6_Direction+0)
;__Lib_Lcd.c,91 :: 		
0x0070	0x1386      	BCF        LCD_D7_Direction, BitPos(LCD_D7_Direction+0)
;__Lib_Lcd.c,93 :: 		
0x0071	0x1283      	BCF        STATUS, 5
0x0072	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,94 :: 		
0x0073	0x1186      	BCF        LCD_RS, BitPos(LCD_RS+0)
;__Lib_Lcd.c,95 :: 		
0x0074	0x1386      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,96 :: 		
0x0075	0x1306      	BCF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,97 :: 		
0x0076	0x1286      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,98 :: 		
0x0077	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,100 :: 		
0x0078	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,101 :: 		
0x0079	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,102 :: 		
0x007A	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,105 :: 		
0x007B	0x1686      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,106 :: 		
0x007C	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,107 :: 		
0x007D	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,108 :: 		
0x007E	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,109 :: 		
0x007F	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,110 :: 		
0x0080	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,112 :: 		
0x0081	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,113 :: 		
0x0082	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,114 :: 		
0x0083	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,115 :: 		
0x0084	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,117 :: 		
0x0085	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,118 :: 		
0x0086	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,119 :: 		
0x0087	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,120 :: 		
0x0088	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,123 :: 		
0x0089	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,124 :: 		
0x008A	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,125 :: 		
0x008B	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,126 :: 		
0x008C	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,127 :: 		
0x008D	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,130 :: 		
0x008E	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,131 :: 		
0x008F	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,132 :: 		
0x0090	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,134 :: 		
0x0091	0x1286      	BCF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,135 :: 		
0x0092	0x1786      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,136 :: 		
0x0093	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,137 :: 		
0x0094	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,138 :: 		
0x0095	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,139 :: 		
0x0096	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,142 :: 		
0x0097	0x1386      	BCF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,143 :: 		
0x0098	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,144 :: 		
0x0099	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,145 :: 		
0x009A	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,146 :: 		
0x009B	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,148 :: 		
0x009C	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,149 :: 		
0x009D	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,150 :: 		
0x009E	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,151 :: 		
0x009F	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,152 :: 		
0x00A0	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,155 :: 		
0x00A1	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,156 :: 		
0x00A2	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,157 :: 		
0x00A3	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,159 :: 		
0x00A4	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,160 :: 		
0x00A5	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,161 :: 		
0x00A6	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,162 :: 		
0x00A7	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,163 :: 		
0x00A8	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,166 :: 		
0x00A9	0x1206      	BCF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,167 :: 		
0x00AA	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,168 :: 		
0x00AB	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,169 :: 		
0x00AC	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,171 :: 		
0x00AD	0x1786      	BSF        LCD_D7, BitPos(LCD_D7+0)
;__Lib_Lcd.c,172 :: 		
0x00AE	0x1706      	BSF        LCD_D6, BitPos(LCD_D6+0)
;__Lib_Lcd.c,173 :: 		
0x00AF	0x1686      	BSF        LCD_D5, BitPos(LCD_D5+0)
;__Lib_Lcd.c,174 :: 		
0x00B0	0x1606      	BSF        LCD_D4, BitPos(LCD_D4+0)
;__Lib_Lcd.c,175 :: 		
0x00B1	0x1506      	BSF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,176 :: 		
0x00B2	0x2003      	CALL       _Delay_1us
;__Lib_Lcd.c,177 :: 		
0x00B3	0x1106      	BCF        LCD_EN, BitPos(LCD_EN+0)
;__Lib_Lcd.c,179 :: 		
0x00B4	0x2006      	CALL       _Delay_5500us
;__Lib_Lcd.c,181 :: 		
0x00B5	0x1432      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,182 :: 		
L_end_Lcd_Init:
0x00B6	0x0008      	RETURN
; end of _Lcd_Init
_strConstCopy:
;conveyer.c,95 :: 		void strConstCopy(char *dest, const char *source) {
;conveyer.c,96 :: 		while(*source)
L_strConstCopy14:
0x00B7	0x1283      	BCF        STATUS, 5
0x00B8	0x1303      	BCF        STATUS, 6
0x00B9	0x0836      	MOVF       FARG_strConstCopy_source, 0
0x00BA	0x00B3      	MOVWF      ___DoICPAddr
0x00BB	0x0837      	MOVF       FARG_strConstCopy_source+1, 0
0x00BC	0x00B4      	MOVWF      ___DoICPAddr+1
0x00BD	0x205A      	CALL       _____DoICP
0x00BE	0x118A      	BCF        PCLATH, 3
0x00BF	0x120A      	BCF        PCLATH, 4
0x00C0	0x00F0      	MOVWF      R0
0x00C1	0x0870      	MOVF       R0, 0
0x00C2	0x1903      	BTFSC      STATUS, 2
0x00C3	0x28D5      	GOTO       L_strConstCopy15
;conveyer.c,97 :: 		*dest++ = *source++;
0x00C4	0x0836      	MOVF       FARG_strConstCopy_source, 0
0x00C5	0x00B3      	MOVWF      ___DoICPAddr
0x00C6	0x0837      	MOVF       FARG_strConstCopy_source+1, 0
0x00C7	0x00B4      	MOVWF      ___DoICPAddr+1
0x00C8	0x205A      	CALL       _____DoICP
0x00C9	0x118A      	BCF        PCLATH, 3
0x00CA	0x120A      	BCF        PCLATH, 4
0x00CB	0x00F0      	MOVWF      R0
0x00CC	0x0835      	MOVF       FARG_strConstCopy_dest, 0
0x00CD	0x0084      	MOVWF      FSR
0x00CE	0x0870      	MOVF       R0, 0
0x00CF	0x0080      	MOVWF      INDF
0x00D0	0x0AB5      	INCF       FARG_strConstCopy_dest, 1
0x00D1	0x0AB6      	INCF       FARG_strConstCopy_source, 1
0x00D2	0x1903      	BTFSC      STATUS, 2
0x00D3	0x0AB7      	INCF       FARG_strConstCopy_source+1, 1
0x00D4	0x28B7      	GOTO       L_strConstCopy14
L_strConstCopy15:
;conveyer.c,98 :: 		*dest = 0;
0x00D5	0x0835      	MOVF       FARG_strConstCopy_dest, 0
0x00D6	0x0084      	MOVWF      FSR
0x00D7	0x0180      	CLRF       INDF
;conveyer.c,99 :: 		}
L_end_strConstCopy:
0x00D8	0x0008      	RETURN
; end of _strConstCopy
_Lcd_Out:
;__Lib_Lcd.c,184 :: 		
;__Lib_Lcd.c,187 :: 		
0x00D9	0x28EB      	GOTO       L_Lcd_Out11
;__Lib_Lcd.c,188 :: 		
L_Lcd_Out13:
0x00DA	0x3080      	MOVLW      128
0x00DB	0x1283      	BCF        STATUS, 5
0x00DC	0x1303      	BCF        STATUS, 6
0x00DD	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x00DE	0x28FE      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,189 :: 		
L_Lcd_Out14:
0x00DF	0x30C0      	MOVLW      192
0x00E0	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x00E1	0x28FE      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,190 :: 		
L_Lcd_Out15:
0x00E2	0x3094      	MOVLW      148
0x00E3	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x00E4	0x28FE      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,191 :: 		
L_Lcd_Out16:
0x00E5	0x30D4      	MOVLW      212
0x00E6	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x00E7	0x28FE      	GOTO       L_Lcd_Out12
;__Lib_Lcd.c,192 :: 		
L_Lcd_Out17:
0x00E8	0x3080      	MOVLW      128
0x00E9	0x00B5      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,193 :: 		
0x00EA	0x28FE      	GOTO       L_Lcd_Out12
L_Lcd_Out11:
0x00EB	0x1283      	BCF        STATUS, 5
0x00EC	0x1303      	BCF        STATUS, 6
0x00ED	0x0835      	MOVF       FARG_Lcd_Out_row, 0
0x00EE	0x3A01      	XORLW      1
0x00EF	0x1903      	BTFSC      STATUS, 2
0x00F0	0x28DA      	GOTO       L_Lcd_Out13
0x00F1	0x0835      	MOVF       FARG_Lcd_Out_row, 0
0x00F2	0x3A02      	XORLW      2
0x00F3	0x1903      	BTFSC      STATUS, 2
0x00F4	0x28DF      	GOTO       L_Lcd_Out14
0x00F5	0x0835      	MOVF       FARG_Lcd_Out_row, 0
0x00F6	0x3A03      	XORLW      3
0x00F7	0x1903      	BTFSC      STATUS, 2
0x00F8	0x28E2      	GOTO       L_Lcd_Out15
0x00F9	0x0835      	MOVF       FARG_Lcd_Out_row, 0
0x00FA	0x3A04      	XORLW      4
0x00FB	0x1903      	BTFSC      STATUS, 2
0x00FC	0x28E5      	GOTO       L_Lcd_Out16
0x00FD	0x28E8      	GOTO       L_Lcd_Out17
L_Lcd_Out12:
;__Lib_Lcd.c,194 :: 		
0x00FE	0x0336      	DECF       FARG_Lcd_Out_column, 0
0x00FF	0x00F0      	MOVWF      R0
0x0100	0x0835      	MOVF       FARG_Lcd_Out_row, 0
0x0101	0x07F0      	ADDWF      R0, 1
0x0102	0x0870      	MOVF       R0, 0
0x0103	0x00B5      	MOVWF      FARG_Lcd_Out_row
;__Lib_Lcd.c,196 :: 		
0x0104	0x0870      	MOVF       R0, 0
0x0105	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0106	0x201A      	CALL       _Lcd_Cmd
;__Lib_Lcd.c,197 :: 		
0x0107	0x1032      	BCF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,198 :: 		
0x0108	0x01B8      	CLRF       Lcd_Out_i_L0
;__Lib_Lcd.c,199 :: 		
L_Lcd_Out18:
0x0109	0x0838      	MOVF       Lcd_Out_i_L0, 0
0x010A	0x0737      	ADDWF      FARG_Lcd_Out_text, 0
0x010B	0x0084      	MOVWF      FSR
0x010C	0x0800      	MOVF       INDF, 0
0x010D	0x1903      	BTFSC      STATUS, 2
0x010E	0x2917      	GOTO       L_Lcd_Out19
;__Lib_Lcd.c,200 :: 		
0x010F	0x0838      	MOVF       Lcd_Out_i_L0, 0
0x0110	0x0737      	ADDWF      FARG_Lcd_Out_text, 0
0x0111	0x0084      	MOVWF      FSR
0x0112	0x0800      	MOVF       INDF, 0
0x0113	0x00B9      	MOVWF      FARG_Lcd_Chr_CP_out_char
0x0114	0x2061      	CALL       _Lcd_Chr_CP
0x0115	0x0AB8      	INCF       Lcd_Out_i_L0, 1
0x0116	0x2909      	GOTO       L_Lcd_Out18
L_Lcd_Out19:
;__Lib_Lcd.c,201 :: 		
0x0117	0x1432      	BSF        __Lib_Lcd_cmd_status, BitPos(__Lib_Lcd_cmd_status+0)
;__Lib_Lcd.c,202 :: 		
L_end_Lcd_Out:
0x0118	0x0008      	RETURN
; end of _Lcd_Out
_select_lcd:
;conveyer.c,43 :: 		void select_lcd(short n){
;conveyer.c,44 :: 		if(n == 1){
0x0119	0x1283      	BCF        STATUS, 5
0x011A	0x1303      	BCF        STATUS, 6
0x011B	0x0835      	MOVF       FARG_select_lcd_n, 0
0x011C	0x3A01      	XORLW      1
0x011D	0x1D03      	BTFSS      STATUS, 2
0x011E	0x2931      	GOTO       L_select_lcd0
;conveyer.c,45 :: 		TRISB0_bit = 1;
0x011F	0x1683      	BSF        STATUS, 5
0x0120	0x1406      	BSF        TRISB0_bit, BitPos(TRISB0_bit+0)
;conveyer.c,46 :: 		TRISB1_bit = 0;
0x0121	0x1086      	BCF        TRISB1_bit, BitPos(TRISB1_bit+0)
;conveyer.c,47 :: 		delay_ms(1);
0x0122	0x3003      	MOVLW      3
0x0123	0x00FC      	MOVWF      R12
0x0124	0x3097      	MOVLW      151
0x0125	0x00FD      	MOVWF      R13
L_select_lcd1:
0x0126	0x0BFD      	DECFSZ     R13, 1
0x0127	0x2926      	GOTO       L_select_lcd1
0x0128	0x0BFC      	DECFSZ     R12, 1
0x0129	0x2926      	GOTO       L_select_lcd1
0x012A	0x0000      	NOP
0x012B	0x0000      	NOP
;conveyer.c,48 :: 		lcd_init();
0x012C	0x2069      	CALL       _Lcd_Init
;conveyer.c,49 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x012D	0x300C      	MOVLW      12
0x012E	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x012F	0x201A      	CALL       _Lcd_Cmd
;conveyer.c,50 :: 		}
0x0130	0x2942      	GOTO       L_select_lcd2
L_select_lcd0:
;conveyer.c,52 :: 		TRISB0_bit = 0;
0x0131	0x1683      	BSF        STATUS, 5
0x0132	0x1006      	BCF        TRISB0_bit, BitPos(TRISB0_bit+0)
;conveyer.c,53 :: 		TRISB1_bit = 1;
0x0133	0x1486      	BSF        TRISB1_bit, BitPos(TRISB1_bit+0)
;conveyer.c,54 :: 		delay_ms(1);
0x0134	0x3003      	MOVLW      3
0x0135	0x00FC      	MOVWF      R12
0x0136	0x3097      	MOVLW      151
0x0137	0x00FD      	MOVWF      R13
L_select_lcd3:
0x0138	0x0BFD      	DECFSZ     R13, 1
0x0139	0x2938      	GOTO       L_select_lcd3
0x013A	0x0BFC      	DECFSZ     R12, 1
0x013B	0x2938      	GOTO       L_select_lcd3
0x013C	0x0000      	NOP
0x013D	0x0000      	NOP
;conveyer.c,55 :: 		lcd_init();
0x013E	0x2069      	CALL       _Lcd_Init
;conveyer.c,56 :: 		Lcd_Cmd(_LCD_CURSOR_OFF);
0x013F	0x300C      	MOVLW      12
0x0140	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0141	0x201A      	CALL       _Lcd_Cmd
;conveyer.c,57 :: 		}
L_select_lcd2:
;conveyer.c,58 :: 		}
L_end_select_lcd:
0x0142	0x0008      	RETURN
; end of _select_lcd
_motorClock:
;conveyer.c,85 :: 		void motorClock(){
;conveyer.c,86 :: 		motorA = 1;
0x0143	0x1283      	BCF        STATUS, 5
0x0144	0x1303      	BCF        STATUS, 6
0x0145	0x1489      	BSF        RE1_bit, BitPos(RE1_bit+0)
;conveyer.c,87 :: 		motorB = 0;
0x0146	0x1109      	BCF        RE2_bit, BitPos(RE2_bit+0)
;conveyer.c,88 :: 		}
L_end_motorClock:
0x0147	0x0008      	RETURN
; end of _motorClock
_motorAntiClock:
;conveyer.c,90 :: 		void motorAntiClock(){
;conveyer.c,91 :: 		motorA = 0;
0x0148	0x1283      	BCF        STATUS, 5
0x0149	0x1303      	BCF        STATUS, 6
0x014A	0x1089      	BCF        RE1_bit, BitPos(RE1_bit+0)
;conveyer.c,92 :: 		motorB = 1;
0x014B	0x1509      	BSF        RE2_bit, BitPos(RE2_bit+0)
;conveyer.c,93 :: 		}
L_end_motorAntiClock:
0x014C	0x0008      	RETURN
; end of _motorAntiClock
_servoRotate90:
;conveyer.c,70 :: 		void servoRotate90() {
;conveyer.c,72 :: 		for(i=0;i<50;i++){
0x014D	0x1283      	BCF        STATUS, 5
0x014E	0x1303      	BCF        STATUS, 6
0x014F	0x01F1      	CLRF       R1
0x0150	0x01F2      	CLRF       R1+1
L_servoRotate909:
0x0151	0x3000      	MOVLW      0
0x0152	0x0272      	SUBWF      R1+1, 0
0x0153	0x1D03      	BTFSS      STATUS, 2
0x0154	0x2957      	GOTO       L__servoRotate9069
0x0155	0x3032      	MOVLW      50
0x0156	0x0271      	SUBWF      R1, 0
L__servoRotate9069:
0x0157	0x1803      	BTFSC      STATUS, 0
0x0158	0x2972      	GOTO       L_servoRotate9010
;conveyer.c,73 :: 		servo = 1;
0x0159	0x1409      	BSF        RE0_bit, BitPos(RE0_bit+0)
;conveyer.c,74 :: 		Delay_us(1500);
0x015A	0x3004      	MOVLW      4
0x015B	0x00FC      	MOVWF      R12
0x015C	0x30E4      	MOVLW      228
0x015D	0x00FD      	MOVWF      R13
L_servoRotate9012:
0x015E	0x0BFD      	DECFSZ     R13, 1
0x015F	0x295E      	GOTO       L_servoRotate9012
0x0160	0x0BFC      	DECFSZ     R12, 1
0x0161	0x295E      	GOTO       L_servoRotate9012
0x0162	0x0000      	NOP
;conveyer.c,75 :: 		servo = 0;
0x0163	0x1009      	BCF        RE0_bit, BitPos(RE0_bit+0)
;conveyer.c,76 :: 		Delay_us(18500);
0x0164	0x3031      	MOVLW      49
0x0165	0x00FC      	MOVWF      R12
0x0166	0x300B      	MOVLW      11
0x0167	0x00FD      	MOVWF      R13
L_servoRotate9013:
0x0168	0x0BFD      	DECFSZ     R13, 1
0x0169	0x2968      	GOTO       L_servoRotate9013
0x016A	0x0BFC      	DECFSZ     R12, 1
0x016B	0x2968      	GOTO       L_servoRotate9013
0x016C	0x0000      	NOP
0x016D	0x0000      	NOP
;conveyer.c,72 :: 		for(i=0;i<50;i++){
0x016E	0x0AF1      	INCF       R1, 1
0x016F	0x1903      	BTFSC      STATUS, 2
0x0170	0x0AF2      	INCF       R1+1, 1
;conveyer.c,77 :: 		}
0x0171	0x2951      	GOTO       L_servoRotate909
L_servoRotate9010:
;conveyer.c,78 :: 		}
L_end_servoRotate90:
0x0172	0x0008      	RETURN
; end of _servoRotate90
_defaultLcd:
;conveyer.c,101 :: 		void defaultLcd(){
;conveyer.c,102 :: 		select_lcd(1);
0x0173	0x3001      	MOVLW      1
0x0174	0x1283      	BCF        STATUS, 5
0x0175	0x1303      	BCF        STATUS, 6
0x0176	0x00B5      	MOVWF      FARG_select_lcd_n
0x0177	0x2119      	CALL       _select_lcd
;conveyer.c,103 :: 		strConstCopy(txt, txt1);
0x0178	0x3021      	MOVLW      _txt
0x0179	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x017A	0x30B3      	MOVLW      _txt1
0x017B	0x00B6      	MOVWF      FARG_strConstCopy_source
0x017C	0x3003      	MOVLW      hi_addr(_txt1)
0x017D	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x017E	0x20B7      	CALL       _strConstCopy
;conveyer.c,104 :: 		lcd_out(1,1, txt);
0x017F	0x3001      	MOVLW      1
0x0180	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x0181	0x3001      	MOVLW      1
0x0182	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x0183	0x3021      	MOVLW      _txt
0x0184	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x0185	0x20D9      	CALL       _Lcd_Out
;conveyer.c,105 :: 		strConstCopy(txt, txt2);
0x0186	0x3021      	MOVLW      _txt
0x0187	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x0188	0x30C3      	MOVLW      _txt2
0x0189	0x00B6      	MOVWF      FARG_strConstCopy_source
0x018A	0x3003      	MOVLW      hi_addr(_txt2)
0x018B	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x018C	0x20B7      	CALL       _strConstCopy
;conveyer.c,106 :: 		lcd_out(2,1, txt);
0x018D	0x3002      	MOVLW      2
0x018E	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x018F	0x3001      	MOVLW      1
0x0190	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x0191	0x3021      	MOVLW      _txt
0x0192	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x0193	0x20D9      	CALL       _Lcd_Out
;conveyer.c,108 :: 		select_lcd(2);
0x0194	0x3002      	MOVLW      2
0x0195	0x00B5      	MOVWF      FARG_select_lcd_n
0x0196	0x2119      	CALL       _select_lcd
;conveyer.c,109 :: 		strConstCopy(txt, txt1);
0x0197	0x3021      	MOVLW      _txt
0x0198	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x0199	0x30B3      	MOVLW      _txt1
0x019A	0x00B6      	MOVWF      FARG_strConstCopy_source
0x019B	0x3003      	MOVLW      hi_addr(_txt1)
0x019C	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x019D	0x20B7      	CALL       _strConstCopy
;conveyer.c,110 :: 		lcd_out(1,1, txt);
0x019E	0x3001      	MOVLW      1
0x019F	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x01A0	0x3001      	MOVLW      1
0x01A1	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x01A2	0x3021      	MOVLW      _txt
0x01A3	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x01A4	0x20D9      	CALL       _Lcd_Out
;conveyer.c,111 :: 		strConstCopy(txt, txt2);
0x01A5	0x3021      	MOVLW      _txt
0x01A6	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x01A7	0x30C3      	MOVLW      _txt2
0x01A8	0x00B6      	MOVWF      FARG_strConstCopy_source
0x01A9	0x3003      	MOVLW      hi_addr(_txt2)
0x01AA	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x01AB	0x20B7      	CALL       _strConstCopy
;conveyer.c,112 :: 		lcd_out(2,1, txt);
0x01AC	0x3002      	MOVLW      2
0x01AD	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x01AE	0x3001      	MOVLW      1
0x01AF	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x01B0	0x3021      	MOVLW      _txt
0x01B1	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x01B2	0x20D9      	CALL       _Lcd_Out
;conveyer.c,113 :: 		}
L_end_defaultLcd:
0x01B3	0x0008      	RETURN
; end of _defaultLcd
_servoRotate0:
;conveyer.c,60 :: 		void servoRotate0(){
;conveyer.c,62 :: 		for(i=0;i<50;i++){
0x01B4	0x1283      	BCF        STATUS, 5
0x01B5	0x1303      	BCF        STATUS, 6
0x01B6	0x01F1      	CLRF       R1
0x01B7	0x01F2      	CLRF       R1+1
L_servoRotate04:
0x01B8	0x3000      	MOVLW      0
0x01B9	0x0272      	SUBWF      R1+1, 0
0x01BA	0x1D03      	BTFSS      STATUS, 2
0x01BB	0x29BE      	GOTO       L__servoRotate067
0x01BC	0x3032      	MOVLW      50
0x01BD	0x0271      	SUBWF      R1, 0
L__servoRotate067:
0x01BE	0x1803      	BTFSC      STATUS, 0
0x01BF	0x29D9      	GOTO       L_servoRotate05
;conveyer.c,63 :: 		servo = 1;
0x01C0	0x1409      	BSF        RE0_bit, BitPos(RE0_bit+0)
;conveyer.c,64 :: 		Delay_us(800);
0x01C1	0x3003      	MOVLW      3
0x01C2	0x00FC      	MOVWF      R12
0x01C3	0x3012      	MOVLW      18
0x01C4	0x00FD      	MOVWF      R13
L_servoRotate07:
0x01C5	0x0BFD      	DECFSZ     R13, 1
0x01C6	0x29C5      	GOTO       L_servoRotate07
0x01C7	0x0BFC      	DECFSZ     R12, 1
0x01C8	0x29C5      	GOTO       L_servoRotate07
0x01C9	0x0000      	NOP
;conveyer.c,65 :: 		servo = 0;
0x01CA	0x1009      	BCF        RE0_bit, BitPos(RE0_bit+0)
;conveyer.c,66 :: 		Delay_us(19200);
0x01CB	0x3032      	MOVLW      50
0x01CC	0x00FC      	MOVWF      R12
0x01CD	0x30DD      	MOVLW      221
0x01CE	0x00FD      	MOVWF      R13
L_servoRotate08:
0x01CF	0x0BFD      	DECFSZ     R13, 1
0x01D0	0x29CF      	GOTO       L_servoRotate08
0x01D1	0x0BFC      	DECFSZ     R12, 1
0x01D2	0x29CF      	GOTO       L_servoRotate08
0x01D3	0x0000      	NOP
0x01D4	0x0000      	NOP
;conveyer.c,62 :: 		for(i=0;i<50;i++){
0x01D5	0x0AF1      	INCF       R1, 1
0x01D6	0x1903      	BTFSC      STATUS, 2
0x01D7	0x0AF2      	INCF       R1+1, 1
;conveyer.c,67 :: 		}
0x01D8	0x29B8      	GOTO       L_servoRotate04
L_servoRotate05:
;conveyer.c,68 :: 		}
L_end_servoRotate0:
0x01D9	0x0008      	RETURN
; end of _servoRotate0
_motorOff:
;conveyer.c,80 :: 		void motorOff(){
;conveyer.c,81 :: 		motorA = 0;
0x01DA	0x1283      	BCF        STATUS, 5
0x01DB	0x1303      	BCF        STATUS, 6
0x01DC	0x1089      	BCF        RE1_bit, BitPos(RE1_bit+0)
;conveyer.c,82 :: 		motorB = 0;
0x01DD	0x1109      	BCF        RE2_bit, BitPos(RE2_bit+0)
;conveyer.c,83 :: 		}
L_end_motorOff:
0x01DE	0x0008      	RETURN
; end of _motorOff
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x01DF	0x205A      	CALL       _____DoICP
0x01E0	0x118A      	BCF        PCLATH, 3
0x01E1	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x01E2	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x01E3	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x01E4	0x0AB3      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x01E5	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x01E6	0x0AB4      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x01E7	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x01E8	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x01E9	0x29DF      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x01EA	0x0008      	RETURN
; end of ___CC2DW
_main:
0x01EB	0x1283      	BCF        STATUS, 5
0x01EC	0x1303      	BCF        STATUS, 6
0x01ED	0x01A0      	CLRF       _checkpoint
;conveyer.c,115 :: 		void main() {
;conveyer.c,116 :: 		ADCON1 = 7;
0x01EE	0x3007      	MOVLW      7
0x01EF	0x1683      	BSF        STATUS, 5
0x01F0	0x009F      	MOVWF      ADCON1
;conveyer.c,117 :: 		CMCON = 7;
0x01F1	0x3007      	MOVLW      7
0x01F2	0x009C      	MOVWF      CMCON
;conveyer.c,118 :: 		TRISD = 0xff;
0x01F3	0x30FF      	MOVLW      255
0x01F4	0x0088      	MOVWF      TRISD
;conveyer.c,119 :: 		TRISE = 0x00;
0x01F5	0x0189      	CLRF       TRISE
;conveyer.c,121 :: 		motorOff();
0x01F6	0x21DA      	CALL       _motorOff
;conveyer.c,122 :: 		servoRotate0();
0x01F7	0x21B4      	CALL       _servoRotate0
;conveyer.c,123 :: 		defaultLcd();
0x01F8	0x2173      	CALL       _defaultLcd
;conveyer.c,124 :: 		delay_ms(1000);
0x01F9	0x300B      	MOVLW      11
0x01FA	0x00FB      	MOVWF      R11
0x01FB	0x3026      	MOVLW      38
0x01FC	0x00FC      	MOVWF      R12
0x01FD	0x305D      	MOVLW      93
0x01FE	0x00FD      	MOVWF      R13
L_main16:
0x01FF	0x0BFD      	DECFSZ     R13, 1
0x0200	0x29FF      	GOTO       L_main16
0x0201	0x0BFC      	DECFSZ     R12, 1
0x0202	0x29FF      	GOTO       L_main16
0x0203	0x0BFB      	DECFSZ     R11, 1
0x0204	0x29FF      	GOTO       L_main16
0x0205	0x0000      	NOP
0x0206	0x0000      	NOP
;conveyer.c,126 :: 		while(1){
L_main17:
;conveyer.c,127 :: 		if(irSensor1 == 0){
0x0207	0x1A08      	BTFSC      RD4_bit, BitPos(RD4_bit+0)
0x0208	0x2A19      	GOTO       L_main19
;conveyer.c,128 :: 		servoRotate90();
0x0209	0x214D      	CALL       _servoRotate90
;conveyer.c,129 :: 		delay_ms(5000);
0x020A	0x3033      	MOVLW      51
0x020B	0x00FB      	MOVWF      R11
0x020C	0x30BB      	MOVLW      187
0x020D	0x00FC      	MOVWF      R12
0x020E	0x30DF      	MOVLW      223
0x020F	0x00FD      	MOVWF      R13
L_main20:
0x0210	0x0BFD      	DECFSZ     R13, 1
0x0211	0x2A10      	GOTO       L_main20
0x0212	0x0BFC      	DECFSZ     R12, 1
0x0213	0x2A10      	GOTO       L_main20
0x0214	0x0BFB      	DECFSZ     R11, 1
0x0215	0x2A10      	GOTO       L_main20
0x0216	0x0000      	NOP
0x0217	0x0000      	NOP
;conveyer.c,130 :: 		servoRotate0();
0x0218	0x21B4      	CALL       _servoRotate0
;conveyer.c,131 :: 		}
L_main19:
;conveyer.c,133 :: 		if(butt1 == 1 && checkpoint == 0){
0x0219	0x1C08      	BTFSS      RD0_bit, BitPos(RD0_bit+0)
0x021A	0x2A58      	GOTO       L_main23
0x021B	0x0820      	MOVF       _checkpoint, 0
0x021C	0x3A00      	XORLW      0
0x021D	0x1D03      	BTFSS      STATUS, 2
0x021E	0x2A58      	GOTO       L_main23
L__main64:
;conveyer.c,134 :: 		checkpoint = 1;
0x021F	0x3001      	MOVLW      1
0x0220	0x00A0      	MOVWF      _checkpoint
;conveyer.c,135 :: 		motorClock();
0x0221	0x2143      	CALL       _motorClock
;conveyer.c,137 :: 		select_lcd(1);
0x0222	0x3001      	MOVLW      1
0x0223	0x00B5      	MOVWF      FARG_select_lcd_n
0x0224	0x2119      	CALL       _select_lcd
;conveyer.c,138 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0225	0x3001      	MOVLW      1
0x0226	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0227	0x201A      	CALL       _Lcd_Cmd
;conveyer.c,139 :: 		strConstCopy(txt, txt3);
0x0228	0x3021      	MOVLW      _txt
0x0229	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x022A	0x30D3      	MOVLW      _txt3
0x022B	0x00B6      	MOVWF      FARG_strConstCopy_source
0x022C	0x3003      	MOVLW      hi_addr(_txt3)
0x022D	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x022E	0x20B7      	CALL       _strConstCopy
;conveyer.c,140 :: 		lcd_out(2,1, txt);
0x022F	0x3002      	MOVLW      2
0x0230	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x0231	0x3001      	MOVLW      1
0x0232	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x0233	0x3021      	MOVLW      _txt
0x0234	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x0235	0x20D9      	CALL       _Lcd_Out
;conveyer.c,142 :: 		select_lcd(2);
0x0236	0x3002      	MOVLW      2
0x0237	0x00B5      	MOVWF      FARG_select_lcd_n
0x0238	0x2119      	CALL       _select_lcd
;conveyer.c,143 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0239	0x3001      	MOVLW      1
0x023A	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x023B	0x201A      	CALL       _Lcd_Cmd
;conveyer.c,144 :: 		strConstCopy(txt, txt4);
0x023C	0x3021      	MOVLW      _txt
0x023D	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x023E	0x30E2      	MOVLW      _txt4
0x023F	0x00B6      	MOVWF      FARG_strConstCopy_source
0x0240	0x3003      	MOVLW      hi_addr(_txt4)
0x0241	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x0242	0x20B7      	CALL       _strConstCopy
;conveyer.c,145 :: 		lcd_out(2,1, txt);
0x0243	0x3002      	MOVLW      2
0x0244	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x0245	0x3001      	MOVLW      1
0x0246	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x0247	0x3021      	MOVLW      _txt
0x0248	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x0249	0x20D9      	CALL       _Lcd_Out
;conveyer.c,146 :: 		delay_ms(300);
0x024A	0x3004      	MOVLW      4
0x024B	0x00FB      	MOVWF      R11
0x024C	0x300C      	MOVLW      12
0x024D	0x00FC      	MOVWF      R12
0x024E	0x3033      	MOVLW      51
0x024F	0x00FD      	MOVWF      R13
L_main24:
0x0250	0x0BFD      	DECFSZ     R13, 1
0x0251	0x2A50      	GOTO       L_main24
0x0252	0x0BFC      	DECFSZ     R12, 1
0x0253	0x2A50      	GOTO       L_main24
0x0254	0x0BFB      	DECFSZ     R11, 1
0x0255	0x2A50      	GOTO       L_main24
0x0256	0x0000      	NOP
0x0257	0x0000      	NOP
;conveyer.c,147 :: 		}
L_main23:
;conveyer.c,149 :: 		if(irSensor2 == 0 && checkpoint == 1){
0x0258	0x1A88      	BTFSC      RD5_bit, BitPos(RD5_bit+0)
0x0259	0x2A91      	GOTO       L_main27
0x025A	0x0820      	MOVF       _checkpoint, 0
0x025B	0x3A01      	XORLW      1
0x025C	0x1D03      	BTFSS      STATUS, 2
0x025D	0x2A91      	GOTO       L_main27
L__main63:
;conveyer.c,150 :: 		checkpoint = 2;
0x025E	0x3002      	MOVLW      2
0x025F	0x00A0      	MOVWF      _checkpoint
;conveyer.c,151 :: 		motorOff();
0x0260	0x21DA      	CALL       _motorOff
;conveyer.c,153 :: 		select_lcd(1);
0x0261	0x3001      	MOVLW      1
0x0262	0x00B5      	MOVWF      FARG_select_lcd_n
0x0263	0x2119      	CALL       _select_lcd
;conveyer.c,154 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0264	0x3001      	MOVLW      1
0x0265	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0266	0x201A      	CALL       _Lcd_Cmd
;conveyer.c,155 :: 		strConstCopy(txt, txt5);
0x0267	0x3021      	MOVLW      _txt
0x0268	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x0269	0x30A2      	MOVLW      _txt5
0x026A	0x00B6      	MOVWF      FARG_strConstCopy_source
0x026B	0x3003      	MOVLW      hi_addr(_txt5)
0x026C	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x026D	0x20B7      	CALL       _strConstCopy
;conveyer.c,156 :: 		lcd_out(1,1, txt);
0x026E	0x3001      	MOVLW      1
0x026F	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x0270	0x3001      	MOVLW      1
0x0271	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x0272	0x3021      	MOVLW      _txt
0x0273	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x0274	0x20D9      	CALL       _Lcd_Out
;conveyer.c,157 :: 		strConstCopy(txt, txt6);
0x0275	0x3021      	MOVLW      _txt
0x0276	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x0277	0x3091      	MOVLW      _txt6
0x0278	0x00B6      	MOVWF      FARG_strConstCopy_source
0x0279	0x3003      	MOVLW      hi_addr(_txt6)
0x027A	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x027B	0x20B7      	CALL       _strConstCopy
;conveyer.c,158 :: 		lcd_out(2,1, txt);
0x027C	0x3002      	MOVLW      2
0x027D	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x027E	0x3001      	MOVLW      1
0x027F	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x0280	0x3021      	MOVLW      _txt
0x0281	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x0282	0x20D9      	CALL       _Lcd_Out
;conveyer.c,159 :: 		delay_ms(300);
0x0283	0x3004      	MOVLW      4
0x0284	0x00FB      	MOVWF      R11
0x0285	0x300C      	MOVLW      12
0x0286	0x00FC      	MOVWF      R12
0x0287	0x3033      	MOVLW      51
0x0288	0x00FD      	MOVWF      R13
L_main28:
0x0289	0x0BFD      	DECFSZ     R13, 1
0x028A	0x2A89      	GOTO       L_main28
0x028B	0x0BFC      	DECFSZ     R12, 1
0x028C	0x2A89      	GOTO       L_main28
0x028D	0x0BFB      	DECFSZ     R11, 1
0x028E	0x2A89      	GOTO       L_main28
0x028F	0x0000      	NOP
0x0290	0x0000      	NOP
;conveyer.c,160 :: 		}
L_main27:
;conveyer.c,162 :: 		if(butt2 == 1 && checkpoint == 2){
0x0291	0x1C88      	BTFSS      RD1_bit, BitPos(RD1_bit+0)
0x0292	0x2AA8      	GOTO       L_main31
0x0293	0x0820      	MOVF       _checkpoint, 0
0x0294	0x3A02      	XORLW      2
0x0295	0x1D03      	BTFSS      STATUS, 2
0x0296	0x2AA8      	GOTO       L_main31
L__main62:
;conveyer.c,163 :: 		checkpoint = 3;
0x0297	0x3003      	MOVLW      3
0x0298	0x00A0      	MOVWF      _checkpoint
;conveyer.c,164 :: 		motorAntiClock();
0x0299	0x2148      	CALL       _motorAntiClock
;conveyer.c,165 :: 		delay_ms(300);
0x029A	0x3004      	MOVLW      4
0x029B	0x00FB      	MOVWF      R11
0x029C	0x300C      	MOVLW      12
0x029D	0x00FC      	MOVWF      R12
0x029E	0x3033      	MOVLW      51
0x029F	0x00FD      	MOVWF      R13
L_main32:
0x02A0	0x0BFD      	DECFSZ     R13, 1
0x02A1	0x2AA0      	GOTO       L_main32
0x02A2	0x0BFC      	DECFSZ     R12, 1
0x02A3	0x2AA0      	GOTO       L_main32
0x02A4	0x0BFB      	DECFSZ     R11, 1
0x02A5	0x2AA0      	GOTO       L_main32
0x02A6	0x0000      	NOP
0x02A7	0x0000      	NOP
;conveyer.c,166 :: 		}
L_main31:
;conveyer.c,168 :: 		if(irSensor3 == 0 && checkpoint == 3){
0x02A8	0x1B08      	BTFSC      RD6_bit, BitPos(RD6_bit+0)
0x02A9	0x2ABF      	GOTO       L_main35
0x02AA	0x0820      	MOVF       _checkpoint, 0
0x02AB	0x3A03      	XORLW      3
0x02AC	0x1D03      	BTFSS      STATUS, 2
0x02AD	0x2ABF      	GOTO       L_main35
L__main61:
;conveyer.c,169 :: 		checkpoint = 4;
0x02AE	0x3004      	MOVLW      4
0x02AF	0x00A0      	MOVWF      _checkpoint
;conveyer.c,170 :: 		motorOff();
0x02B0	0x21DA      	CALL       _motorOff
;conveyer.c,171 :: 		delay_ms(300);
0x02B1	0x3004      	MOVLW      4
0x02B2	0x00FB      	MOVWF      R11
0x02B3	0x300C      	MOVLW      12
0x02B4	0x00FC      	MOVWF      R12
0x02B5	0x3033      	MOVLW      51
0x02B6	0x00FD      	MOVWF      R13
L_main36:
0x02B7	0x0BFD      	DECFSZ     R13, 1
0x02B8	0x2AB7      	GOTO       L_main36
0x02B9	0x0BFC      	DECFSZ     R12, 1
0x02BA	0x2AB7      	GOTO       L_main36
0x02BB	0x0BFB      	DECFSZ     R11, 1
0x02BC	0x2AB7      	GOTO       L_main36
0x02BD	0x0000      	NOP
0x02BE	0x0000      	NOP
;conveyer.c,172 :: 		}
L_main35:
;conveyer.c,174 :: 		if(butt3 == 1 && checkpoint == 4){
0x02BF	0x1D08      	BTFSS      RD2_bit, BitPos(RD2_bit+0)
0x02C0	0x2AFE      	GOTO       L_main39
0x02C1	0x0820      	MOVF       _checkpoint, 0
0x02C2	0x3A04      	XORLW      4
0x02C3	0x1D03      	BTFSS      STATUS, 2
0x02C4	0x2AFE      	GOTO       L_main39
L__main60:
;conveyer.c,175 :: 		checkpoint = 5;
0x02C5	0x3005      	MOVLW      5
0x02C6	0x00A0      	MOVWF      _checkpoint
;conveyer.c,176 :: 		motorClock();
0x02C7	0x2143      	CALL       _motorClock
;conveyer.c,178 :: 		select_lcd(2);
0x02C8	0x3002      	MOVLW      2
0x02C9	0x00B5      	MOVWF      FARG_select_lcd_n
0x02CA	0x2119      	CALL       _select_lcd
;conveyer.c,179 :: 		Lcd_Cmd(_LCD_CLEAR);
0x02CB	0x3001      	MOVLW      1
0x02CC	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x02CD	0x201A      	CALL       _Lcd_Cmd
;conveyer.c,180 :: 		strConstCopy(txt, txt3);
0x02CE	0x3021      	MOVLW      _txt
0x02CF	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x02D0	0x30D3      	MOVLW      _txt3
0x02D1	0x00B6      	MOVWF      FARG_strConstCopy_source
0x02D2	0x3003      	MOVLW      hi_addr(_txt3)
0x02D3	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x02D4	0x20B7      	CALL       _strConstCopy
;conveyer.c,181 :: 		lcd_out(2,1, txt);
0x02D5	0x3002      	MOVLW      2
0x02D6	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x02D7	0x3001      	MOVLW      1
0x02D8	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x02D9	0x3021      	MOVLW      _txt
0x02DA	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x02DB	0x20D9      	CALL       _Lcd_Out
;conveyer.c,183 :: 		select_lcd(1);
0x02DC	0x3001      	MOVLW      1
0x02DD	0x00B5      	MOVWF      FARG_select_lcd_n
0x02DE	0x2119      	CALL       _select_lcd
;conveyer.c,184 :: 		Lcd_Cmd(_LCD_CLEAR);
0x02DF	0x3001      	MOVLW      1
0x02E0	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x02E1	0x201A      	CALL       _Lcd_Cmd
;conveyer.c,185 :: 		strConstCopy(txt, txt4);
0x02E2	0x3021      	MOVLW      _txt
0x02E3	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x02E4	0x30E2      	MOVLW      _txt4
0x02E5	0x00B6      	MOVWF      FARG_strConstCopy_source
0x02E6	0x3003      	MOVLW      hi_addr(_txt4)
0x02E7	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x02E8	0x20B7      	CALL       _strConstCopy
;conveyer.c,186 :: 		lcd_out(2,1, txt);
0x02E9	0x3002      	MOVLW      2
0x02EA	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x02EB	0x3001      	MOVLW      1
0x02EC	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x02ED	0x3021      	MOVLW      _txt
0x02EE	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x02EF	0x20D9      	CALL       _Lcd_Out
;conveyer.c,187 :: 		delay_ms(300);
0x02F0	0x3004      	MOVLW      4
0x02F1	0x00FB      	MOVWF      R11
0x02F2	0x300C      	MOVLW      12
0x02F3	0x00FC      	MOVWF      R12
0x02F4	0x3033      	MOVLW      51
0x02F5	0x00FD      	MOVWF      R13
L_main40:
0x02F6	0x0BFD      	DECFSZ     R13, 1
0x02F7	0x2AF6      	GOTO       L_main40
0x02F8	0x0BFC      	DECFSZ     R12, 1
0x02F9	0x2AF6      	GOTO       L_main40
0x02FA	0x0BFB      	DECFSZ     R11, 1
0x02FB	0x2AF6      	GOTO       L_main40
0x02FC	0x0000      	NOP
0x02FD	0x0000      	NOP
;conveyer.c,188 :: 		}
L_main39:
;conveyer.c,190 :: 		if(irSensor4 == 0 && checkpoint == 5){
0x02FE	0x1B88      	BTFSC      RD7_bit, BitPos(RD7_bit+0)
0x02FF	0x2B15      	GOTO       L_main43
0x0300	0x0820      	MOVF       _checkpoint, 0
0x0301	0x3A05      	XORLW      5
0x0302	0x1D03      	BTFSS      STATUS, 2
0x0303	0x2B15      	GOTO       L_main43
L__main59:
;conveyer.c,191 :: 		checkpoint = 6;
0x0304	0x3006      	MOVLW      6
0x0305	0x00A0      	MOVWF      _checkpoint
;conveyer.c,192 :: 		motorOff();
0x0306	0x21DA      	CALL       _motorOff
;conveyer.c,193 :: 		delay_ms(300);
0x0307	0x3004      	MOVLW      4
0x0308	0x00FB      	MOVWF      R11
0x0309	0x300C      	MOVLW      12
0x030A	0x00FC      	MOVWF      R12
0x030B	0x3033      	MOVLW      51
0x030C	0x00FD      	MOVWF      R13
L_main44:
0x030D	0x0BFD      	DECFSZ     R13, 1
0x030E	0x2B0D      	GOTO       L_main44
0x030F	0x0BFC      	DECFSZ     R12, 1
0x0310	0x2B0D      	GOTO       L_main44
0x0311	0x0BFB      	DECFSZ     R11, 1
0x0312	0x2B0D      	GOTO       L_main44
0x0313	0x0000      	NOP
0x0314	0x0000      	NOP
;conveyer.c,194 :: 		}
L_main43:
;conveyer.c,196 :: 		if(butt4 == 1 && checkpoint == 6){
0x0315	0x1D88      	BTFSS      RD3_bit, BitPos(RD3_bit+0)
0x0316	0x2B6F      	GOTO       L_main47
0x0317	0x0820      	MOVF       _checkpoint, 0
0x0318	0x3A06      	XORLW      6
0x0319	0x1D03      	BTFSS      STATUS, 2
0x031A	0x2B6F      	GOTO       L_main47
L__main58:
;conveyer.c,197 :: 		checkpoint = 7;
0x031B	0x3007      	MOVLW      7
0x031C	0x00A0      	MOVWF      _checkpoint
;conveyer.c,198 :: 		select_lcd(1);
0x031D	0x3001      	MOVLW      1
0x031E	0x00B5      	MOVWF      FARG_select_lcd_n
0x031F	0x2119      	CALL       _select_lcd
;conveyer.c,199 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0320	0x3001      	MOVLW      1
0x0321	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0322	0x201A      	CALL       _Lcd_Cmd
;conveyer.c,200 :: 		strConstCopy(txt, txt7);
0x0323	0x3021      	MOVLW      _txt
0x0324	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x0325	0x30F1      	MOVLW      _txt7
0x0326	0x00B6      	MOVWF      FARG_strConstCopy_source
0x0327	0x3003      	MOVLW      hi_addr(_txt7)
0x0328	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x0329	0x20B7      	CALL       _strConstCopy
;conveyer.c,201 :: 		lcd_out(1,1, txt);
0x032A	0x3001      	MOVLW      1
0x032B	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x032C	0x3001      	MOVLW      1
0x032D	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x032E	0x3021      	MOVLW      _txt
0x032F	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x0330	0x20D9      	CALL       _Lcd_Out
;conveyer.c,202 :: 		strConstCopy(txt, txt8);
0x0331	0x3021      	MOVLW      _txt
0x0332	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x0333	0x30FE      	MOVLW      _txt8
0x0334	0x00B6      	MOVWF      FARG_strConstCopy_source
0x0335	0x3003      	MOVLW      hi_addr(_txt8)
0x0336	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x0337	0x20B7      	CALL       _strConstCopy
;conveyer.c,203 :: 		lcd_out(2,1, txt);
0x0338	0x3002      	MOVLW      2
0x0339	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x033A	0x3001      	MOVLW      1
0x033B	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x033C	0x3021      	MOVLW      _txt
0x033D	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x033E	0x20D9      	CALL       _Lcd_Out
;conveyer.c,205 :: 		select_lcd(2);
0x033F	0x3002      	MOVLW      2
0x0340	0x00B5      	MOVWF      FARG_select_lcd_n
0x0341	0x2119      	CALL       _select_lcd
;conveyer.c,206 :: 		Lcd_Cmd(_LCD_CLEAR);
0x0342	0x3001      	MOVLW      1
0x0343	0x00BA      	MOVWF      FARG_Lcd_Cmd_out_char
0x0344	0x201A      	CALL       _Lcd_Cmd
;conveyer.c,207 :: 		strConstCopy(txt, txt7);
0x0345	0x3021      	MOVLW      _txt
0x0346	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x0347	0x30F1      	MOVLW      _txt7
0x0348	0x00B6      	MOVWF      FARG_strConstCopy_source
0x0349	0x3003      	MOVLW      hi_addr(_txt7)
0x034A	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x034B	0x20B7      	CALL       _strConstCopy
;conveyer.c,208 :: 		lcd_out(1,1, txt);
0x034C	0x3001      	MOVLW      1
0x034D	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x034E	0x3001      	MOVLW      1
0x034F	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x0350	0x3021      	MOVLW      _txt
0x0351	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x0352	0x20D9      	CALL       _Lcd_Out
;conveyer.c,209 :: 		strConstCopy(txt, txt8);
0x0353	0x3021      	MOVLW      _txt
0x0354	0x00B5      	MOVWF      FARG_strConstCopy_dest
0x0355	0x30FE      	MOVLW      _txt8
0x0356	0x00B6      	MOVWF      FARG_strConstCopy_source
0x0357	0x3003      	MOVLW      hi_addr(_txt8)
0x0358	0x00B7      	MOVWF      FARG_strConstCopy_source+1
0x0359	0x20B7      	CALL       _strConstCopy
;conveyer.c,210 :: 		lcd_out(2,1, txt);
0x035A	0x3002      	MOVLW      2
0x035B	0x00B5      	MOVWF      FARG_Lcd_Out_row
0x035C	0x3001      	MOVLW      1
0x035D	0x00B6      	MOVWF      FARG_Lcd_Out_column
0x035E	0x3021      	MOVLW      _txt
0x035F	0x00B7      	MOVWF      FARG_Lcd_Out_text
0x0360	0x20D9      	CALL       _Lcd_Out
;conveyer.c,211 :: 		delay_ms(300);
0x0361	0x3004      	MOVLW      4
0x0362	0x00FB      	MOVWF      R11
0x0363	0x300C      	MOVLW      12
0x0364	0x00FC      	MOVWF      R12
0x0365	0x3033      	MOVLW      51
0x0366	0x00FD      	MOVWF      R13
L_main48:
0x0367	0x0BFD      	DECFSZ     R13, 1
0x0368	0x2B67      	GOTO       L_main48
0x0369	0x0BFC      	DECFSZ     R12, 1
0x036A	0x2B67      	GOTO       L_main48
0x036B	0x0BFB      	DECFSZ     R11, 1
0x036C	0x2B67      	GOTO       L_main48
0x036D	0x0000      	NOP
0x036E	0x0000      	NOP
;conveyer.c,212 :: 		}
L_main47:
;conveyer.c,214 :: 		if(irSensor3 == 0 && checkpoint == 7){
0x036F	0x1B08      	BTFSC      RD6_bit, BitPos(RD6_bit+0)
0x0370	0x2B87      	GOTO       L_main51
0x0371	0x0820      	MOVF       _checkpoint, 0
0x0372	0x3A07      	XORLW      7
0x0373	0x1D03      	BTFSS      STATUS, 2
0x0374	0x2B87      	GOTO       L_main51
L__main57:
;conveyer.c,215 :: 		checkpoint = 8;
0x0375	0x3008      	MOVLW      8
0x0376	0x00A0      	MOVWF      _checkpoint
;conveyer.c,216 :: 		motorAntiClock();
0x0377	0x2148      	CALL       _motorAntiClock
;conveyer.c,217 :: 		defaultLcd();
0x0378	0x2173      	CALL       _defaultLcd
;conveyer.c,218 :: 		delay_ms(300);
0x0379	0x3004      	MOVLW      4
0x037A	0x00FB      	MOVWF      R11
0x037B	0x300C      	MOVLW      12
0x037C	0x00FC      	MOVWF      R12
0x037D	0x3033      	MOVLW      51
0x037E	0x00FD      	MOVWF      R13
L_main52:
0x037F	0x0BFD      	DECFSZ     R13, 1
0x0380	0x2B7F      	GOTO       L_main52
0x0381	0x0BFC      	DECFSZ     R12, 1
0x0382	0x2B7F      	GOTO       L_main52
0x0383	0x0BFB      	DECFSZ     R11, 1
0x0384	0x2B7F      	GOTO       L_main52
0x0385	0x0000      	NOP
0x0386	0x0000      	NOP
;conveyer.c,219 :: 		}
L_main51:
;conveyer.c,221 :: 		if(irSensor3 == 1 && checkpoint == 8){
0x0387	0x1F08      	BTFSS      RD6_bit, BitPos(RD6_bit+0)
0x0388	0x2B8F      	GOTO       L_main55
0x0389	0x0820      	MOVF       _checkpoint, 0
0x038A	0x3A08      	XORLW      8
0x038B	0x1D03      	BTFSS      STATUS, 2
0x038C	0x2B8F      	GOTO       L_main55
L__main56:
;conveyer.c,222 :: 		checkpoint = 0;
0x038D	0x01A0      	CLRF       _checkpoint
;conveyer.c,223 :: 		motorOff();
0x038E	0x21DA      	CALL       _motorOff
;conveyer.c,224 :: 		}
L_main55:
;conveyer.c,225 :: 		}
0x038F	0x2A07      	GOTO       L_main17
;conveyer.c,226 :: 		}
L_end_main:
0x0390	0x2B90      	GOTO       $+0
; end of _main
;conveyer.c,36 :: _txt6
0x0391	0x3470 ;_txt6+0
0x0392	0x3472 ;_txt6+1
0x0393	0x3465 ;_txt6+2
0x0394	0x3473 ;_txt6+3
0x0395	0x3473 ;_txt6+4
0x0396	0x3420 ;_txt6+5
0x0397	0x3474 ;_txt6+6
0x0398	0x3468 ;_txt6+7
0x0399	0x3465 ;_txt6+8
0x039A	0x3420 ;_txt6+9
0x039B	0x3462 ;_txt6+10
0x039C	0x3475 ;_txt6+11
0x039D	0x3474 ;_txt6+12
0x039E	0x3474 ;_txt6+13
0x039F	0x346F ;_txt6+14
0x03A0	0x346E ;_txt6+15
0x03A1	0x3400 ;_txt6+16
; end of _txt6
;conveyer.c,35 :: _txt5
0x03A2	0x3446 ;_txt5+0
0x03A3	0x346F ;_txt5+1
0x03A4	0x3472 ;_txt5+2
0x03A5	0x3420 ;_txt5+3
0x03A6	0x3472 ;_txt5+4
0x03A7	0x3465 ;_txt5+5
0x03A8	0x3474 ;_txt5+6
0x03A9	0x3475 ;_txt5+7
0x03AA	0x3472 ;_txt5+8
0x03AB	0x346E ;_txt5+9
0x03AC	0x3420 ;_txt5+10
0x03AD	0x3477 ;_txt5+11
0x03AE	0x3461 ;_txt5+12
0x03AF	0x3473 ;_txt5+13
0x03B0	0x3474 ;_txt5+14
0x03B1	0x3465 ;_txt5+15
0x03B2	0x3400 ;_txt5+16
; end of _txt5
;conveyer.c,29 :: _txt1
0x03B3	0x3457 ;_txt1+0
0x03B4	0x3465 ;_txt1+1
0x03B5	0x346C ;_txt1+2
0x03B6	0x3463 ;_txt1+3
0x03B7	0x346F ;_txt1+4
0x03B8	0x346D ;_txt1+5
0x03B9	0x3465 ;_txt1+6
0x03BA	0x3420 ;_txt1+7
0x03BB	0x3474 ;_txt1+8
0x03BC	0x346F ;_txt1+9
0x03BD	0x3420 ;_txt1+10
0x03BE	0x3450 ;_txt1+11
0x03BF	0x3443 ;_txt1+12
0x03C0	0x3449 ;_txt1+13
0x03C1	0x3455 ;_txt1+14
0x03C2	0x3400 ;_txt1+15
; end of _txt1
;conveyer.c,30 :: _txt2
0x03C3	0x3453 ;_txt2+0
0x03C4	0x346D ;_txt2+1
0x03C5	0x3461 ;_txt2+2
0x03C6	0x3472 ;_txt2+3
0x03C7	0x3474 ;_txt2+4
0x03C8	0x3420 ;_txt2+5
0x03C9	0x3443 ;_txt2+6
0x03CA	0x3461 ;_txt2+7
0x03CB	0x3466 ;_txt2+8
0x03CC	0x3465 ;_txt2+9
0x03CD	0x3474 ;_txt2+10
0x03CE	0x3465 ;_txt2+11
0x03CF	0x3472 ;_txt2+12
0x03D0	0x3469 ;_txt2+13
0x03D1	0x3461 ;_txt2+14
0x03D2	0x3400 ;_txt2+15
; end of _txt2
;conveyer.c,32 :: _txt3
0x03D3	0x344F ;_txt3+0
0x03D4	0x3472 ;_txt3+1
0x03D5	0x3464 ;_txt3+2
0x03D6	0x3465 ;_txt3+3
0x03D7	0x3472 ;_txt3+4
0x03D8	0x3420 ;_txt3+5
0x03D9	0x3441 ;_txt3+6
0x03DA	0x3463 ;_txt3+7
0x03DB	0x3463 ;_txt3+8
0x03DC	0x3465 ;_txt3+9
0x03DD	0x3470 ;_txt3+10
0x03DE	0x3474 ;_txt3+11
0x03DF	0x3465 ;_txt3+12
0x03E0	0x3464 ;_txt3+13
0x03E1	0x3400 ;_txt3+14
; end of _txt3
;conveyer.c,33 :: _txt4
0x03E2	0x3457 ;_txt4+0
0x03E3	0x3461 ;_txt4+1
0x03E4	0x3469 ;_txt4+2
0x03E5	0x3474 ;_txt4+3
0x03E6	0x3420 ;_txt4+4
0x03E7	0x3466 ;_txt4+5
0x03E8	0x346F ;_txt4+6
0x03E9	0x3472 ;_txt4+7
0x03EA	0x3420 ;_txt4+8
0x03EB	0x346F ;_txt4+9
0x03EC	0x3472 ;_txt4+10
0x03ED	0x3464 ;_txt4+11
0x03EE	0x3465 ;_txt4+12
0x03EF	0x3472 ;_txt4+13
0x03F0	0x3400 ;_txt4+14
; end of _txt4
;conveyer.c,38 :: _txt7
0x03F1	0x3446 ;_txt7+0
0x03F2	0x346F ;_txt7+1
0x03F3	0x3472 ;_txt7+2
0x03F4	0x3420 ;_txt7+3
0x03F5	0x3477 ;_txt7+4
0x03F6	0x3461 ;_txt7+5
0x03F7	0x3469 ;_txt7+6
0x03F8	0x3474 ;_txt7+7
0x03F9	0x3420 ;_txt7+8
0x03FA	0x3466 ;_txt7+9
0x03FB	0x346F ;_txt7+10
0x03FC	0x3472 ;_txt7+11
0x03FD	0x3400 ;_txt7+12
; end of _txt7
;conveyer.c,39 :: _txt8
0x03FE	0x346E ;_txt8+0
0x03FF	0x3465 ;_txt8+1
0x0400	0x3478 ;_txt8+2
0x0401	0x3474 ;_txt8+3
0x0402	0x3420 ;_txt8+4
0x0403	0x346F ;_txt8+5
0x0404	0x3472 ;_txt8+6
0x0405	0x3464 ;_txt8+7
0x0406	0x3465 ;_txt8+8
0x0407	0x3472 ;_txt8+9
0x0408	0x3400 ;_txt8+10
; end of _txt8
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [3]    _Delay_1us
0x0006      [13]    _Delay_5500us
0x0013       [7]    _Delay_50us
0x001A      [64]    _Lcd_Cmd
0x005A       [7]    _____DoICP
0x0061       [8]    _Lcd_Chr_CP
0x0069      [78]    _Lcd_Init
0x00B7      [34]    _strConstCopy
0x00D9      [64]    _Lcd_Out
0x0119      [42]    _select_lcd
0x0143       [5]    _motorClock
0x0148       [5]    _motorAntiClock
0x014D      [38]    _servoRotate90
0x0173      [65]    _defaultLcd
0x01B4      [38]    _servoRotate0
0x01DA       [5]    _motorOff
0x01DF      [12]    ___CC2DW
0x01EB     [422]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [0]    LCD_EN
0x0006       [0]    LCD_D6
0x0006       [0]    LCD_D5
0x0006       [0]    LCD_D7
0x0006       [0]    LCD_D4
0x0006       [0]    RB3_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB5_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB7_bit
0x0006       [0]    LCD_RS
0x0008       [0]    RD7_bit
0x0008       [0]    RD2_bit
0x0008       [0]    RD0_bit
0x0008       [0]    RD4_bit
0x0008       [0]    RD1_bit
0x0008       [0]    RD5_bit
0x0008       [0]    RD6_bit
0x0008       [0]    RD3_bit
0x0009       [0]    RE0_bit
0x0009       [0]    RE1_bit
0x0009       [0]    RE2_bit
0x000A       [1]    PCLATH
0x0020       [1]    _checkpoint
0x0021      [17]    _txt
0x0032       [0]    __Lib_Lcd_cmd_status
0x0033       [2]    ___DoICPAddr
0x0035       [1]    FARG_select_lcd_n
0x0035       [1]    FARG_strConstCopy_dest
0x0035       [1]    FARG_Lcd_Out_row
0x0036       [2]    FARG_strConstCopy_source
0x0036       [1]    FARG_Lcd_Out_column
0x0037       [1]    FARG_Lcd_Out_text
0x0038       [1]    Lcd_Out_i_L0
0x0039       [1]    FARG_Lcd_Chr_CP_out_char
0x003A       [1]    FARG_Lcd_Cmd_out_char
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB6_bit
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB4_bit
0x0086       [0]    LCD_D4_Direction
0x0086       [0]    LCD_EN_Direction
0x0086       [0]    LCD_RS_Direction
0x0086       [0]    LCD_D7_Direction
0x0086       [0]    LCD_D6_Direction
0x0086       [0]    LCD_D5_Direction
0x0088       [1]    TRISD
0x0089       [1]    TRISE
0x009C       [1]    CMCON
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0391      [17]    _txt6
0x03A2      [17]    _txt5
0x03B3      [16]    _txt1
0x03C3      [16]    _txt2
0x03D3      [15]    _txt3
0x03E2      [15]    _txt4
0x03F1      [13]    _txt7
0x03FE      [11]    _txt8
