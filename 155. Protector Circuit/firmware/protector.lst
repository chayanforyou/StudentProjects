;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29-Jul-17 12:07:21 AM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x29AB      	GOTO       427
_Div_16x16_S_L:
;__Lib_Math.c,420 :: 		
;__Lib_Math.c,426 :: 		
0x0003	0x0D71      	RLF        R1, 0
;__Lib_Math.c,427 :: 		
0x0004	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,428 :: 		
0x0005	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,429 :: 		
0x0006	0x0874      	MOVF       R4, 0
;__Lib_Math.c,430 :: 		
0x0007	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,431 :: 		
0x0008	0x0875      	MOVF       R5, 0
;__Lib_Math.c,432 :: 		
0x0009	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,433 :: 		
0x000A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,434 :: 		
0x000B	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,435 :: 		
0x000C	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,436 :: 		
0x000D	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,438 :: 		
0x000E	0x300F      	MOVLW      15
;__Lib_Math.c,439 :: 		
0x000F	0x00FC      	MOVWF      R12
;__Lib_Math.c,441 :: 		
0x0010	0x0D71      	RLF        R1, 0
;__Lib_Math.c,442 :: 		
0x0011	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,443 :: 		
0x0012	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,444 :: 		
0x0013	0x0874      	MOVF       R4, 0
;__Lib_Math.c,446 :: 		
0x0014	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,447 :: 		
0x0015	0x281C      	GOTO       $+7
;__Lib_Math.c,448 :: 		
0x0016	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,449 :: 		
0x0017	0x0875      	MOVF       R5, 0
;__Lib_Math.c,450 :: 		
0x0018	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,451 :: 		
0x0019	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,452 :: 		
0x001A	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,453 :: 		
0x001B	0x2821      	GOTO       $+6
;__Lib_Math.c,455 :: 		
0x001C	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,456 :: 		
0x001D	0x0875      	MOVF       R5, 0
;__Lib_Math.c,457 :: 		
0x001E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,458 :: 		
0x001F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,459 :: 		
0x0020	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,461 :: 		
0x0021	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,462 :: 		
0x0022	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,464 :: 		
0x0023	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,465 :: 		
0x0024	0x2810      	GOTO       $-20
;__Lib_Math.c,467 :: 		
0x0025	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,468 :: 		
0x0026	0x282D      	GOTO       $+7
;__Lib_Math.c,469 :: 		
0x0027	0x0874      	MOVF       R4, 0
;__Lib_Math.c,470 :: 		
0x0028	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,471 :: 		
0x0029	0x0875      	MOVF       R5, 0
;__Lib_Math.c,472 :: 		
0x002A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,473 :: 		
0x002B	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,474 :: 		
0x002C	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,475 :: 		
0x002D	0x0000      	NOP
;__Lib_Math.c,477 :: 		
L_end_Div_16x16_S_L:
0x002E	0x0008      	RETURN
; end of _Div_16x16_S_L
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x002F	0x300E      	MOVLW      14
0x0030	0x1283      	BCF        STATUS, 5
0x0031	0x1303      	BCF        STATUS, 6
0x0032	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x0033	0x0BFD      	DECFSZ     R13, 1
0x0034	0x2833      	GOTO       L_Delay_22us1
0x0035	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0036	0x0008      	RETURN
; end of _Delay_22us
_Div_16x16_S:
;__Lib_Math.c,479 :: 		
;__Lib_Math.c,487 :: 		
0x0037	0x1283      	BCF        STATUS, 5
0x0038	0x1303      	BCF        STATUS, 6
0x0039	0x0874      	MOVF       R4, 0
0x003A	0x3A00      	XORLW      0
0x003B	0x1D03      	BTFSS      STATUS, 2
0x003C	0x2846      	GOTO       L_Div_16x16_S0
;__Lib_Math.c,488 :: 		
0x003D	0x0875      	MOVF       R5, 0
0x003E	0x3A00      	XORLW      0
0x003F	0x1D03      	BTFSS      STATUS, 2
0x0040	0x2846      	GOTO       L_Div_16x16_S1
;__Lib_Math.c,489 :: 		
0x0041	0x30FF      	MOVLW      255
0x0042	0x00F0      	MOVWF      R0
;__Lib_Math.c,490 :: 		
0x0043	0x307F      	MOVLW      127
0x0044	0x00F1      	MOVWF      R1
;__Lib_Math.c,491 :: 		
0x0045	0x289F      	GOTO       L_end_Div_16x16_S
;__Lib_Math.c,492 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,495 :: 		
0x0046	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,496 :: 		
0x0047	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,497 :: 		
0x0048	0x01FD      	CLRF       R13
;__Lib_Math.c,498 :: 		
0x0049	0x01F9      	CLRF       R9
;__Lib_Math.c,499 :: 		
0x004A	0x01F8      	CLRF       R8
;__Lib_Math.c,500 :: 		
0x004B	0x0871      	MOVF       R1, 0
;__Lib_Math.c,501 :: 		
0x004C	0x0470      	IORWF      R0, 0
;__Lib_Math.c,502 :: 		
0x004D	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,503 :: 		
0x004E	0x3400      	RETLW      0
;__Lib_Math.c,505 :: 		
0x004F	0x0871      	MOVF       R1, 0
;__Lib_Math.c,506 :: 		
0x0050	0x0675      	XORWF      R5, 0
;__Lib_Math.c,507 :: 		
0x0051	0x00FA      	MOVWF      R10
;__Lib_Math.c,508 :: 		
0x0052	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,509 :: 		
0x0053	0x09FD      	COMF       R13, 1
;__Lib_Math.c,511 :: 		
0x0054	0x01FB      	CLRF       R11
;__Lib_Math.c,513 :: 		
0x0055	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,514 :: 		
0x0056	0x285C      	GOTO       $+6
;__Lib_Math.c,516 :: 		
0x0057	0x09F4      	COMF       R4, 1
;__Lib_Math.c,517 :: 		
0x0058	0x09F5      	COMF       R5, 1
;__Lib_Math.c,518 :: 		
0x0059	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,519 :: 		
0x005A	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,520 :: 		
0x005B	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,522 :: 		
0x005C	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,523 :: 		
0x005D	0x2863      	GOTO       $+6
;__Lib_Math.c,525 :: 		
0x005E	0x09F0      	COMF       R0, 1
;__Lib_Math.c,526 :: 		
0x005F	0x09F1      	COMF       R1, 1
;__Lib_Math.c,527 :: 		
0x0060	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,528 :: 		
0x0061	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,529 :: 		
0x0062	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,531 :: 		
0x0063	0x0871      	MOVF       R1, 0
;__Lib_Math.c,532 :: 		
0x0064	0x0475      	IORWF      R5, 0
;__Lib_Math.c,533 :: 		
0x0065	0x00FA      	MOVWF      R10
;__Lib_Math.c,534 :: 		
0x0066	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,535 :: 		
0x0067	0x2878      	GOTO       $+17
;__Lib_Math.c,537 :: 		
0x0068	0x2003      	CALL       _Div_16x16_S_L
;__Lib_Math.c,539 :: 		
0x0069	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,540 :: 		
0x006A	0x288B      	GOTO       $+33
;__Lib_Math.c,542 :: 		
0x006B	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,543 :: 		
0x006C	0x3400      	RETLW      0
;__Lib_Math.c,545 :: 		
0x006D	0x09F0      	COMF       R0, 1
;__Lib_Math.c,546 :: 		
0x006E	0x09F1      	COMF       R1, 1
;__Lib_Math.c,547 :: 		
0x006F	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,548 :: 		
0x0070	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,549 :: 		
0x0071	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,551 :: 		
0x0072	0x09F8      	COMF       R8, 1
;__Lib_Math.c,552 :: 		
0x0073	0x09F9      	COMF       R9, 1
;__Lib_Math.c,553 :: 		
0x0074	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,554 :: 		
0x0075	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,555 :: 		
0x0076	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,557 :: 		
0x0077	0x3400      	RETLW      0
;__Lib_Math.c,559 :: 		
0x0078	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,560 :: 		
0x0079	0x2887      	GOTO       $+14
;__Lib_Math.c,561 :: 		
0x007A	0x1BF1      	BTFSC      R1, 7
;__Lib_Math.c,562 :: 		
0x007B	0x2883      	GOTO       $+8
;__Lib_Math.c,563 :: 		
0x007C	0x0871      	MOVF       R1, 0
;__Lib_Math.c,564 :: 		
0x007D	0x00F9      	MOVWF      R9
;__Lib_Math.c,565 :: 		
0x007E	0x0870      	MOVF       R0, 0
;__Lib_Math.c,566 :: 		
0x007F	0x00F8      	MOVWF      R8
;__Lib_Math.c,567 :: 		
0x0080	0x01F1      	CLRF       R1
;__Lib_Math.c,568 :: 		
0x0081	0x01F0      	CLRF       R0
;__Lib_Math.c,569 :: 		
0x0082	0x286B      	GOTO       $-23
;__Lib_Math.c,570 :: 		
0x0083	0x01F1      	CLRF       R1
;__Lib_Math.c,571 :: 		
0x0084	0x01F0      	CLRF       R0
;__Lib_Math.c,572 :: 		
0x0085	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,573 :: 		
0x0086	0x3400      	RETLW      0
;__Lib_Math.c,575 :: 		
0x0087	0x09F1      	COMF       R1, 1
;__Lib_Math.c,576 :: 		
0x0088	0x09F0      	COMF       R0, 1
;__Lib_Math.c,577 :: 		
0x0089	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,578 :: 		
0x008A	0x2868      	GOTO       $-34
;__Lib_Math.c,580 :: 		
0x008B	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,581 :: 		
0x008C	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,582 :: 		
0x008D	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,583 :: 		
0x008E	0x0874      	MOVF       R4, 0
;__Lib_Math.c,584 :: 		
0x008F	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,585 :: 		
0x0090	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,586 :: 		
0x0091	0x286B      	GOTO       $-38
;__Lib_Math.c,587 :: 		
0x0092	0x0875      	MOVF       R5, 0
;__Lib_Math.c,588 :: 		
0x0093	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,589 :: 		
0x0094	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,590 :: 		
0x0095	0x286B      	GOTO       $-42
;__Lib_Math.c,591 :: 		
0x0096	0x01F9      	CLRF       R9
;__Lib_Math.c,592 :: 		
0x0097	0x01F8      	CLRF       R8
;__Lib_Math.c,593 :: 		
0x0098	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,594 :: 		
0x0099	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,595 :: 		
0x009A	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,596 :: 		
0x009B	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,597 :: 		
0x009C	0x286B      	GOTO       $-49
;__Lib_Math.c,598 :: 		
0x009D	0x0000      	NOP
;__Lib_Math.c,599 :: 		
0x009E	0x34FF      	RETLW      255
;__Lib_Math.c,601 :: 		
L_end_Div_16x16_S:
0x009F	0x0008      	RETURN
; end of _Div_16x16_S
_clear_display:
;protector.c,16 :: 		void clear_display(){
;protector.c,17 :: 		digit_1 = 0; digit_2 = 0;
0x00A0	0x1283      	BCF        STATUS, 5
0x00A1	0x1303      	BCF        STATUS, 6
0x00A2	0x1207      	BCF        RC4_bit, BitPos(RC4_bit+0)
0x00A3	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
;protector.c,18 :: 		digit_3 = 0; digit_4 = 0;
0x00A4	0x1107      	BCF        RC2_bit, BitPos(RC2_bit+0)
0x00A5	0x1387      	BCF        RC7_bit, BitPos(RC7_bit+0)
;protector.c,19 :: 		digit_5 = 0; digit_6 = 0;
0x00A6	0x1307      	BCF        RC6_bit, BitPos(RC6_bit+0)
0x00A7	0x1287      	BCF        RC5_bit, BitPos(RC5_bit+0)
;protector.c,20 :: 		}
L_end_clear_display:
0x00A8	0x0008      	RETURN
; end of _clear_display
_ADC_Read:
;__Lib_ADC_A_A.c,39 :: 		
;__Lib_ADC_A_A.c,41 :: 		
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x1303      	BCF        STATUS, 6
0x00AB	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_A.c,42 :: 		
0x00AC	0x30C0      	MOVLW      192
0x00AD	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_A.c,43 :: 		
0x00AE	0x083E      	MOVF       FARG_ADC_Read_channel, 0
0x00AF	0x00F0      	MOVWF      R0
0x00B0	0x0DF0      	RLF        R0, 1
0x00B1	0x1070      	BCF        R0, 0
0x00B2	0x0DF0      	RLF        R0, 1
0x00B3	0x1070      	BCF        R0, 0
0x00B4	0x0DF0      	RLF        R0, 1
0x00B5	0x1070      	BCF        R0, 0
0x00B6	0x0870      	MOVF       R0, 0
0x00B7	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_A.c,44 :: 		
0x00B8	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_A.c,47 :: 		
0x00B9	0x202F      	CALL       _Delay_22us
;__Lib_ADC_A_A.c,50 :: 		
0x00BA	0x151F      	BSF        ADCON0, 2
;__Lib_ADC_A_A.c,53 :: 		
L_ADC_Read2:
0x00BB	0x1D1F      	BTFSS      ADCON0, 2
0x00BC	0x28BF      	GOTO       L_ADC_Read3
;__Lib_ADC_A_A.c,54 :: 		
0x00BD	0x0000      	NOP
0x00BE	0x28BB      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_A.c,57 :: 		
0x00BF	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_A.c,58 :: 		
0x00C0	0x081E      	MOVF       ADRES, 0
0x00C1	0x00F0      	MOVWF      R0
0x00C2	0x01F1      	CLRF       R0+1
;__Lib_ADC_A_A.c,60 :: 		
L_end_ADC_Read:
0x00C3	0x0008      	RETURN
; end of _ADC_Read
_check_delay_pin:
;protector.c,45 :: 		char check_delay_pin(){
;protector.c,46 :: 		char adc = adc_read(0);
0x00C4	0x1283      	BCF        STATUS, 5
0x00C5	0x1303      	BCF        STATUS, 6
0x00C6	0x01BE      	CLRF       FARG_ADC_Read_channel
0x00C7	0x20A9      	CALL       _ADC_Read
;protector.c,47 :: 		if(adc > 200) return 1;
0x00C8	0x0870      	MOVF       R0, 0
0x00C9	0x3CC8      	SUBLW      200
0x00CA	0x1803      	BTFSC      STATUS, 0
0x00CB	0x28CF      	GOTO       L_check_delay_pin15
0x00CC	0x3001      	MOVLW      1
0x00CD	0x00F0      	MOVWF      R0
0x00CE	0x28D0      	GOTO       L_end_check_delay_pin
L_check_delay_pin15:
;protector.c,48 :: 		else return 0;
0x00CF	0x01F0      	CLRF       R0
;protector.c,49 :: 		}
L_end_check_delay_pin:
0x00D0	0x0008      	RETURN
; end of _check_delay_pin
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00D1	0x1283      	BCF        STATUS, 5
0x00D2	0x1303      	BCF        STATUS, 6
0x00D3	0x082E      	MOVF       ___DoICPAddr+1, 0
0x00D4	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00D5	0x082D      	MOVF       ___DoICPAddr, 0
0x00D6	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00D7	0x0008      	RETURN
; end of _____DoICP
_show_display:
;protector.c,22 :: 		void show_display(char flag, int dta){
;protector.c,24 :: 		digit[0] = dta / 100;
0x00D8	0x3064      	MOVLW      100
0x00D9	0x1283      	BCF        STATUS, 5
0x00DA	0x1303      	BCF        STATUS, 6
0x00DB	0x00F4      	MOVWF      R4
0x00DC	0x3000      	MOVLW      0
0x00DD	0x00F5      	MOVWF      R4+1
0x00DE	0x0838      	MOVF       FARG_show_display_dta, 0
0x00DF	0x00F0      	MOVWF      R0
0x00E0	0x0839      	MOVF       FARG_show_display_dta+1, 0
0x00E1	0x00F1      	MOVWF      R0+1
0x00E2	0x2037      	CALL       _Div_16x16_S
0x00E3	0x0870      	MOVF       R0, 0
0x00E4	0x00BA      	MOVWF      show_display_digit_L0
;protector.c,25 :: 		digit[1] = (dta % 100) / 10;
0x00E5	0x3064      	MOVLW      100
0x00E6	0x00F4      	MOVWF      R4
0x00E7	0x3000      	MOVLW      0
0x00E8	0x00F5      	MOVWF      R4+1
0x00E9	0x0838      	MOVF       FARG_show_display_dta, 0
0x00EA	0x00F0      	MOVWF      R0
0x00EB	0x0839      	MOVF       FARG_show_display_dta+1, 0
0x00EC	0x00F1      	MOVWF      R0+1
0x00ED	0x2037      	CALL       _Div_16x16_S
0x00EE	0x0878      	MOVF       R8, 0
0x00EF	0x00F0      	MOVWF      R0
0x00F0	0x0879      	MOVF       R8+1, 0
0x00F1	0x00F1      	MOVWF      R0+1
0x00F2	0x300A      	MOVLW      10
0x00F3	0x00F4      	MOVWF      R4
0x00F4	0x3000      	MOVLW      0
0x00F5	0x00F5      	MOVWF      R4+1
0x00F6	0x2037      	CALL       _Div_16x16_S
0x00F7	0x0870      	MOVF       R0, 0
0x00F8	0x00BB      	MOVWF      show_display_digit_L0+1
;protector.c,26 :: 		digit[2] = dta % 10;
0x00F9	0x300A      	MOVLW      10
0x00FA	0x00F4      	MOVWF      R4
0x00FB	0x3000      	MOVLW      0
0x00FC	0x00F5      	MOVWF      R4+1
0x00FD	0x0838      	MOVF       FARG_show_display_dta, 0
0x00FE	0x00F0      	MOVWF      R0
0x00FF	0x0839      	MOVF       FARG_show_display_dta+1, 0
0x0100	0x00F1      	MOVWF      R0+1
0x0101	0x2037      	CALL       _Div_16x16_S
0x0102	0x0878      	MOVF       R8, 0
0x0103	0x00F0      	MOVWF      R0
0x0104	0x0879      	MOVF       R8+1, 0
0x0105	0x00F1      	MOVWF      R0+1
0x0106	0x0870      	MOVF       R0, 0
0x0107	0x00BC      	MOVWF      show_display_digit_L0+2
;protector.c,27 :: 		for(x = 0; x < 3; x++){
0x0108	0x01BD      	CLRF       show_display_x_L0
L_show_display0:
0x0109	0x3003      	MOVLW      3
0x010A	0x023D      	SUBWF      show_display_x_L0, 0
0x010B	0x1803      	BTFSC      STATUS, 0
0x010C	0x295D      	GOTO       L_show_display1
;protector.c,28 :: 		if(flag == 1){
0x010D	0x0837      	MOVF       FARG_show_display_flag, 0
0x010E	0x3A01      	XORLW      1
0x010F	0x1D03      	BTFSS      STATUS, 2
0x0110	0x2921      	GOTO       L_show_display3
;protector.c,29 :: 		if(x == 0) digit_1 = 1;
0x0111	0x083D      	MOVF       show_display_x_L0, 0
0x0112	0x3A00      	XORLW      0
0x0113	0x1D03      	BTFSS      STATUS, 2
0x0114	0x2916      	GOTO       L_show_display4
0x0115	0x1607      	BSF        RC4_bit, BitPos(RC4_bit+0)
L_show_display4:
;protector.c,30 :: 		if(x == 1) digit_2 = 1;
0x0116	0x083D      	MOVF       show_display_x_L0, 0
0x0117	0x3A01      	XORLW      1
0x0118	0x1D03      	BTFSS      STATUS, 2
0x0119	0x291B      	GOTO       L_show_display5
0x011A	0x1587      	BSF        RC3_bit, BitPos(RC3_bit+0)
L_show_display5:
;protector.c,31 :: 		if(x == 2) digit_3 = 1;
0x011B	0x083D      	MOVF       show_display_x_L0, 0
0x011C	0x3A02      	XORLW      2
0x011D	0x1D03      	BTFSS      STATUS, 2
0x011E	0x2920      	GOTO       L_show_display6
0x011F	0x1507      	BSF        RC2_bit, BitPos(RC2_bit+0)
L_show_display6:
;protector.c,32 :: 		}
0x0120	0x2934      	GOTO       L_show_display7
L_show_display3:
;protector.c,33 :: 		else if(flag == 2){
0x0121	0x0837      	MOVF       FARG_show_display_flag, 0
0x0122	0x3A02      	XORLW      2
0x0123	0x1D03      	BTFSS      STATUS, 2
0x0124	0x2934      	GOTO       L_show_display8
;protector.c,34 :: 		if(x == 0) digit_4 = 1;
0x0125	0x083D      	MOVF       show_display_x_L0, 0
0x0126	0x3A00      	XORLW      0
0x0127	0x1D03      	BTFSS      STATUS, 2
0x0128	0x292A      	GOTO       L_show_display9
0x0129	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
L_show_display9:
;protector.c,35 :: 		if(x == 1) digit_5 = 1;
0x012A	0x083D      	MOVF       show_display_x_L0, 0
0x012B	0x3A01      	XORLW      1
0x012C	0x1D03      	BTFSS      STATUS, 2
0x012D	0x292F      	GOTO       L_show_display10
0x012E	0x1707      	BSF        RC6_bit, BitPos(RC6_bit+0)
L_show_display10:
;protector.c,36 :: 		if(x == 2) digit_6 = 1;
0x012F	0x083D      	MOVF       show_display_x_L0, 0
0x0130	0x3A02      	XORLW      2
0x0131	0x1D03      	BTFSS      STATUS, 2
0x0132	0x2934      	GOTO       L_show_display11
0x0133	0x1687      	BSF        RC5_bit, BitPos(RC5_bit+0)
L_show_display11:
;protector.c,37 :: 		}
L_show_display8:
L_show_display7:
;protector.c,38 :: 		if(dta < 500) PORTB = anode[digit[x]];
0x0134	0x3080      	MOVLW      128
0x0135	0x0639      	XORWF      FARG_show_display_dta+1, 0
0x0136	0x00F0      	MOVWF      R0
0x0137	0x3080      	MOVLW      128
0x0138	0x3A01      	XORLW      1
0x0139	0x0270      	SUBWF      R0, 0
0x013A	0x1D03      	BTFSS      STATUS, 2
0x013B	0x293E      	GOTO       L__show_display32
0x013C	0x30F4      	MOVLW      244
0x013D	0x0238      	SUBWF      FARG_show_display_dta, 0
L__show_display32:
0x013E	0x1803      	BTFSC      STATUS, 0
0x013F	0x294B      	GOTO       L_show_display12
0x0140	0x083D      	MOVF       show_display_x_L0, 0
0x0141	0x3E3A      	ADDLW      show_display_digit_L0
0x0142	0x0084      	MOVWF      FSR
0x0143	0x0800      	MOVF       INDF, 0
0x0144	0x00F0      	MOVWF      R0
0x0145	0x0870      	MOVF       R0, 0
0x0146	0x3E20      	ADDLW      _anode
0x0147	0x0084      	MOVWF      FSR
0x0148	0x0800      	MOVF       INDF, 0
0x0149	0x0086      	MOVWF      PORTB
0x014A	0x2950      	GOTO       L_show_display13
L_show_display12:
;protector.c,39 :: 		else PORTB = dly[x];
0x014B	0x083D      	MOVF       show_display_x_L0, 0
0x014C	0x3E2A      	ADDLW      _dly
0x014D	0x0084      	MOVWF      FSR
0x014E	0x0800      	MOVF       INDF, 0
0x014F	0x0086      	MOVWF      PORTB
L_show_display13:
;protector.c,40 :: 		delay_ms(1);
0x0150	0x3003      	MOVLW      3
0x0151	0x00FC      	MOVWF      R12
0x0152	0x3097      	MOVLW      151
0x0153	0x00FD      	MOVWF      R13
L_show_display14:
0x0154	0x0BFD      	DECFSZ     R13, 1
0x0155	0x2954      	GOTO       L_show_display14
0x0156	0x0BFC      	DECFSZ     R12, 1
0x0157	0x2954      	GOTO       L_show_display14
0x0158	0x0000      	NOP
0x0159	0x0000      	NOP
;protector.c,41 :: 		clear_display();
0x015A	0x20A0      	CALL       _clear_display
;protector.c,27 :: 		for(x = 0; x < 3; x++){
0x015B	0x0ABD      	INCF       show_display_x_L0, 1
;protector.c,42 :: 		}
0x015C	0x2909      	GOTO       L_show_display0
L_show_display1:
;protector.c,43 :: 		}
L_end_show_display:
0x015D	0x0008      	RETURN
; end of _show_display
_delay_control:
;protector.c,51 :: 		void delay_control(){
;protector.c,53 :: 		if(check_delay_pin()) delay_s = MAX_delay;
0x015E	0x20C4      	CALL       _check_delay_pin
0x015F	0x0870      	MOVF       R0, 0
0x0160	0x1903      	BTFSC      STATUS, 2
0x0161	0x2967      	GOTO       L_delay_control17
0x0162	0x302C      	MOVLW      44
0x0163	0x00B1      	MOVWF      delay_control_delay_s_L0
0x0164	0x3001      	MOVLW      1
0x0165	0x00B2      	MOVWF      delay_control_delay_s_L0+1
0x0166	0x296B      	GOTO       L_delay_control18
L_delay_control17:
;protector.c,54 :: 		else delay_s = MIN_delay;
0x0167	0x301E      	MOVLW      30
0x0168	0x00B1      	MOVWF      delay_control_delay_s_L0
0x0169	0x3000      	MOVLW      0
0x016A	0x00B2      	MOVWF      delay_control_delay_s_L0+1
L_delay_control18:
;protector.c,55 :: 		for(x = delay_s; x >= 0; x--){
0x016B	0x0831      	MOVF       delay_control_delay_s_L0, 0
0x016C	0x00B3      	MOVWF      delay_control_x_L0
0x016D	0x0832      	MOVF       delay_control_delay_s_L0+1, 0
0x016E	0x00B4      	MOVWF      delay_control_x_L0+1
L_delay_control19:
0x016F	0x3080      	MOVLW      128
0x0170	0x0634      	XORWF      delay_control_x_L0+1, 0
0x0171	0x00F0      	MOVWF      R0
0x0172	0x3080      	MOVLW      128
0x0173	0x0270      	SUBWF      R0, 0
0x0174	0x1D03      	BTFSS      STATUS, 2
0x0175	0x2978      	GOTO       L__delay_control35
0x0176	0x3000      	MOVLW      0
0x0177	0x0233      	SUBWF      delay_control_x_L0, 0
L__delay_control35:
0x0178	0x1C03      	BTFSS      STATUS, 0
0x0179	0x299E      	GOTO       L_delay_control20
;protector.c,56 :: 		for(y = 0; y < ADJUST; y++){
0x017A	0x01B5      	CLRF       delay_control_y_L0
0x017B	0x01B6      	CLRF       delay_control_y_L0+1
L_delay_control22:
0x017C	0x3080      	MOVLW      128
0x017D	0x0636      	XORWF      delay_control_y_L0+1, 0
0x017E	0x00F0      	MOVWF      R0
0x017F	0x3080      	MOVLW      128
0x0180	0x0270      	SUBWF      R0, 0
0x0181	0x1D03      	BTFSS      STATUS, 2
0x0182	0x2985      	GOTO       L__delay_control36
0x0183	0x3014      	MOVLW      20
0x0184	0x0235      	SUBWF      delay_control_y_L0, 0
L__delay_control36:
0x0185	0x1803      	BTFSC      STATUS, 0
0x0186	0x2999      	GOTO       L_delay_control23
;protector.c,57 :: 		show_display(1, 500); //dly
0x0187	0x3001      	MOVLW      1
0x0188	0x00B7      	MOVWF      FARG_show_display_flag
0x0189	0x30F4      	MOVLW      244
0x018A	0x00B8      	MOVWF      FARG_show_display_dta
0x018B	0x3001      	MOVLW      1
0x018C	0x00B9      	MOVWF      FARG_show_display_dta+1
0x018D	0x20D8      	CALL       _show_display
;protector.c,58 :: 		show_display(2, x);  //counter
0x018E	0x3002      	MOVLW      2
0x018F	0x00B7      	MOVWF      FARG_show_display_flag
0x0190	0x0833      	MOVF       delay_control_x_L0, 0
0x0191	0x00B8      	MOVWF      FARG_show_display_dta
0x0192	0x0834      	MOVF       delay_control_x_L0+1, 0
0x0193	0x00B9      	MOVWF      FARG_show_display_dta+1
0x0194	0x20D8      	CALL       _show_display
;protector.c,56 :: 		for(y = 0; y < ADJUST; y++){
0x0195	0x0AB5      	INCF       delay_control_y_L0, 1
0x0196	0x1903      	BTFSC      STATUS, 2
0x0197	0x0AB6      	INCF       delay_control_y_L0+1, 1
;protector.c,59 :: 		}
0x0198	0x297C      	GOTO       L_delay_control22
L_delay_control23:
;protector.c,55 :: 		for(x = delay_s; x >= 0; x--){
0x0199	0x3001      	MOVLW      1
0x019A	0x02B3      	SUBWF      delay_control_x_L0, 1
0x019B	0x1C03      	BTFSS      STATUS, 0
0x019C	0x03B4      	DECF       delay_control_x_L0+1, 1
;protector.c,60 :: 		}
0x019D	0x296F      	GOTO       L_delay_control19
L_delay_control20:
;protector.c,61 :: 		}
L_end_delay_control:
0x019E	0x0008      	RETURN
; end of _delay_control
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x019F	0x20D1      	CALL       _____DoICP
0x01A0	0x118A      	BCF        PCLATH, 3
0x01A1	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x01A2	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x01A3	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x01A4	0x0AAD      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x01A5	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x01A6	0x0AAE      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x01A7	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x01A8	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x01A9	0x299F      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x01AA	0x0008      	RETURN
; end of ___CC2DW
_main:
0x01AB	0x30C0      	MOVLW      192
0x01AC	0x1283      	BCF        STATUS, 5
0x01AD	0x1303      	BCF        STATUS, 6
0x01AE	0x00A0      	MOVWF      _anode
0x01AF	0x30F9      	MOVLW      249
0x01B0	0x00A1      	MOVWF      33
0x01B1	0x30A4      	MOVLW      164
0x01B2	0x00A2      	MOVWF      34
0x01B3	0x30B0      	MOVLW      176
0x01B4	0x00A3      	MOVWF      35
0x01B5	0x3099      	MOVLW      153
0x01B6	0x00A4      	MOVWF      36
0x01B7	0x3092      	MOVLW      146
0x01B8	0x00A5      	MOVWF      37
0x01B9	0x3082      	MOVLW      130
0x01BA	0x00A6      	MOVWF      38
0x01BB	0x30F8      	MOVLW      248
0x01BC	0x00A7      	MOVWF      39
0x01BD	0x3080      	MOVLW      128
0x01BE	0x00A8      	MOVWF      40
0x01BF	0x3090      	MOVLW      144
0x01C0	0x00A9      	MOVWF      41
0x01C1	0x30A1      	MOVLW      161
0x01C2	0x00AA      	MOVWF      _dly
0x01C3	0x30C7      	MOVLW      199
0x01C4	0x00AB      	MOVWF      43
0x01C5	0x3091      	MOVLW      145
0x01C6	0x00AC      	MOVWF      44
;protector.c,63 :: 		void main() {
;protector.c,64 :: 		ADCON1 = 0x04;
0x01C7	0x3004      	MOVLW      4
0x01C8	0x1683      	BSF        STATUS, 5
0x01C9	0x009F      	MOVWF      ADCON1
;protector.c,65 :: 		TRISA = 0x03;
0x01CA	0x3003      	MOVLW      3
0x01CB	0x0085      	MOVWF      TRISA
;protector.c,66 :: 		TRISB = 0x00;
0x01CC	0x0186      	CLRF       TRISB
;protector.c,67 :: 		TRISC = 0x00;
0x01CD	0x0187      	CLRF       TRISC
;protector.c,68 :: 		relay = 0;
0x01CE	0x1283      	BCF        STATUS, 5
0x01CF	0x1285      	BCF        RA5_bit, BitPos(RA5_bit+0)
;protector.c,69 :: 		delay_control();
0x01D0	0x215E      	CALL       _delay_control
;protector.c,71 :: 		while(1){
L_main25:
;protector.c,72 :: 		char x, adc = 0;
0x01D1	0x01B0      	CLRF       main_adc_L1
;protector.c,73 :: 		adc = adc_read(1);
0x01D2	0x3001      	MOVLW      1
0x01D3	0x00BE      	MOVWF      FARG_ADC_Read_channel
0x01D4	0x20A9      	CALL       _ADC_Read
0x01D5	0x0870      	MOVF       R0, 0
0x01D6	0x00B0      	MOVWF      main_adc_L1
;protector.c,74 :: 		relay = 1;
0x01D7	0x1685      	BSF        RA5_bit, BitPos(RA5_bit+0)
;protector.c,75 :: 		for(x = 0; x < 200; x++){
0x01D8	0x01AF      	CLRF       main_x_L1
L_main27:
0x01D9	0x30C8      	MOVLW      200
0x01DA	0x022F      	SUBWF      main_x_L1, 0
0x01DB	0x1803      	BTFSC      STATUS, 0
0x01DC	0x29EB      	GOTO       L_main28
;protector.c,76 :: 		show_display(1, adc);
0x01DD	0x3001      	MOVLW      1
0x01DE	0x00B7      	MOVWF      FARG_show_display_flag
0x01DF	0x0830      	MOVF       main_adc_L1, 0
0x01E0	0x00B8      	MOVWF      FARG_show_display_dta
0x01E1	0x01B9      	CLRF       FARG_show_display_dta+1
0x01E2	0x20D8      	CALL       _show_display
;protector.c,77 :: 		show_display(2, 220);
0x01E3	0x3002      	MOVLW      2
0x01E4	0x00B7      	MOVWF      FARG_show_display_flag
0x01E5	0x30DC      	MOVLW      220
0x01E6	0x00B8      	MOVWF      FARG_show_display_dta
0x01E7	0x01B9      	CLRF       FARG_show_display_dta+1
0x01E8	0x20D8      	CALL       _show_display
;protector.c,75 :: 		for(x = 0; x < 200; x++){
0x01E9	0x0AAF      	INCF       main_x_L1, 1
;protector.c,78 :: 		}
0x01EA	0x29D9      	GOTO       L_main27
L_main28:
;protector.c,79 :: 		}
0x01EB	0x29D1      	GOTO       L_main25
;protector.c,80 :: 		}
L_end_main:
0x01EC	0x29EC      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [44]    _Div_16x16_S_L
0x002F       [8]    _Delay_22us
0x0037     [105]    _Div_16x16_S
0x00A0       [9]    _clear_display
0x00A9      [27]    _ADC_Read
0x00C4      [13]    _check_delay_pin
0x00D1       [7]    _____DoICP
0x00D8     [134]    _show_display
0x015E      [65]    _delay_control
0x019F      [12]    ___CC2DW
0x01AB      [66]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [0]    RA5_bit
0x0006       [1]    PORTB
0x0007       [0]    RC5_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC7_bit
0x0007       [0]    RC4_bit
0x0007       [0]    RC3_bit
0x000A       [1]    PCLATH
0x001E       [1]    ADRES
0x001F       [1]    ADCON0
0x0020      [10]    _anode
0x002A       [3]    _dly
0x002D       [2]    ___DoICPAddr
0x002F       [1]    main_x_L1
0x0030       [1]    main_adc_L1
0x0031       [2]    delay_control_delay_s_L0
0x0033       [2]    delay_control_x_L0
0x0035       [2]    delay_control_y_L0
0x0037       [1]    FARG_show_display_flag
0x0038       [2]    FARG_show_display_dta
0x003A       [3]    show_display_digit_L0
0x003D       [1]    show_display_x_L0
0x003E       [1]    FARG_ADC_Read_channel
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x009F       [1]    ADCON1
