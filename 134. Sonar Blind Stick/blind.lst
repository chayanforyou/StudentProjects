MPASM  5.42                               A.S   2-17-2017  11:35:07         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE


                      00002         list
                      00003 ;{
                      00004 ;FILE F1 = C:\USERS\ANTOR~1.TWO\GOOGLE~1\EMBEDDED PROJECTS\RAKTIM SIR\NOV 16\7. SONAR BLIND STICK\BLIND.
                            BAS
                      00005 ;FILE F2 = C:\USERS\ANTOR~1.TWO\GOOGLE~1\EMBEDDED PROJECTS\RAKTIM SIR\NOV 16\7. SONAR BLIND STICK\BLIND.
                            PRP
                      00006 ;}
                      00007 ;[Variable Listing]
                      00008 ;range_F,002A,DT_WORD,2
                      00009 ;range_L,002C,DT_WORD,2
                      00010 ;range_R,002E,DT_WORD,2
                      00011 ;ECHO_F,0007.7,DT_BIT
                      00012 ;TRIG_F,0007.6,DT_BIT
                      00013 ;ECHO_L,0006.7,DT_BIT
                      00014 ;TRIG_L,0006.6,DT_BIT
                      00015 ;ECHO_R,0007.5,DT_BIT
                      00016 ;TRIG_R,0007.4,DT_BIT
                      00017 ;buzz_L,0005.1,DT_BIT
                      00018 ;buzz_R,0007.3,DT_BIT
                      00019 ;[End Listing]
                      00020 ;[TOTAL VARS] 16

                      00022 #define CONFIG_REQ 1
MESSAGE[308]: WARNING LEVEL SUPERSEDED BY COMMAND LINE VALUE. (2)
                      00023  LIST  P = 16C72, F = INHX8M, W = 2, X = ON, R = DEC, MM = ON, N = 0, C = 255
  00000000            00024 INDF equ 0X0000
  00000001            00025 TMR0 equ 0X0001
  00000002            00026 PCL equ 0X0002
  00000003            00027 STATUS equ 0X0003
  00000004            00028 FSR equ 0X0004
  00000005            00029 PORTA equ 0X0005
  00000006            00030 PORTB equ 0X0006
  00000007            00031 PORTC equ 0X0007
  0000000A            00032 PCLATH equ 0X000A
  0000000B            00033 INTCON equ 0X000B
  0000000C            00034 PIR1 equ 0X000C
  0000000E            00035 TMR1L equ 0X000E
  0000000F            00036 TMR1LH equ 0X000F
  0000000F            00037 TMR1H equ 0X000F
  00000010            00038 T1CON equ 0X0010
  00000011            00039 TMR2 equ 0X0011
  00000012            00040 T2CON equ 0X0012
  00000013            00041 SSPBUF equ 0X0013
  00000014            00042 SSPCON equ 0X0014
  00000015            00043 CCPR1L equ 0X0015
  00000016            00044 CCPR1LH equ 0X0016
  00000016            00045 CCPR1H equ 0X0016
  00000017            00046 CCP1CON equ 0X0017
  0000001E            00047 ADRES equ 0X001E
  0000001F            00048 ADCON0 equ 0X001F
  00000081            00049 OPTION_REG equ 0X0081
  00000085            00050 TRISA equ 0X0085
  00000086            00051 TRISB equ 0X0086
  00000087            00052 TRISC equ 0X0087
  0000008C            00053 PIE1 equ 0X008C
  0000008E            00054 PCON equ 0X008E
  00000092            00055 PR2 equ 0X0092
  00000093            00056 SSPADD equ 0X0093
  00000094            00057 SSPSTAT equ 0X0094
  0000009F            00058 ADCON1 equ 0X009F
  00000087            00059 _I2C_SCL_PORT=TRISC
  00000003            00060 _I2C_SCL_PIN=3
  00000087            00061 _I2C_SDA_PORT=TRISC
  00000003            00062 _I2C_SDA_PIN=3
  00000007            00063 IRP=7
  00000006            00064 RP1=6
  00000005            00065 RP0=5
  00000004            00066 NOT_TO=4
  00000003            00067 NOT_PD=3
  00000002            00068 Z=2
  00000001            00069 DC=1
  00000000            00070 C=0
  00000007            00071 GIE=7
  00000006            00072 PEIE=6
  00000005            00073 T0IE=5
  00000004            00074 INTE=4
  00000003            00075 RBIE=3
  00000002            00076 T0IF=2
  00000001            00077 INTF=1
  00000000            00078 RBIF=0
  00000006            00079 ADIF=6
  00000003            00080 SSPIF=3
  00000002            00081 CCP1IF=2
  00000001            00082 TMR2IF=1
  00000000            00083 TMR1IF=0
  00000005            00084 T1CKPS1=5
  00000004            00085 T1CKPS0=4
  00000003            00086 T1OSCEN=3
  00000002            00087 NOT_T1SYNC=2
  00000002            00088 T1INSYNC=2
  00000001            00089 TMR1CS=1
  00000000            00090 TMR1ON=0
  00000006            00091 TOUTPS3=6
  00000005            00092 TOUTPS2=5
  00000004            00093 TOUTPS1=4
  00000003            00094 TOUTPS0=3
  00000002            00095 TMR2ON=2
  00000002            00096 PP_TMR2ON=2
  00000001            00097 T2CKPS1=1
  00000001            00098 PP_T2CKPS1=1
  00000000            00099 T2CKPS0=0
  00000000            00100 PP_T2CKPS0=0
  00000007            00101 WCOL=7
  00000006            00102 SSPOV=6
  00000005            00103 SSPEN=5
  00000004            00104 CKP=4
  00000003            00105 SSPM3=3
  00000002            00106 SSPM2=2
  00000001            00107 SSPM1=1
  00000000            00108 SSPM0=0
  00000005            00109 CCP1X=5
  00000004            00110 CCP1Y=4
  00000003            00111 CCP1M3=3
  00000002            00112 CCP1M2=2
  00000001            00113 CCP1M1=1
  00000000            00114 CCP1M0=0
  00000007            00115 ADCS1=7
  00000006            00116 ADCS0=6
  00000005            00117 CHS2=5
  00000004            00118 CHS1=4
  00000003            00119 CHS0=3
  00000002            00120 GO=2
  00000002            00121 NOT_DONE=2
  00000002            00122 GO_DONE=2
  00000002            00123 PP_GO_DONE=2
  00000000            00124 ADON=0
  00000007            00125 NOT_RBPU=7
  00000006            00126 INTEDG=6
  00000005            00127 T0CS=5
  00000004            00128 T0SE=4
  00000003            00129 PSA=3
  00000002            00130 PS2=2
  00000001            00131 PS1=1
  00000000            00132 PS0=0
  00000006            00133 ADIE=6
  00000003            00134 SSPIE=3
  00000002            00135 CCP1IE=2
  00000001            00136 TMR2IE=1
  00000000            00137 TMR1IE=0
  00000001            00138 NOT_POR=1
  00000000            00139 NOT_BO=0
  00000000            00140 NOT_BOR=0
  00000005            00141 I2C_DATA=5
  00000005            00142 NOT_A=5
  00000005            00143 NOT_ADDRESS=5
  00000005            00144 D_A=5
  00000005            00145 DATA_ADDRESS=5
  00000004            00146 I2C_STOP=4
  00000003            00147 I2C_START=3
  00000002            00148 I2C_READ=2
  00000002            00149 NOT_W=2
  00000002            00150 NOT_WRITE=2
  00000002            00151 R_W=2
  00000002            00152 PP_R_W=2
  00000002            00153 READ_WRITE=2
  00000001            00154 UA=1
  00000000            00155 BF=0
  00000000            00156 PP_BF=0
  00000002            00157 PCFG2=2
  00000001            00158 PCFG1=1
  00000000            00159 PCFG0=0
  000000BF            00160   __MAXRAM 0XBF
                      00161   __BADRAM 0X08-0X09, 0X0D, 0X18-0X1D
                      00162   __BADRAM 0X88-0X89, 0X8D, 0X8F-0X91, 0X95-0X9E
  00003FFF            00163 BODEN_ON equ 0X3FFF
  00003FBF            00164 BODEN_OFF equ 0X3FBF
  000000CF            00165 CP_ALL equ 0X00CF
  000015DF            00166 CP_75 equ 0X15DF
  00002AEF            00167 CP_50 equ 0X2AEF
  00003FFF            00168 CP_OFF equ 0X3FFF
  00003FFF            00169 PWRTE_OFF equ 0X3FFF
  00003FF7            00170 PWRTE_ON equ 0X3FF7
  00003FFF            00171 WDT_ON equ 0X3FFF
  00003FFB            00172 WDT_OFF equ 0X3FFB
  00003FFC            00173 LP_OSC equ 0X3FFC
  00003FFD            00174 XT_OSC equ 0X3FFD
  00003FFE            00175 HS_OSC equ 0X3FFE
  00003FFF            00176 RC_OSC equ 0X3FFF
  00003FBF            00177 BOREN_OFF equ 0X3FBF
  00003FFF            00178 BOREN_ON equ 0X3FFF
  00003FFE            00179 FOSC_HS equ 0X3FFE
  00003FFC            00180 FOSC_LP equ 0X3FFC
  00003FFF            00181 FOSC_RC equ 0X3FFF
  00003FFD            00182 FOSC_XT equ 0X3FFD
  00003FFB            00183 WDTE_OFF equ 0X3FFB
  00003FFF            00184 WDTE_ON equ 0X3FFF

                      00188 #define __16C72 1
                      00189 #define XTAL 20
                      00190 #define _CORE 14
                      00191 #define _MAXRAM 128
                      00192 #define _RAM_END 0X0080
                      00193 #define _MAXMEM 2048
                      00194 #define _ADC 5
                      00195 #define _ADC_RES 8
                      00196 #define _EEPROM 0
                      00197 #define _PAGES 1
                      00198 #define _BANKS 2
                      00199 #define RAM_BANKS 2
                      00200 #define _USART 0
                      00201 #define _USB 0
                      00202 #define _FLASH 0
                      00203 #define _CWRITE_BLOCK 0
                      00204 #define BANK0_START 0X20
                      00205 #define BANK0_END 0X7F
                      00206 #define BANK1_START 0X00A0
                      00207 #define BANK1_END 0X00BF
                      00208 #define _SYSTEM_VARIABLE_COUNT 10
  00000000            00209 ram_bank = 0
  00000000            00210 CURRENT@PAGE = 0
  00000000            00211 DEST@PAGE = 0
                      00212 #define LCD#TYPE 0
                      00214 f@call macro PDEST
                      00215 if(PDEST < 1)
                      00216 else
                      00217 if(PDEST > $)
                      00218 else
                      00219 endif
                      00220 endif
                      00221         call PDEST
                      00222         endm
                      00223 F@JUMP macro PDEST
                      00224 if(PDEST < 1)
                      00225 else
                      00226 if(PDEST > $)
                      00227 else
                      00228 endif
                      00229 endif
                      00230         goto PDEST
                      00231         endm
                      00232 set@page macro PDEST
                      00233         endm
                      00234 s@b     macro pVarin
                      00235 if((pVarin & 384) == 0)
                      00236 if(ram_bank == 1)
                      00237         bcf 3,5
                      00238 endif
                      00239 if(ram_bank == 2)
                      00240         bcf 3,6
                      00241 endif
                      00242 if(ram_bank == 3)
                      00243         bcf 3,5
                      00244         bcf 3,6
                      00245 endif
                      00246 ram_bank = 0
                      00247 endif
                      00248 if((pVarin & 384) == 128)
                      00249 if(ram_bank == 0)
                      00250         bsf 3,5
                      00251 endif
                      00252 if(ram_bank == 2)
                      00253         bsf 3,5
                      00254         bcf 3,6
                      00255 endif
                      00256 if(ram_bank == 3)
                      00257         bcf 3,6
                      00258 endif
                      00259 ram_bank = 1
                      00260 endif
                      00261 if((pVarin & 384) == 256)
                      00262 if(ram_bank == 0)
                      00263         bsf 3,6
                      00264 endif
                      00265 if(ram_bank == 1)
                      00266         bcf 3,5
                      00267         bsf 3,6
                      00268 endif
                      00269 if(ram_bank == 3)
                      00270         bcf 3,5
                      00271 endif
                      00272 ram_bank = 2
                      00273 endif
                      00274         endm
                      00275 r@b     macro
                      00276 if((ram_bank & 1) != 0)
                      00277         bcf 3,5
                      00278 endif
                      00279 if((ram_bank & 2) != 0)
                      00280         bcf 3,6
                      00281 endif
                      00282 ram_bank = 0
                      00283         endm
                      00284 jump macro PLABEL
                      00285     goto PLABEL
                      00286     endm
                      00287 wreg_byte macro pByteOut
                      00288     s@b pByteOut
                      00289     movwf pByteOut
                      00290     r@b
                      00291     endm
                      00292 wreg_bit macro pVarOut,pBitout
                      00293     s@b pVarOut
                      00294     andlw 1
                      00295     btfsc STATUS,2
                      00296     bcf pVarOut,pBitout
                      00297     btfss STATUS,2
                      00298     bsf pVarOut,pBitout
                      00299     r@b
                      00300     endm
                      00301 wreg_word macro pWordOut
                      00302     s@b pWordOut
                      00303     movwf pWordOut
                      00304     s@b pWordOut+1
                      00305     clrf pWordOut+1
                      00306     r@b
                      00307     endm
                      00308 wreg_dword macro pDwordOut
                      00309     s@b pDwordOut+3
                      00310     clrf pDwordOut+3
                      00311     s@b pDwordOut+2
                      00312     clrf pDwordOut+2
                      00313     s@b pDwordOut+1
                      00314     clrf pDwordOut+1
                      00315     s@b pDwordOut
                      00316     movwf pDwordOut
                      00317     r@b
                      00318     endm
                      00319 byte_wreg macro pByteIn
                      00320     s@b pByteIn
                      00321     movf pByteIn,W
                      00322     r@b
                      00323     endm
                      00324 num_wreg macro pNumIn
                      00325     movlw (pNumIn & 255)
                      00326     endm
                      00327 num_byte macro pNumIn,pByteOut
                      00328     s@b pByteOut
                      00329 if(pNumIn == 0)
                      00330     clrf pByteOut
                      00331 else
                      00332     movlw (pNumIn & 255)
                      00333     movwf pByteOut
                      00334 endif
                      00335     r@b
                      00336     endm
                      00337 num_bit macro pNumIn,pVarOut,pBitout
                      00338     s@b pVarOut
                      00339 if((pNumIn & 1) == 1)
                      00340     bsf pVarOut,pBitout
                      00341 else
                      00342     bcf pVarOut,pBitout
                      00343 endif
                      00344     r@b
                      00345     endm
                      00346 num_word macro pNumIn,pWordOut
                      00347 if((pNumIn & 255) == 0)
                      00348     s@b pWordOut
                      00349     clrf pWordOut
                      00350 else
                      00351     s@b pWordOut
                      00352     movlw low (pNumIn)
                      00353     movwf pWordOut
                      00354 endif
                      00355 if(((pNumIn >> 8) & 255) == 0)
                      00356     s@b pWordOut+1
                      00357     clrf pWordOut+1
                      00358 else
                      00359     s@b pWordOut+1
                      00360     movlw high (pNumIn)
                      00361     movwf pWordOut+1
                      00362 endif
                      00363     r@b
                      00364     endm
                      00365 num_dword macro pNumIn,pDwordOut
                      00366 if ((pNumIn >> 24 & 255) == 0)
                      00367     s@b pDwordOut+3
                      00368     clrf pDwordOut+3
                      00369 else
                      00370     s@b pDwordOut+3
                      00371     movlw ((pNumIn >> 24) & 255)
                      00372     movwf pDwordOut+3
                      00373 endif
                      00374 if( ((pNumIn >> 16) & 255) == 0)
                      00375     s@b pDwordOut+2
                      00376     clrf pDwordOut+2
                      00377 else
                      00378     s@b pDwordOut+2
                      00379     movlw ((pNumIn >> 16) & 255)
                      00380     movwf pDwordOut+2
                      00381 endif
                      00382 if( ((pNumIn >> 8) & 255) == 0)
                      00383     s@b pDwordOut+1
                      00384     clrf pDwordOut+1
                      00385 else
                      00386     s@b pDwordOut+1
                      00387     movlw high (pNumIn)
                      00388     movwf pDwordOut+1
                      00389 endif
                      00390 if((pNumIn & 255) == 0)
                      00391     s@b pDwordOut
                      00392     clrf pDwordOut
                      00393 else
                      00394     s@b pDwordOut
                      00395     movlw low (pNumIn)
                      00396     movwf pDwordOut
                      00397 endif
                      00398     r@b
                      00399     endm
                      00400 bit_wreg macro pVarin,pBitIn
                      00401     s@b pVarin
                      00402     clrw
                      00403     btfsc pVarin,pBitIn
                      00404     movlw 1
                      00405     r@b
                      00406     endm
                      00407 bit_byte macro pVarin,pBitIn,pByteOut
                      00408     s@b pVarin
                      00409     clrw
                      00410     btfsc pVarin,pBitIn
                      00411     movlw 1
                      00412     s@b pByteOut
                      00413     movwf pByteOut
                      00414     r@b
                      00415     endm
                      00416 bit_bit macro pVarin,pBitIn,pVarOut,pBitout
                      00417 if((pVarin & 65408) == (pVarOut & 65408))
                      00418     s@b pVarOut
                      00419     btfsc pVarin,pBitIn
                      00420     bsf pVarOut,pBitout
                      00421     btfss pVarin,pBitIn
                      00422     bcf pVarOut,pBitout
                      00423 else
                      00424     s@b pVarin
                      00425     clrdc
                      00426     btfsc pVarin,pBitIn
                      00427     setdc
                      00428     s@b pVarOut
                      00429     skpndc
                      00430     bsf pVarOut,pBitout
                      00431     skpdc
                      00432     bcf pVarOut,pBitout
                      00433 endif
                      00434     endm
                      00435 bit_word macro pVarin,pBitIn,pWordOut
                      00436     s@b pWordOut+1
                      00437     clrf pWordOut+1
                      00438     bit_byte pVarin,pBitIn,pWordOut
                      00439     endm
                      00440 bit_dword macro pVarin,pBitIn,pDwordOut
                      00441     s@b pDwordOut+3
                      00442     clrf pDwordOut+3
                      00443     s@b pDwordOut+2
                      00444     clrf pDwordOut+2
                      00445     s@b pDwordOut+1
                      00446     clrf pDwordOut+1
                      00447     bit_byte pVarin,pBitIn,pDwordOut
                      00448     endm
                      00449 word_wreg macro pWordIn
                      00450     byte_wreg pWordIn
                      00451     endm
                      00452 word_byte macro pWordIn,pByteOut
                      00453     byte_byte pWordIn,pByteOut
                      00454     endm
                      00455 word_bit macro pWordIn,pVarOut,pBitout
                      00456     byte_bit pWordIn, pVarOut, pBitout
                      00457     endm
                      00458 word_word macro pWordIn,pWordOut
                      00459     s@b pWordIn+1
                      00460     movf pWordIn+1,W
                      00461     s@b pWordOut+1
                      00462     movwf pWordOut+1
                      00463     byte_byte pWordIn,pWordOut
                      00464     endm
                      00465 word_dword macro pWordIn,pDwordOut
                      00466     s@b pDwordOut+3
                      00467     clrf pDwordOut+3
                      00468     s@b pDwordOut+2
                      00469     clrf pDwordOut+2
                      00470     byte_byte pWordIn+1,pDwordOut+1
                      00471     byte_byte pWordIn,pDwordOut
                      00472     endm
                      00473 byte_byte macro pByteIn,pByteOut
                      00474     s@b pByteIn
                      00475     movf pByteIn,W
                      00476     s@b pByteOut
                      00477     movwf pByteOut
                      00478     r@b
                      00479     endm
                      00480 byte_word macro pByteIn,pWordOut
                      00481     s@b pWordOut+1
                      00482     clrf pWordOut+1
                      00483     byte_byte pByteIn,pWordOut
                      00484     endm
                      00485 byte_dword macro pByteIn,pDwordOut
                      00486     s@b pDwordOut+3
                      00487     clrf pDwordOut+3
                      00488     s@b pDwordOut+2
                      00489     clrf pDwordOut+2
                      00490     s@b pDwordOut+1
                      00491     clrf pDwordOut+1
                      00492     byte_byte pByteIn,pDwordOut
                      00493     endm
                      00494     byte_bit macro pByteIn,pVarOut,pBitout
                      00495 if((pByteIn & 65408) == (pVarOut & 65408))
                      00496     s@b pByteIn
                      00497     btfsc pByteIn,0
                      00498     bsf pVarOut,pBitout
                      00499     btfss pByteIn,0
                      00500     bcf pVarOut,pBitout
                      00501 else
                      00502     s@b pByteIn
                      00503     rrf pByteIn,W
                      00504     s@b pVarOut
                      00505     skpnc
                      00506     bsf pVarOut,pBitout
                      00507     skpc
                      00508     bcf pVarOut,pBitout
                      00509 endif
                      00510     r@b
                      00511     endm
                      00512 dword_wreg macro pDwordIn
                      00513     byte_wreg pDwordIn
                      00514     endm
                      00515 dword_byte macro pDwordIn,pByteOut
                      00516     byte_byte pDwordIn,pByteOut
                      00517     endm
                      00518 dword_word macro pDwordIn,pWordOut
                      00519     s@b pDwordIn+1
                      00520     movf pDwordIn+1,W
                      00521     s@b pWordOut+1
                      00522     movwf pWordOut+1
                      00523     byte_byte pDwordIn,pWordOut
                      00524     endm
                      00525 dword_dword macro pDwordIn,pDwordOut
                      00526     byte_byte pDwordIn+3,pDwordOut+3
                      00527     byte_byte pDwordIn+2,pDwordOut+2
                      00528     byte_byte pDwordIn+1,pDwordOut+1
                      00529     byte_byte pDwordIn,pDwordOut
                      00530     endm
                      00531 dword_bit macro pDwordIn,pVarOut,pBitout
                      00532     byte_bit pDwordIn,pVarOut,pBitout
                      00533     endm
  0000                00534 variable CURRENT@PAGE = 0
  0000                00535 variable PDESTINATION@PAGE = 0
                      00536 FIND@PAGE macro pLabelIn
                      00537 local CURRENT_ADDR = $
                      00538 local DEST_ADDR = pLabelIn
                      00539 if((CURRENT_ADDR >= 0X1800) && (CURRENT_ADDR <= 0X2000))
                      00540     CURRENT@PAGE = 3
                      00541 endif
                      00542 if((CURRENT_ADDR >= 0X1000) && (CURRENT_ADDR <= 0X1800))
                      00543     CURRENT@PAGE = 2
                      00544 endif
                      00545 if((CURRENT_ADDR >= 0X0800) && (CURRENT_ADDR <= 0X1000))
                      00546     CURRENT@PAGE = 1
                      00547 endif
                      00548 if((CURRENT_ADDR >= 0) && (CURRENT_ADDR <= 0X0800))
                      00549     CURRENT@PAGE = 0
                      00550 endif
                      00551 if((DEST_ADDR >= 0X1800) && (DEST_ADDR <= 0X2000))
                      00552     PDESTINATION@PAGE = 3
                      00553 endif
                      00554 if((DEST_ADDR >= 0X1000) && (DEST_ADDR <= 0X1800))
                      00555     PDESTINATION@PAGE = 2
                      00556 endif
                      00557 if((DEST_ADDR >= 0X0800) && (DEST_ADDR <= 0X1000))
                      00558     PDESTINATION@PAGE = 1
                      00559 endif
                      00560 if((DEST_ADDR >= 0) && (DEST_ADDR <= 0X0800))
                      00561     PDESTINATION@PAGE = 0
                      00562 endif
                      00563     endm
                      00564 NUM_FSR macro pNumIn
                      00565     num_byte pNumIn, FSR
                      00566 if (((pNumIn >> 8) & 255) == 1)
                      00567     bsf STATUS,7
                      00568 else
                      00569     bcf STATUS,7
                      00570 endif
                      00571     endm
                      00572 label_word macro pLabelIn,pWordOut
                      00573     movlw low (pLabelIn)
                      00574     s@b pWordOut
                      00575     movwf pWordOut
                      00576     movlw high (pLabelIn)
                      00577     s@b pWordOut
                      00578     movwf pWordOut+1
                      00579     r@b
                      00580     endm
  00000020            00583 GEN = 32
  00000021            00584 PP0 = 33
  00000022            00585 PP0H = 34
  00000023            00586 PP1 = 35
  00000024            00587 PP1H = 36
  00000025            00588 PP2 = 37
  00000026            00589 PP2H = 38
  00000027            00590 PP3 = 39
  00000028            00591 PP7 = 40
  00000029            00592 PP7H = 41
  0000002A            00593 range_F = 42
  0000002B            00594 range_FH = 43
  0000002C            00595 range_L = 44
  0000002D            00596 range_LH = 45
  0000002E            00597 range_R = 46
  0000002F            00598 range_RH = 47
                      00599 #define ECHO_F PORTC,7
                      00600 #define TRIG_F PORTC,6
                      00601 #define ECHO_L PORTB,7
                      00602 #define TRIG_L PORTB,6
                      00603 #define ECHO_R PORTC,5
                      00604 #define TRIG_R PORTC,4
                      00605 #define buzz_L PORTA,1
                      00606 #define buzz_R PORTC,3
                      00607 #define __XTAL 20
0000                  00608 proton#code#start
0000                  00609         org 0
0000   2876           00610         goto proton#main#start
0001                  00611 P@OUT
0001   00A0           00612         movwf 32
0002   3AFF           00613         xorlw 255
0003   1784           00614         bsf 4,7
0004   0580           00615         andwf 0,F
0005   0821           00616         movf 33,W
0006   0422           00617         iorwf 34,W
0007   1903           00618         skpnz
0008   2872           00619         goto I@NT
0009   206C           00620         call N@GT
000A   1384           00621         bcf 4,7
000B   0820           00622         movf 32,W
000C   0680           00623         xorwf 0,F
000D   280E           00624         goto $ + 1
000E   0000           00625         nop
000F   2810           00626         goto $ + 1
0010   0AA1           00627         incf 33,F
0011   1903           00628         skpnz
0012   0FA2           00629         incfsz 34,F
0013   280D           00630         goto $ - 6
0014   0680           00631         xorwf 0,F
0015   2872           00632         goto I@NT
0016                  00633 P@IN
0016   00A0           00634         movwf 32
0017   1784           00635         bsf 4,7
0018   0480           00636         iorwf 0,F
0019   1384           00637         bcf 4,7
001A   01A3           00638         clrf 35
001B   1C21           00639         btfss 33,0
001C   00A3           00640         movwf 35
001D   2024           00641         call FL@ST
001E   1903           00642         skpnz
001F   2872           00643         goto I@NT
0020   2024           00644         call FL@ST
0021   1903           00645         skpnz
0022   2872           00646         goto I@NT
0023   2824           00647         goto FL@ST
0024                  00648 FL@ST
0024   0820           00649         movf 32,W
0025   06A3           00650         xorwf 35,F
0026   3001           00651         movlw 1
0027   00A1           00652         movwf 33
0028   01A2           00653         clrf 34
0029   0800           00654         movf 0,W
002A   0520           00655         andwf 32,W
002B   0623           00656         xorwf 35,W
002C   1D03           00657         skpz
002D   0008           00658         return
002E   0AA1           00659         incf 33,F
002F   1903           00660         skpnz
0030   0FA2           00661         incfsz 34,F
0031   2829           00662         goto $ - 8
0032   0008           00663         return
0033                  00664 DL@MS
0033   01A4           00665         clrf 36
0034                  00666 DLY@W
0034   00A3           00667         movwf 35
0035                  00668 DLY@P
0035   30FF           00669         movlw 255
0036   07A3           00670         addwf 35,F
0037   1C03           00671         skpc
0038   07A4           00672         addwf 36,F
0039   1C03           00673         skpc
003A   2872           00674         goto I@NT
003B   3003           00675         movlw 3
003C   00A2           00676         movwf 34
003D   30E6           00677         movlw 230
003E   2041           00678         call DLUS@W
003F   2835           00679         goto DLY@P
0040                  00680 DL@US
0040   01A2           00681         clrf 34
0041                  00682 DLUS@W
0041   3EFC           00683         addlw 252
0042   00A1           00684         movwf 33
0043   09A2           00685         comf 34,F
0044   1C03           00686         skpc
0045   284C           00687         goto $ + 7
0046   30FF           00688         movlw 255
0047   0000           00689         nop
0048   07A1           00690         addwf 33,F
0049   1803           00691         skpnc
004A   2847           00692         goto $ - 3
004B   07A1           00693         addwf 33,F
004C   0000           00694         nop
004D   0FA2           00695         incfsz 34,F
004E   2846           00696         goto $ - 8
004F   0008           00697         return
0050                  00698 D@VD
0050   01A6           00699         clrf 38
0051   01A5           00700         clrf 37
0052                  00701 D@VD2
0052   3010           00702         movlw 16
0053   00A7           00703         movwf 39
0054   0D22           00704         rlf 34,W
0055   0DA5           00705         rlf 37,F
0056   0DA6           00706         rlf 38,F
0057   0823           00707         movf 35,W
0058   02A5           00708         subwf 37,F
0059   0824           00709         movf 36,W
005A   1C03           00710         skpc
005B   0F24           00711         incfsz 36,W
005C   02A6           00712         subwf 38,F
005D   1803           00713         skpnc
005E   2866           00714         goto $ + 8
005F   0823           00715         movf 35,W
0060   07A5           00716         addwf 37,F
0061   0824           00717         movf 36,W
0062   1803           00718         skpnc
0063   0F24           00719         incfsz 36,W
0064   07A6           00720         addwf 38,F
0065   1003           00721         bcf 3,0
0066   0DA1           00722         rlf 33,F
0067   0DA2           00723         rlf 34,F
0068   0BA7           00724         decfsz 39,F
0069   2854           00725         goto $ - 21
006A   0821           00726         movf 33,W
006B   0008           00727         return
006C                  00728 N@GT
006C   09A1           00729         comf 33,F
006D   09A2           00730         comf 34,F
006E   0AA1           00731         incf 33,F
006F   1903           00732         skpnz
0070   0AA2           00733         incf 34,F
0071   0008           00734         return
0072                  00735 I@NT
0072   1383           00736         bcf 3,7
0073                  00737 I@NT2
0073   1283           00738         bcf 3,5
0074   1303           00739         bcf 3,6
0075   0008           00740         return
0076                  00741 proton#main#start
0076   0183           00742         clrf 3

  00000077            00745 F2_SOF equ $ ; BLIND.PRP
  00000077            00746 F2_EOF equ $ ; BLIND.PRP
  00000077            00747 F1_SOF equ $ ; BLIND.BAS
  00000077            00748 F1_000012 equ $ ; IN [BLIND.BAS] ALL_DIGITAL = on
0077   3007           00749         movlw 7
0078   1683           00750         bsf STATUS,5
  00000001            00751 ram_bank = 1
0079   009F           00752         movwf ADCON1
  0000007A            00753 F1_000022 equ $ ; IN [BLIND.BAS] OUTPUT buzz_R : buzz_R = 0
007A   1187           00754         bcf TRISC,3
007B   1283           00755         bcf STATUS,5
  00000000            00756 ram_bank = 0
007C   1187           00757         bcf PORTC,3
  0000007D            00758 F1_000023 equ $ ; IN [BLIND.BAS] OUTPUT buzz_L : buzz_L = 0
007D   1683           00759         bsf STATUS,5
  00000001            00760 ram_bank = 1
007E   1085           00761         bcf TRISA,1
007F   1283           00762         bcf STATUS,5
  00000000            00763 ram_bank = 0
0080   1085           00764         bcf PORTA,1
  00000081            00765 F1_000030 equ $ ; IN [BLIND.BAS] OUTPUT TRIG_F : INPUT ECHO_F
0081   1683           00766         bsf STATUS,5
  00000001            00767 ram_bank = 1
0082   1307           00768         bcf TRISC,6
0083   1787           00769         bsf TRISC,7
  00000084            00770 F1_000031 equ $ ; IN [BLIND.BAS] OUTPUT TRIG_L : INPUT ECHO_L
0084   1306           00771         bcf TRISB,6
0085   1786           00772         bsf TRISB,7
  00000086            00773 F1_000032 equ $ ; IN [BLIND.BAS] OUTPUT TRIG_R : INPUT ECHO_R
0086   1207           00774         bcf TRISC,4
0087   1687           00775         bsf TRISC,5
  00000088            00776 F1_000034 equ $ ; IN [BLIND.BAS] range_F = 0 : range_L = 0 : range_R = 0
0088   1283           00777         bcf STATUS,5
  00000000            00778 ram_bank = 0
0089   01AB           00779         clrf range_FH
008A   01AA           00780         clrf range_F
008B   01AD           00781         clrf range_LH
008C   01AC           00782         clrf range_L
008D   01AF           00783         clrf range_RH
008E   01AE           00784         clrf range_R
008F                  00785 main
  0000008F            00786 F1_000037 equ $ ; IN [BLIND.BAS] PULSOUT TRIG_F, 10, high
008F   01A2           00787         clrf PP0H
0090   300A           00788         movlw 10
0091   00A1           00789         movwf PP0
0092   1683           00790         bsf STATUS,5
  00000001            00791 ram_bank = 1
0093   1307           00792         bcf TRISC,6
0094   1283           00793         bcf STATUS,5
  00000000            00794 ram_bank = 0
0095   1307           00795         bcf PORTC,6
0096   3007           00796         movlw 7
0097   0084           00797         movwf FSR
0098   3040           00798         movlw 64
0099   2001           00799         call P@OUT
  0000009A            00800 F1_000038 equ $ ; IN [BLIND.BAS] range_F = PULSIN ECHO_F, 1
009A   3001           00801         movlw 1
009B   00A1           00802         movwf PP0
009C   3007           00803         movlw 7
009D   0084           00804         movwf FSR
009E   3080           00805         movlw 128
009F   2016           00806         call P@IN
00A0   0822           00807         movf PP0H,W
00A1   00AB           00808         movwf range_FH
00A2   0821           00809         movf PP0,W
00A3   00AA           00810         movwf range_F
  000000A4            00811 F1_000039 equ $ ; IN [BLIND.BAS] DELAYMS 10
00A4   300A           00812         movlw 10
00A5   2033           00813         call DL@MS
  000000A6            00814 F1_000040 equ $ ; IN [BLIND.BAS] range_F = (range_F * 2) / 58
00A6   1003           00815         bcf STATUS,0
00A7   0D2A           00816         rlf range_F,W
00A8   00A8           00817         movwf PP7
00A9   0D2B           00818         rlf range_FH,W
00AA   00A9           00819         movwf PP7H
00AB   0829           00820         movf PP7H,W
00AC   00A2           00821         movwf PP0H
00AD   0828           00822         movf PP7,W
00AE   00A1           00823         movwf PP0
00AF   01A4           00824         clrf PP1H
00B0   303A           00825         movlw 58
00B1   00A3           00826         movwf PP1
00B2   2050           00827         call D@VD
00B3   00AA           00828         movwf range_F
00B4   0822           00829         movf PP0H,W
00B5   00AB           00830         movwf range_FH
  000000B6            00831 F1_000042 equ $ ; IN [BLIND.BAS] if range_F > 24 THEN
00B6   08AB           00832         movf range_FH,F
00B7   1D03           00833         btfss STATUS,2
00B8   28BD           00834         goto CP@LB2
00B9   3019           00835         movlw 25
00BA   022A           00836         subwf range_F,W
00BB   1C03           00837         btfss STATUS,0
00BC   28C0           00838         goto BC@LL2
00BD                  00839 CP@LB2
  000000BD            00840 F1_000043 equ $ ; IN [BLIND.BAS] buzz_L = 0 : buzz_R = 0
00BD   1085           00841         bcf PORTA,1
00BE   1187           00842         bcf PORTC,3
00BF   28C2           00843         goto BC@LL3
00C0                  00844 BC@LL2
  000000C0            00845 F1_000044 equ $ ; IN [BLIND.BAS] else
  000000C0            00846 F1_000045 equ $ ; IN [BLIND.BAS] buzz_L = 1 : buzz_R = 1
00C0   1485           00847         bsf PORTA,1
00C1   1587           00848         bsf PORTC,3
  000000C2            00849 F1_000046 equ $ ; IN [BLIND.BAS] endif
00C2                  00850 BC@LL3
  000000C2            00851 F1_000048 equ $ ; IN [BLIND.BAS] PULSOUT TRIG_L, 10, high
00C2   01A2           00852         clrf PP0H
00C3   300A           00853         movlw 10
00C4   00A1           00854         movwf PP0
00C5   1683           00855         bsf STATUS,5
  00000001            00856 ram_bank = 1
00C6   1306           00857         bcf TRISB,6
00C7   1283           00858         bcf STATUS,5
  00000000            00859 ram_bank = 0
00C8   1306           00860         bcf PORTB,6
00C9   3006           00861         movlw 6
00CA   0084           00862         movwf FSR
00CB   3040           00863         movlw 64
00CC   2001           00864         call P@OUT
  000000CD            00865 F1_000049 equ $ ; IN [BLIND.BAS] range_L = PULSIN ECHO_L, 1
00CD   3001           00866         movlw 1
00CE   00A1           00867         movwf PP0
00CF   3006           00868         movlw 6
00D0   0084           00869         movwf FSR
00D1   3080           00870         movlw 128
00D2   2016           00871         call P@IN
00D3   0822           00872         movf PP0H,W
00D4   00AD           00873         movwf range_LH
00D5   0821           00874         movf PP0,W
00D6   00AC           00875         movwf range_L
  000000D7            00876 F1_000050 equ $ ; IN [BLIND.BAS] DELAYMS 10
00D7   300A           00877         movlw 10
00D8   2033           00878         call DL@MS
  000000D9            00879 F1_000051 equ $ ; IN [BLIND.BAS] range_L = (range_L * 2) / 58
00D9   1003           00880         bcf STATUS,0
00DA   0D2C           00881         rlf range_L,W
00DB   00A8           00882         movwf PP7
00DC   0D2D           00883         rlf range_LH,W
00DD   00A9           00884         movwf PP7H
00DE   0829           00885         movf PP7H,W
00DF   00A2           00886         movwf PP0H
00E0   0828           00887         movf PP7,W
00E1   00A1           00888         movwf PP0
00E2   01A4           00889         clrf PP1H
00E3   303A           00890         movlw 58
00E4   00A3           00891         movwf PP1
00E5   2050           00892         call D@VD
00E6   00AC           00893         movwf range_L
00E7   0822           00894         movf PP0H,W
00E8   00AD           00895         movwf range_LH
  000000E9            00896 F1_000053 equ $ ; IN [BLIND.BAS] if range_L > 24 THEN
00E9   08AD           00897         movf range_LH,F
00EA   1D03           00898         btfss STATUS,2
00EB   28F0           00899         goto CP@LB3
00EC   3019           00900         movlw 25
00ED   022C           00901         subwf range_L,W
00EE   1C03           00902         btfss STATUS,0
00EF   28F2           00903         goto BC@LL5
00F0                  00904 CP@LB3
  000000F0            00905 F1_000054 equ $ ; IN [BLIND.BAS] buzz_L = 0
00F0   1085           00906         bcf PORTA,1
00F1   28F3           00907         goto BC@LL6
00F2                  00908 BC@LL5
  000000F2            00909 F1_000055 equ $ ; IN [BLIND.BAS] else
  000000F2            00910 F1_000056 equ $ ; IN [BLIND.BAS] buzz_L = 1
00F2   1485           00911         bsf PORTA,1
  000000F3            00912 F1_000057 equ $ ; IN [BLIND.BAS] endif
00F3                  00913 BC@LL6
  000000F3            00914 F1_000059 equ $ ; IN [BLIND.BAS] PULSOUT TRIG_R, 10, high
00F3   01A2           00915         clrf PP0H
00F4   300A           00916         movlw 10
00F5   00A1           00917         movwf PP0
00F6   1683           00918         bsf STATUS,5
  00000001            00919 ram_bank = 1
00F7   1207           00920         bcf TRISC,4
00F8   1283           00921         bcf STATUS,5
  00000000            00922 ram_bank = 0
00F9   1207           00923         bcf PORTC,4
00FA   3007           00924         movlw 7
00FB   0084           00925         movwf FSR
00FC   3010           00926         movlw 16
00FD   2001           00927         call P@OUT
  000000FE            00928 F1_000060 equ $ ; IN [BLIND.BAS] range_R = PULSIN ECHO_R, 1
00FE   3001           00929         movlw 1
00FF   00A1           00930         movwf PP0
0100   3007           00931         movlw 7
0101   0084           00932         movwf FSR
0102   3020           00933         movlw 32
0103   2016           00934         call P@IN
0104   0822           00935         movf PP0H,W
0105   00AF           00936         movwf range_RH
0106   0821           00937         movf PP0,W
0107   00AE           00938         movwf range_R
  00000108            00939 F1_000061 equ $ ; IN [BLIND.BAS] DELAYMS 10
0108   300A           00940         movlw 10
0109   2033           00941         call DL@MS
  0000010A            00942 F1_000062 equ $ ; IN [BLIND.BAS] range_R = (range_R * 2) / 58
010A   1003           00943         bcf STATUS,0
010B   0D2E           00944         rlf range_R,W
010C   00A8           00945         movwf PP7
010D   0D2F           00946         rlf range_RH,W
010E   00A9           00947         movwf PP7H
010F   0829           00948         movf PP7H,W
0110   00A2           00949         movwf PP0H
0111   0828           00950         movf PP7,W
0112   00A1           00951         movwf PP0
0113   01A4           00952         clrf PP1H
0114   303A           00953         movlw 58
0115   00A3           00954         movwf PP1
0116   2050           00955         call D@VD
0117   00AE           00956         movwf range_R
0118   0822           00957         movf PP0H,W
0119   00AF           00958         movwf range_RH
  0000011A            00959 F1_000064 equ $ ; IN [BLIND.BAS] if range_R > 24 THEN
011A   08AF           00960         movf range_RH,F
011B   1D03           00961         btfss STATUS,2
011C   2921           00962         goto CP@LB4
011D   3019           00963         movlw 25
011E   022E           00964         subwf range_R,W
011F   1C03           00965         btfss STATUS,0
0120   2923           00966         goto BC@LL8
0121                  00967 CP@LB4
  00000121            00968 F1_000065 equ $ ; IN [BLIND.BAS] buzz_R = 0
0121   1187           00969         bcf PORTC,3
0122   2924           00970         goto BC@LL9
0123                  00971 BC@LL8
  00000123            00972 F1_000066 equ $ ; IN [BLIND.BAS] else
  00000123            00973 F1_000067 equ $ ; IN [BLIND.BAS] buzz_R = 1
0123   1587           00974         bsf PORTC,3
  00000124            00975 F1_000068 equ $ ; IN [BLIND.BAS] endif
0124                  00976 BC@LL9
  00000124            00977 F1_000070 equ $ ; IN [BLIND.BAS] goto main
0124   288F           00978         goto main
  00000125            00979 F1_EOF equ $ ; BLIND.BAS
0125                  00980 PB@LB11
0125   2925           00981         goto PB@LB11
0126                  00983 __EOF
2007   008A           00984 __config FOSC_HS&WDTE_OFF&PWRTE_OFF&CP_ALL&BOREN_OFF
                      00985         end
MPASM  5.42                               A.S   2-17-2017  11:35:07         PAGE  2


SYMBOL TABLE
  LABEL                             VALUE 

ADCON0                            0000001F
ADCON1                            0000009F
ADCS0                             00000006
ADCS1                             00000007
ADIE                              00000006
ADIF                              00000006
ADON                              00000000
ADRES                             0000001E
BANK0_END                         0X7F
BANK0_START                       0X20
BANK1_END                         0X00BF
BANK1_START                       0X00A0
BC@LL2                            000000C0
BC@LL3                            000000C2
BC@LL5                            000000F2
BC@LL6                            000000F3
BC@LL8                            00000123
BC@LL9                            00000124
BF                                00000000
BIT_BIT                           
BIT_BYTE                          
BIT_DWORD                         
BIT_WORD                          
BIT_WREG                          
BODEN_OFF                         00003FBF
BODEN_ON                          00003FFF
BOREN_OFF                         00003FBF
BOREN_ON                          00003FFF
BUZZ_L                            PORTA,1
BUZZ_R                            PORTC,3
BYTE_BIT                          
BYTE_BYTE                         
BYTE_DWORD                        
BYTE_WORD                         
BYTE_WREG                         
C                                 00000000
CCP1CON                           00000017
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCPR1H                            00000016
CCPR1L                            00000015
CCPR1LH                           00000016
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CKP                               00000004
CONFIG_REQ                        1
CP@LB2                            000000BD
CP@LB3                            000000F0
CP@LB4                            00000121
CP_50                             00002AEF
CP_75                             000015DF
CP_ALL                            000000CF
CP_OFF                            00003FFF
CURRENT@PAGE                      00000000
D@VD                              00000050
D@VD2                             00000052
DATA_ADDRESS                      00000005
DC                                00000001
DEST@PAGE                         00000000
DL@MS                             00000033
DL@US                             00000040
DLUS@W                            00000041
DLY@P                             00000035
DLY@W                             00000034
DWORD_BIT                         
DWORD_BYTE                        
DWORD_DWORD                       
DWORD_WORD                        
DWORD_WREG                        
D_A                               00000005
ECHO_F                            PORTC,7
ECHO_L                            PORTB,7
ECHO_R                            PORTC,5
F1_000012                         00000077
F1_000022                         0000007A
F1_000023                         0000007D
F1_000030                         00000081
F1_000031                         00000084
F1_000032                         00000086
F1_000034                         00000088
F1_000037                         0000008F
F1_000038                         0000009A
F1_000039                         000000A4
F1_000040                         000000A6
F1_000042                         000000B6
F1_000043                         000000BD
F1_000044                         000000C0
F1_000045                         000000C0
F1_000046                         000000C2
F1_000048                         000000C2
F1_000049                         000000CD
F1_000050                         000000D7
F1_000051                         000000D9
F1_000053                         000000E9
F1_000054                         000000F0
F1_000055                         000000F2
F1_000056                         000000F2
F1_000057                         000000F3
F1_000059                         000000F3
F1_000060                         000000FE
F1_000061                         00000108
F1_000062                         0000010A
F1_000064                         0000011A
F1_000065                         00000121
F1_000066                         00000123
F1_000067                         00000123
F1_000068                         00000124
F1_000070                         00000124
F1_EOF                            00000125
F1_SOF                            00000077
F2_EOF                            00000077
F2_SOF                            00000077
F@CALL                            
F@JUMP                            
FIND@PAGE                         
FL@ST                             00000024
FOSC_HS                           00003FFE
FOSC_LP                           00003FFC
FOSC_RC                           00003FFF
FOSC_XT                           00003FFD
FSR                               00000004
GEN                               00000020
GIE                               00000007
GO                                00000002
GO_DONE                           00000002
HS_OSC                            00003FFE
I2C_DATA                          00000005
I2C_READ                          00000002
I2C_START                         00000003
I2C_STOP                          00000004
I@NT                              00000072
I@NT2                             00000073
INDF                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IRP                               00000007
JUMP                              
LABEL_WORD                        
LCD#TYPE                          0
LP_OSC                            00003FFC
MAIN                              0000008F
N@GT                              0000006C
NOT_A                             00000005
NOT_ADDRESS                       00000005
NOT_BO                            00000000
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_W                             00000002
NOT_WRITE                         00000002
NUM_BIT                           
NUM_BYTE                          
NUM_DWORD                         
NUM_FSR                           
NUM_WORD                          
NUM_WREG                          
OPTION_REG                        00000081
P@IN                              00000016
P@OUT                             00000001
PB@LB11                           00000125
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCL                               00000002
PCLATH                            0000000A
PCON                              0000008E
PDESTINATION@PAGE                 00000000
PEIE                              00000006
PIE1                              0000008C
PIR1                              0000000C
PORTA                             00000005
PORTB                             00000006
PORTC                             00000007
PP0                               00000021
PP0H                              00000022
PP1                               00000023
PP1H                              00000024
PP2                               00000025
PP2H                              00000026
PP3                               00000027
PP7                               00000028
PP7H                              00000029
PP_BF                             00000000
PP_GO_DONE                        00000002
PP_R_W                            00000002
PP_T2CKPS0                        00000000
PP_T2CKPS1                        00000001
PP_TMR2ON                         00000002
PR2                               00000092
PROTON#CODE#START                 00000000
PROTON#MAIN#START                 00000076
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PWRTE_OFF                         00003FFF
PWRTE_ON                          00003FF7
R@B                               
RAM_BANK                          00000000
RAM_BANKS                         2
RANGE_F                           0000002A
RANGE_FH                          0000002B
RANGE_L                           0000002C
RANGE_LH                          0000002D
RANGE_R                           0000002E
RANGE_RH                          0000002F
RBIE                              00000003
RBIF                              00000000
RC_OSC                            00003FFF
READ_WRITE                        00000002
RP0                               00000005
RP1                               00000006
R_W                               00000002
S@B                               
SET@PAGE                          
SSPADD                            00000093
SSPBUF                            00000013
SSPCON                            00000014
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000094
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000010
T1INSYNC                          00000002
T1OSCEN                           00000003
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000012
TMR0                              00000001
TMR1CS                            00000001
TMR1H                             0000000F
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             0000000E
TMR1LH                            0000000F
TMR1ON                            00000000
TMR2                              00000011
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRIG_F                            PORTC,6
TRIG_L                            PORTB,6
TRIG_R                            PORTC,4
TRISA                             00000085
TRISB                             00000086
TRISC                             00000087
UA                                00000001
WCOL                              00000007
WDTE_OFF                          00003FFB
WDTE_ON                           00003FFF
WDT_OFF                           00003FFB
WDT_ON                            00003FFF
WORD_BIT                          
WORD_BYTE                         
WORD_DWORD                        
WORD_WORD                         
WORD_WREG                         
WREG_BIT                          
WREG_BYTE                         
WREG_DWORD                        
WREG_WORD                         
XTAL                              20
XT_OSC                            00003FFD
Z                                 00000002
_ADC                              5
_ADC_RES                          8
_BANKS                            2
_CORE                             14
_CWRITE_BLOCK                     0
_EEPROM                           0
_FLASH                            0
_I2C_SCL_PIN                      00000003
_I2C_SCL_PORT                     00000087
_I2C_SDA_PIN                      00000003
_I2C_SDA_PORT                     00000087
_MAXMEM                           2048
_MAXRAM                           128
_PAGES                            1
_RAM_END                          0X0080
_SYSTEM_VARIABLE_COUNT            10
_USART                            0
_USB                              0
__16C72                           1
__EOF                             00000126
__XTAL                            20


MEMORY USAGE MAP ('X' = USED,  '-' = UNUSED)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXX---------- ----------------
2000 : -------X-------- ---------------- ---------------- ----------------

ALL OTHER MEMORY BLOCKS UNUSED.

PROGRAM MEMORY WORDS USED:   294
PROGRAM MEMORY WORDS FREE:  1754


ERRORS   :     0
WARNINGS :     0 REPORTED,    11 SUPPRESSED
MESSAGES :     1 REPORTED,    13 SUPPRESSED


