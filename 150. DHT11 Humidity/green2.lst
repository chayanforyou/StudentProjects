;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08-Sep-17 6:17:19 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28D8      	GOTO       216
_Interrupt:
0x0004	0x00DF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00AA      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00AB      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0850      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;green2.c,21 :: 		void Interrupt(){
;green2.c,22 :: 		if (TMR0IF_bit){
0x000D	0x1D0B      	BTFSS      TMR0IF_bit, BitPos(TMR0IF_bit+0)
0x000E	0x2824      	GOTO       L_Interrupt19
;green2.c,23 :: 		TMR0IF_bit = 0;
0x000F	0x1283      	BCF        STATUS, 5
0x0010	0x110B      	BCF        TMR0IF_bit, BitPos(TMR0IF_bit+0)
;green2.c,24 :: 		TMR0 = 6;
0x0011	0x3006      	MOVLW      6
0x0012	0x0081      	MOVWF      TMR0
;green2.c,25 :: 		if(output){
0x0013	0x1C25      	BTFSS      _output, BitPos(_output+0)
0x0014	0x2822      	GOTO       L_Interrupt20
;green2.c,26 :: 		counter++;
0x0015	0x0AA1      	INCF       _counter, 1
;green2.c,27 :: 		if(counter == duty) out = 0;
0x0016	0x0821      	MOVF       _counter, 0
0x0017	0x0627      	XORWF      _duty, 0
0x0018	0x1D03      	BTFSS      STATUS, 2
0x0019	0x281B      	GOTO       L_Interrupt21
0x001A	0x1005      	BCF        GPIO, 0
L_Interrupt21:
;green2.c,28 :: 		if(counter == 20) {counter = 0; out = 1;}
0x001B	0x0821      	MOVF       _counter, 0
0x001C	0x3A14      	XORLW      20
0x001D	0x1D03      	BTFSS      STATUS, 2
0x001E	0x2821      	GOTO       L_Interrupt22
0x001F	0x01A1      	CLRF       _counter
0x0020	0x1405      	BSF        GPIO, 0
L_Interrupt22:
;green2.c,29 :: 		}
0x0021	0x2824      	GOTO       L_Interrupt23
L_Interrupt20:
;green2.c,31 :: 		counter = 0;
0x0022	0x01A1      	CLRF       _counter
;green2.c,32 :: 		out = 0;
0x0023	0x1005      	BCF        GPIO, 0
;green2.c,33 :: 		}
L_Interrupt23:
;green2.c,34 :: 		}
L_Interrupt19:
;green2.c,35 :: 		}
L_end_Interrupt:
L__Interrupt39:
0x0024	0x0820      	MOVF       32, 0
0x0025	0x00D0      	MOVWF      R0
0x0026	0x082B      	MOVF       ___savePCLATH, 0
0x0027	0x008A      	MOVWF      PCLATH
0x0028	0x0E2A      	SWAPF      ___saveSTATUS, 0
0x0029	0x0083      	MOVWF      STATUS
0x002A	0x0EDF      	SWAPF      R15, 1
0x002B	0x0E5F      	SWAPF      R15, 0
0x002C	0x0009      	RETFIE
; end of _Interrupt
_ReadData:
;dht11.h,23 :: 		char ReadData(){
;dht11.h,25 :: 		for(j = 0; j < 8; j++){
0x002D	0x1283      	BCF        STATUS, 5
0x002E	0x01D3      	CLRF       R3
L_ReadData7:
0x002F	0x3008      	MOVLW      8
0x0030	0x0253      	SUBWF      R3, 0
0x0031	0x1803      	BTFSC      STATUS, 0
0x0032	0x2865      	GOTO       L_ReadData8
;dht11.h,26 :: 		while(!DHT11);
L_ReadData10:
0x0033	0x1885      	BTFSC      GPIO, 1
0x0034	0x2836      	GOTO       L_ReadData11
0x0035	0x2833      	GOTO       L_ReadData10
L_ReadData11:
;dht11.h,27 :: 		delay_us(30);
0x0036	0x3013      	MOVLW      19
0x0037	0x00DD      	MOVWF      R13
L_ReadData12:
0x0038	0x0BDD      	DECFSZ     R13, 1
0x0039	0x2838      	GOTO       L_ReadData12
0x003A	0x0000      	NOP
0x003B	0x0000      	NOP
;dht11.h,28 :: 		if(DHT11 == 0)
0x003C	0x1885      	BTFSC      GPIO, 1
0x003D	0x2850      	GOTO       L_ReadData13
;dht11.h,29 :: 		i&= ~(1 << (7 - j));
0x003E	0x0853      	MOVF       R3, 0
0x003F	0x3C07      	SUBLW      7
0x0040	0x00D0      	MOVWF      R0
0x0041	0x0850      	MOVF       R0, 0
0x0042	0x00D1      	MOVWF      R1
0x0043	0x3001      	MOVLW      1
0x0044	0x00D0      	MOVWF      R0
0x0045	0x0851      	MOVF       R1, 0
L__ReadData31:
0x0046	0x1903      	BTFSC      STATUS, 2
0x0047	0x284C      	GOTO       L__ReadData32
0x0048	0x0DD0      	RLF        R0, 1
0x0049	0x1050      	BCF        R0, 0
0x004A	0x3EFF      	ADDLW      255
0x004B	0x2846      	GOTO       L__ReadData31
L__ReadData32:
0x004C	0x09D0      	COMF       R0, 1
0x004D	0x0850      	MOVF       R0, 0
0x004E	0x05D2      	ANDWF      R2, 1
0x004F	0x2863      	GOTO       L_ReadData14
L_ReadData13:
;dht11.h,31 :: 		i|= (1 << (7 - j));
0x0050	0x0853      	MOVF       R3, 0
0x0051	0x3C07      	SUBLW      7
0x0052	0x00D0      	MOVWF      R0
0x0053	0x0850      	MOVF       R0, 0
0x0054	0x00D1      	MOVWF      R1
0x0055	0x3001      	MOVLW      1
0x0056	0x00D0      	MOVWF      R0
0x0057	0x0851      	MOVF       R1, 0
L__ReadData33:
0x0058	0x1903      	BTFSC      STATUS, 2
0x0059	0x285E      	GOTO       L__ReadData34
0x005A	0x0DD0      	RLF        R0, 1
0x005B	0x1050      	BCF        R0, 0
0x005C	0x3EFF      	ADDLW      255
0x005D	0x2858      	GOTO       L__ReadData33
L__ReadData34:
0x005E	0x0850      	MOVF       R0, 0
0x005F	0x04D2      	IORWF      R2, 1
;dht11.h,32 :: 		while(DHT11);
L_ReadData15:
0x0060	0x1C85      	BTFSS      GPIO, 1
0x0061	0x2863      	GOTO       L_ReadData16
0x0062	0x2860      	GOTO       L_ReadData15
L_ReadData16:
;dht11.h,33 :: 		}
L_ReadData14:
;dht11.h,25 :: 		for(j = 0; j < 8; j++){
0x0063	0x0AD3      	INCF       R3, 1
;dht11.h,34 :: 		}
0x0064	0x282F      	GOTO       L_ReadData7
L_ReadData8:
;dht11.h,35 :: 		return i;
0x0065	0x0852      	MOVF       R2, 0
0x0066	0x00D0      	MOVWF      R0
;dht11.h,36 :: 		}
L_end_ReadData:
0x0067	0x0008      	RETURN
; end of _ReadData
_CheckResponse:
;dht11.h,13 :: 		void CheckResponse(){
;dht11.h,14 :: 		_Check = 0;
0x0068	0x1283      	BCF        STATUS, 5
0x0069	0x01A2      	CLRF       __Check
;dht11.h,15 :: 		delay_us(40);
0x006A	0x301A      	MOVLW      26
0x006B	0x00DD      	MOVWF      R13
L_CheckResponse2:
0x006C	0x0BDD      	DECFSZ     R13, 1
0x006D	0x286C      	GOTO       L_CheckResponse2
0x006E	0x0000      	NOP
;dht11.h,16 :: 		if(DHT11 == 0){
0x006F	0x1885      	BTFSC      GPIO, 1
0x0070	0x287E      	GOTO       L_CheckResponse3
;dht11.h,17 :: 		delay_us(80);
0x0071	0x3035      	MOVLW      53
0x0072	0x00DD      	MOVWF      R13
L_CheckResponse4:
0x0073	0x0BDD      	DECFSZ     R13, 1
0x0074	0x2873      	GOTO       L_CheckResponse4
;dht11.h,18 :: 		if(DHT11 == 1) _Check = 1;
0x0075	0x1C85      	BTFSS      GPIO, 1
0x0076	0x2879      	GOTO       L_CheckResponse5
0x0077	0x3001      	MOVLW      1
0x0078	0x00A2      	MOVWF      __Check
L_CheckResponse5:
;dht11.h,19 :: 		delay_us(40);
0x0079	0x301A      	MOVLW      26
0x007A	0x00DD      	MOVWF      R13
L_CheckResponse6:
0x007B	0x0BDD      	DECFSZ     R13, 1
0x007C	0x287B      	GOTO       L_CheckResponse6
0x007D	0x0000      	NOP
;dht11.h,20 :: 		}
L_CheckResponse3:
;dht11.h,21 :: 		}
L_end_CheckResponse:
0x007E	0x0008      	RETURN
; end of _CheckResponse
_StartSignal:
;dht11.h,4 :: 		void StartSignal(){
;dht11.h,5 :: 		DHT11_dir = 0;
0x007F	0x1683      	BSF        STATUS, 5
0x0080	0x1085      	BCF        TRISIO, 1
;dht11.h,6 :: 		DHT11 = 0;
0x0081	0x1283      	BCF        STATUS, 5
0x0082	0x1085      	BCF        GPIO, 1
;dht11.h,7 :: 		delay_ms(18);
0x0083	0x302F      	MOVLW      47
0x0084	0x00DC      	MOVWF      R12
0x0085	0x30BF      	MOVLW      191
0x0086	0x00DD      	MOVWF      R13
L_StartSignal0:
0x0087	0x0BDD      	DECFSZ     R13, 1
0x0088	0x2887      	GOTO       L_StartSignal0
0x0089	0x0BDC      	DECFSZ     R12, 1
0x008A	0x2887      	GOTO       L_StartSignal0
0x008B	0x0000      	NOP
0x008C	0x0000      	NOP
;dht11.h,8 :: 		DHT11 = 1;
0x008D	0x1485      	BSF        GPIO, 1
;dht11.h,9 :: 		delay_us(30);
0x008E	0x3013      	MOVLW      19
0x008F	0x00DD      	MOVWF      R13
L_StartSignal1:
0x0090	0x0BDD      	DECFSZ     R13, 1
0x0091	0x2890      	GOTO       L_StartSignal1
0x0092	0x0000      	NOP
0x0093	0x0000      	NOP
;dht11.h,10 :: 		DHT11_dir = 1;
0x0094	0x1683      	BSF        STATUS, 5
0x0095	0x1485      	BSF        TRISIO, 1
;dht11.h,11 :: 		}
L_end_StartSignal:
0x0096	0x0008      	RETURN
; end of _StartSignal
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0097	0x1283      	BCF        STATUS, 5
0x0098	0x0824      	MOVF       ___DoICPAddr+1, 0
0x0099	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x009A	0x0823      	MOVF       ___DoICPAddr, 0
0x009B	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x009C	0x0008      	RETURN
; end of _____DoICP
_InitTimer0:
;green2.c,15 :: 		void InitTimer0(){
;green2.c,16 :: 		OPTION_REG = 0x82;
0x009D	0x3082      	MOVLW      130
0x009E	0x1683      	BSF        STATUS, 5
0x009F	0x0081      	MOVWF      OPTION_REG
;green2.c,17 :: 		TMR0 = 6;
0x00A0	0x3006      	MOVLW      6
0x00A1	0x1283      	BCF        STATUS, 5
0x00A2	0x0081      	MOVWF      TMR0
;green2.c,18 :: 		INTCON = 0xA0;
0x00A3	0x30A0      	MOVLW      160
0x00A4	0x008B      	MOVWF      INTCON
;green2.c,19 :: 		}
L_end_InitTimer0:
0x00A5	0x0008      	RETURN
; end of _InitTimer0
_DHT11_read:
;dht11.h,38 :: 		int DHT11_read(){
;dht11.h,40 :: 		StartSignal();
0x00A6	0x207F      	CALL       _StartSignal
;dht11.h,41 :: 		CheckResponse();
0x00A7	0x2068      	CALL       _CheckResponse
;dht11.h,42 :: 		if(_Check == 1){
0x00A8	0x0822      	MOVF       __Check, 0
0x00A9	0x3A01      	XORLW      1
0x00AA	0x1D03      	BTFSS      STATUS, 2
0x00AB	0x28CB      	GOTO       L_DHT11_read17
;dht11.h,43 :: 		RH = ReadData();
0x00AC	0x202D      	CALL       _ReadData
0x00AD	0x0850      	MOVF       R0, 0
0x00AE	0x00AD      	MOVWF      DHT11_read_RH_L0
;dht11.h,44 :: 		ReadData();
0x00AF	0x202D      	CALL       _ReadData
;dht11.h,45 :: 		Temp = ReadData();
0x00B0	0x202D      	CALL       _ReadData
0x00B1	0x0850      	MOVF       R0, 0
0x00B2	0x00AC      	MOVWF      DHT11_read_Temp_L0
;dht11.h,46 :: 		ReadData();
0x00B3	0x202D      	CALL       _ReadData
;dht11.h,47 :: 		Sum = ReadData();
0x00B4	0x202D      	CALL       _ReadData
;dht11.h,48 :: 		if(Sum == (RH + Temp)){
0x00B5	0x082C      	MOVF       DHT11_read_Temp_L0, 0
0x00B6	0x072D      	ADDWF      DHT11_read_RH_L0, 0
0x00B7	0x00D2      	MOVWF      R2
0x00B8	0x01D3      	CLRF       R2+1
0x00B9	0x1803      	BTFSC      STATUS, 0
0x00BA	0x0AD3      	INCF       R2+1, 1
0x00BB	0x3000      	MOVLW      0
0x00BC	0x0653      	XORWF      R2+1, 0
0x00BD	0x1D03      	BTFSS      STATUS, 2
0x00BE	0x28C1      	GOTO       L__DHT11_read36
0x00BF	0x0852      	MOVF       R2, 0
0x00C0	0x0650      	XORWF      R0, 0
L__DHT11_read36:
0x00C1	0x1D03      	BTFSS      STATUS, 2
0x00C2	0x28CB      	GOTO       L_DHT11_read18
;dht11.h,49 :: 		return (RH << 8) + Temp;
0x00C3	0x082D      	MOVF       DHT11_read_RH_L0, 0
0x00C4	0x00D1      	MOVWF      R0+1
0x00C5	0x01D0      	CLRF       R0
0x00C6	0x082C      	MOVF       DHT11_read_Temp_L0, 0
0x00C7	0x07D0      	ADDWF      R0, 1
0x00C8	0x1803      	BTFSC      STATUS, 0
0x00C9	0x0AD1      	INCF       R0+1, 1
0x00CA	0x28CB      	GOTO       L_end_DHT11_read
;dht11.h,50 :: 		}
L_DHT11_read18:
;dht11.h,51 :: 		}
L_DHT11_read17:
;dht11.h,52 :: 		}
L_end_DHT11_read:
0x00CB	0x0008      	RETURN
; end of _DHT11_read
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00CC	0x2097      	CALL       _____DoICP
0x00CD	0x118A      	BCF        PCLATH, 3
0x00CE	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00CF	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00D0	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00D1	0x0AA3      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00D2	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00D3	0x0AA4      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00D4	0x03D0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00D5	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00D6	0x28CC      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00D7	0x0008      	RETURN
; end of ___CC2DW
_main:
0x00D8	0x1283      	BCF        STATUS, 5
0x00D9	0x01A1      	CLRF       _counter
0x00DA	0x01A2      	CLRF       __Check
;green2.c,37 :: 		void main() {
;green2.c,38 :: 		ANSEL = 0;
0x00DB	0x1683      	BSF        STATUS, 5
0x00DC	0x019F      	CLRF       ANSEL
;green2.c,39 :: 		CMCON = 7;
0x00DD	0x3007      	MOVLW      7
0x00DE	0x1283      	BCF        STATUS, 5
0x00DF	0x0099      	MOVWF      CMCON
;green2.c,40 :: 		InitTimer0();
0x00E0	0x209D      	CALL       _InitTimer0
;green2.c,41 :: 		out_dir = 0;
0x00E1	0x1683      	BSF        STATUS, 5
0x00E2	0x1005      	BCF        TRISIO, 0
;green2.c,42 :: 		out = 0;
0x00E3	0x1283      	BCF        STATUS, 5
0x00E4	0x1005      	BCF        GPIO, 0
;green2.c,44 :: 		while(1){
L_main24:
;green2.c,45 :: 		sensor = DHT11_read();
0x00E5	0x20A6      	CALL       _DHT11_read
0x00E6	0x0850      	MOVF       R0, 0
0x00E7	0x00A8      	MOVWF      _sensor
0x00E8	0x0851      	MOVF       R0+1, 0
0x00E9	0x00A9      	MOVWF      _sensor+1
;green2.c,46 :: 		temp = sensor;
0x00EA	0x0850      	MOVF       R0, 0
0x00EB	0x00A6      	MOVWF      _temp
;green2.c,47 :: 		if(temp >= temp_MIN) {
0x00EC	0x3012      	MOVLW      18
0x00ED	0x0250      	SUBWF      R0, 0
0x00EE	0x1C03      	BTFSS      STATUS, 0
0x00EF	0x28F7      	GOTO       L_main26
;green2.c,48 :: 		output = 1;
0x00F0	0x1425      	BSF        _output, BitPos(_output+0)
;green2.c,49 :: 		duty = temp - temp_MIN + 4;
0x00F1	0x3012      	MOVLW      18
0x00F2	0x0226      	SUBWF      _temp, 0
0x00F3	0x00A7      	MOVWF      _duty
0x00F4	0x3004      	MOVLW      4
0x00F5	0x07A7      	ADDWF      _duty, 1
;green2.c,50 :: 		}
0x00F6	0x28F8      	GOTO       L_main27
L_main26:
;green2.c,51 :: 		else output = 0;
0x00F7	0x1025      	BCF        _output, BitPos(_output+0)
L_main27:
;green2.c,52 :: 		}
0x00F8	0x28E5      	GOTO       L_main24
;green2.c,53 :: 		}
L_end_main:
0x00F9	0x28F9      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [41]    _Interrupt
0x002D      [59]    _ReadData
0x0068      [23]    _CheckResponse
0x007F      [24]    _StartSignal
0x0097       [6]    _____DoICP
0x009D       [9]    _InitTimer0
0x00A6      [38]    _DHT11_read
0x00CC      [12]    ___CC2DW
0x00D8      [34]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    GPIO
0x0005       [0]    DHT11
0x0005       [0]    out
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000B       [0]    TMR0IF_bit
0x0019       [1]    CMCON
0x0021       [1]    _counter
0x0022       [1]    __Check
0x0023       [2]    ___DoICPAddr
0x0025       [0]    _output
0x0026       [1]    _temp
0x0027       [1]    _duty
0x0028       [2]    _sensor
0x002A       [1]    ___saveSTATUS
0x002B       [1]    ___savePCLATH
0x002C       [1]    DHT11_read_Temp_L0
0x002D       [1]    DHT11_read_RH_L0
0x0050       [1]    R0
0x0051       [1]    R1
0x0052       [1]    R2
0x0053       [1]    R3
0x0054       [1]    R4
0x0055       [1]    R5
0x0056       [1]    R6
0x0057       [1]    R7
0x0058       [1]    R8
0x0059       [1]    R9
0x005A       [1]    R10
0x005B       [1]    R11
0x005C       [1]    R12
0x005D       [1]    R13
0x005E       [1]    R14
0x005F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [0]    DHT11_dir
0x0085       [1]    TRISIO
0x0085       [0]    out_dir
0x009F       [1]    ANSEL
