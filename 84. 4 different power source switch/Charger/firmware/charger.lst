;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 08-Mar-17 5:42:41 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x283E      	GOTO       62
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x0003	0x3007      	MOVLW      7
0x0004	0x1283      	BCF        STATUS, 5
0x0005	0x00DD      	MOVWF      R13
L_Delay_22us1:
0x0006	0x0BDD      	DECFSZ     R13, 1
0x0007	0x2806      	GOTO       L_Delay_22us1
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x0008	0x0008      	RETURN
; end of _Delay_22us
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0009	0x1283      	BCF        STATUS, 5
0x000A	0x0824      	MOVF       ___DoICPAddr+1, 0
0x000B	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x000C	0x0823      	MOVF       ___DoICPAddr, 0
0x000D	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x000E	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x000F	0x2009      	CALL       _____DoICP
0x0010	0x118A      	BCF        PCLATH, 3
0x0011	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0012	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0013	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0014	0x0AA3      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0015	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0016	0x0AA4      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0017	0x03D0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0018	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0019	0x280F      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x001A	0x0008      	RETURN
; end of ___CC2DW
_ADC_Read:
;__Lib_ADC_A_E.c,53 :: 		
;__Lib_ADC_A_E.c,55 :: 		
0x001B	0x30C3      	MOVLW      195
0x001C	0x1283      	BCF        STATUS, 5
0x001D	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_E.c,60 :: 		
0x001E	0x30F0      	MOVLW      240
0x001F	0x059F      	ANDWF      ADCON0, 1
;__Lib_ADC_A_E.c,61 :: 		
0x0020	0x30F0      	MOVLW      240
0x0021	0x1683      	BSF        STATUS, 5
0x0022	0x049F      	IORWF      ANSEL, 1
;__Lib_ADC_A_E.c,62 :: 		
0x0023	0x1283      	BCF        STATUS, 5
0x0024	0x179F      	BSF        ADCON0, 7
;__Lib_ADC_A_E.c,63 :: 		
0x0025	0x0825      	MOVF       FARG_ADC_Read_channel, 0
0x0026	0x00D0      	MOVWF      R0
0x0027	0x0DD0      	RLF        R0, 1
0x0028	0x1050      	BCF        R0, 0
0x0029	0x0DD0      	RLF        R0, 1
0x002A	0x1050      	BCF        R0, 0
0x002B	0x0850      	MOVF       R0, 0
0x002C	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_E.c,66 :: 		
0x002D	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_E.c,69 :: 		
0x002E	0x2003      	CALL       _Delay_22us
;__Lib_ADC_A_E.c,72 :: 		
0x002F	0x149F      	BSF        ADCON0, 1
;__Lib_ADC_A_E.c,75 :: 		
L_ADC_Read2:
0x0030	0x1C9F      	BTFSS      ADCON0, 1
0x0031	0x2834      	GOTO       L_ADC_Read3
;__Lib_ADC_A_E.c,76 :: 		
0x0032	0x0000      	NOP
0x0033	0x2830      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_E.c,79 :: 		
0x0034	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_E.c,82 :: 		
0x0035	0x081E      	MOVF       ADRESH, 0
0x0036	0x00D1      	MOVWF      R0+1
0x0037	0x01D0      	CLRF       R0
0x0038	0x1683      	BSF        STATUS, 5
0x0039	0x081E      	MOVF       ADRESL, 0
0x003A	0x04D0      	IORWF      R0, 1
0x003B	0x3000      	MOVLW      0
0x003C	0x04D1      	IORWF      R0+1, 1
;__Lib_ADC_A_E.c,83 :: 		
L_end_ADC_Read:
0x003D	0x0008      	RETURN
; end of _ADC_Read
_main:
0x003E	0x1283      	BCF        STATUS, 5
0x003F	0x01A0      	CLRF       _adc
0x0040	0x01A1      	CLRF       33
;charger.c,9 :: 		void main() {
;charger.c,10 :: 		ANSEL = 0x01;
0x0041	0x3001      	MOVLW      1
0x0042	0x1683      	BSF        STATUS, 5
0x0043	0x009F      	MOVWF      ANSEL
;charger.c,11 :: 		TRISIO = 0x09;
0x0044	0x3009      	MOVLW      9
0x0045	0x0085      	MOVWF      TRISIO
;charger.c,12 :: 		GPIO = 0;
0x0046	0x1283      	BCF        STATUS, 5
0x0047	0x0185      	CLRF       GPIO
;charger.c,13 :: 		CMCON = 0x07;
0x0048	0x3007      	MOVLW      7
0x0049	0x0099      	MOVWF      CMCON
;charger.c,15 :: 		while(1){
L_main0:
;charger.c,16 :: 		adc = adc_read(0);
0x004A	0x01A5      	CLRF       FARG_ADC_Read_channel
0x004B	0x201B      	CALL       _ADC_Read
0x004C	0x0850      	MOVF       R0, 0
0x004D	0x00A0      	MOVWF      _adc
0x004E	0x0851      	MOVF       R0+1, 0
0x004F	0x00A1      	MOVWF      _adc+1
;charger.c,18 :: 		if(adc < 510){           //10V
0x0050	0x3080      	MOVLW      128
0x0051	0x0651      	XORWF      R0+1, 0
0x0052	0x00D2      	MOVWF      R2
0x0053	0x3080      	MOVLW      128
0x0054	0x3A01      	XORLW      1
0x0055	0x0252      	SUBWF      R2, 0
0x0056	0x1D03      	BTFSS      STATUS, 2
0x0057	0x285A      	GOTO       L__main18
0x0058	0x30FE      	MOVLW      254
0x0059	0x0250      	SUBWF      R0, 0
L__main18:
0x005A	0x1803      	BTFSC      STATUS, 0
0x005B	0x2862      	GOTO       L_main2
;charger.c,19 :: 		low = 1; middle = 0; high = 0;
0x005C	0x1283      	BCF        STATUS, 5
0x005D	0x1685      	BSF        GP5_bit, BitPos(GP5_bit+0)
0x005E	0x1205      	BCF        GP4_bit, BitPos(GP4_bit+0)
0x005F	0x1105      	BCF        GP2_bit, BitPos(GP2_bit+0)
;charger.c,20 :: 		flag = 1;
0x0060	0x1422      	BSF        _flag, BitPos(_flag+0)
;charger.c,21 :: 		}
0x0061	0x28AD      	GOTO       L_main3
L_main2:
;charger.c,23 :: 		else if(adc >= 510 && adc <= 645){  //12V
0x0062	0x3080      	MOVLW      128
0x0063	0x0621      	XORWF      _adc+1, 0
0x0064	0x00D0      	MOVWF      R0
0x0065	0x3080      	MOVLW      128
0x0066	0x3A01      	XORLW      1
0x0067	0x0250      	SUBWF      R0, 0
0x0068	0x1D03      	BTFSS      STATUS, 2
0x0069	0x286C      	GOTO       L__main19
0x006A	0x30FE      	MOVLW      254
0x006B	0x0220      	SUBWF      _adc, 0
L__main19:
0x006C	0x1C03      	BTFSS      STATUS, 0
0x006D	0x287F      	GOTO       L_main6
0x006E	0x3080      	MOVLW      128
0x006F	0x3A02      	XORLW      2
0x0070	0x00D0      	MOVWF      R0
0x0071	0x3080      	MOVLW      128
0x0072	0x0621      	XORWF      _adc+1, 0
0x0073	0x0250      	SUBWF      R0, 0
0x0074	0x1D03      	BTFSS      STATUS, 2
0x0075	0x2878      	GOTO       L__main20
0x0076	0x0820      	MOVF       _adc, 0
0x0077	0x3C85      	SUBLW      133
L__main20:
0x0078	0x1C03      	BTFSS      STATUS, 0
0x0079	0x287F      	GOTO       L_main6
L__main16:
0x007A	0x1283      	BCF        STATUS, 5
;charger.c,24 :: 		low = 0; middle = 1; high = 0;
0x007B	0x1285      	BCF        GP5_bit, BitPos(GP5_bit+0)
0x007C	0x1605      	BSF        GP4_bit, BitPos(GP4_bit+0)
0x007D	0x1105      	BCF        GP2_bit, BitPos(GP2_bit+0)
;charger.c,25 :: 		}
0x007E	0x28AD      	GOTO       L_main7
L_main6:
;charger.c,27 :: 		else if(adc > 645 && adc <= 710){   //13V
0x007F	0x3080      	MOVLW      128
0x0080	0x3A02      	XORLW      2
0x0081	0x00D0      	MOVWF      R0
0x0082	0x3080      	MOVLW      128
0x0083	0x0621      	XORWF      _adc+1, 0
0x0084	0x0250      	SUBWF      R0, 0
0x0085	0x1D03      	BTFSS      STATUS, 2
0x0086	0x2889      	GOTO       L__main21
0x0087	0x0820      	MOVF       _adc, 0
0x0088	0x3C85      	SUBLW      133
L__main21:
0x0089	0x1803      	BTFSC      STATUS, 0
0x008A	0x289C      	GOTO       L_main10
0x008B	0x3080      	MOVLW      128
0x008C	0x3A02      	XORLW      2
0x008D	0x00D0      	MOVWF      R0
0x008E	0x3080      	MOVLW      128
0x008F	0x0621      	XORWF      _adc+1, 0
0x0090	0x0250      	SUBWF      R0, 0
0x0091	0x1D03      	BTFSS      STATUS, 2
0x0092	0x2895      	GOTO       L__main22
0x0093	0x0820      	MOVF       _adc, 0
0x0094	0x3CC6      	SUBLW      198
L__main22:
0x0095	0x1C03      	BTFSS      STATUS, 0
0x0096	0x289C      	GOTO       L_main10
L__main15:
0x0097	0x1283      	BCF        STATUS, 5
;charger.c,28 :: 		low = 0; middle = 0; high = 1;
0x0098	0x1285      	BCF        GP5_bit, BitPos(GP5_bit+0)
0x0099	0x1205      	BCF        GP4_bit, BitPos(GP4_bit+0)
0x009A	0x1505      	BSF        GP2_bit, BitPos(GP2_bit+0)
;charger.c,29 :: 		}
0x009B	0x28AD      	GOTO       L_main11
L_main10:
;charger.c,31 :: 		else if(adc > 710){     //14V
0x009C	0x3080      	MOVLW      128
0x009D	0x3A02      	XORLW      2
0x009E	0x00D0      	MOVWF      R0
0x009F	0x3080      	MOVLW      128
0x00A0	0x0621      	XORWF      _adc+1, 0
0x00A1	0x0250      	SUBWF      R0, 0
0x00A2	0x1D03      	BTFSS      STATUS, 2
0x00A3	0x28A6      	GOTO       L__main23
0x00A4	0x0820      	MOVF       _adc, 0
0x00A5	0x3CC6      	SUBLW      198
L__main23:
0x00A6	0x1803      	BTFSC      STATUS, 0
0x00A7	0x28AD      	GOTO       L_main12
;charger.c,32 :: 		low = 0; middle = 0; high = 1;
0x00A8	0x1283      	BCF        STATUS, 5
0x00A9	0x1285      	BCF        GP5_bit, BitPos(GP5_bit+0)
0x00AA	0x1205      	BCF        GP4_bit, BitPos(GP4_bit+0)
0x00AB	0x1505      	BSF        GP2_bit, BitPos(GP2_bit+0)
;charger.c,33 :: 		flag = 0;
0x00AC	0x1022      	BCF        _flag, BitPos(_flag+0)
;charger.c,34 :: 		}
L_main12:
L_main11:
L_main7:
L_main3:
;charger.c,36 :: 		if(flag == 1) relay = 1;
0x00AD	0x1C22      	BTFSS      _flag, BitPos(_flag+0)
0x00AE	0x28B2      	GOTO       L_main13
0x00AF	0x1283      	BCF        STATUS, 5
0x00B0	0x1485      	BSF        GP1_bit, BitPos(GP1_bit+0)
0x00B1	0x28B4      	GOTO       L_main14
L_main13:
0x00B2	0x1283      	BCF        STATUS, 5
;charger.c,37 :: 		else relay = 0;
0x00B3	0x1085      	BCF        GP1_bit, BitPos(GP1_bit+0)
L_main14:
;charger.c,38 :: 		}
0x00B4	0x284A      	GOTO       L_main0
;charger.c,39 :: 		}
L_end_main:
0x00B5	0x28B5      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [6]    _Delay_22us
0x0009       [6]    _____DoICP
0x000F      [12]    ___CC2DW
0x001B      [35]    _ADC_Read
0x003E     [120]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    GPIO
0x0005       [0]    GP4_bit
0x0005       [0]    GP5_bit
0x0005       [0]    GP1_bit
0x0005       [0]    GP2_bit
0x000A       [1]    PCLATH
0x0019       [1]    CMCON
0x001E       [1]    ADRESH
0x001F       [1]    ADCON0
0x0020       [2]    _adc
0x0022       [0]    _flag
0x0023       [2]    ___DoICPAddr
0x0025       [1]    FARG_ADC_Read_channel
0x0050       [1]    R0
0x0051       [1]    R1
0x0052       [1]    R2
0x0053       [1]    R3
0x0054       [1]    R4
0x0055       [1]    R5
0x0056       [1]    R6
0x0057       [1]    R7
0x0058       [1]    R8
0x0059       [1]    R9
0x005A       [1]    R10
0x005B       [1]    R11
0x005C       [1]    R12
0x005D       [1]    R13
0x005E       [1]    R14
0x005F       [1]    R15
0x0085       [1]    TRISIO
0x009E       [1]    ADRESL
0x009F       [1]    ANSEL
