;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 01-Apr-17 8:38:45 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28FA      	GOTO       250
_clear_digit:
;second counter.c,28 :: 		void clear_digit(){
;second counter.c,29 :: 		digit_1 = 0; digit_2 = 0;
0x0003	0x1283      	BCF        STATUS, 5
0x0004	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
0x0005	0x1087      	BCF        RC1_bit, BitPos(RC1_bit+0)
;second counter.c,30 :: 		digit_3 = 0; digit_4 = 0;
0x0006	0x1107      	BCF        RC2_bit, BitPos(RC2_bit+0)
0x0007	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
;second counter.c,31 :: 		}
L_end_clear_digit:
0x0008	0x0008      	RETURN
; end of _clear_digit
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0009	0x1283      	BCF        STATUS, 5
0x000A	0x082F      	MOVF       ___DoICPAddr+1, 0
0x000B	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x000C	0x082E      	MOVF       ___DoICPAddr, 0
0x000D	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x000E	0x0008      	RETURN
; end of _____DoICP
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x000F	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0010	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0011	0x01D8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0012	0x01D9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0013	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0014	0x00DC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x0015	0x0D51      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x0016	0x0DD8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x0017	0x0DD9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x0018	0x0854      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x0019	0x02D8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x001A	0x0855      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x001B	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x001C	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x001D	0x02D9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x001E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x001F	0x2827      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0020	0x0854      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0021	0x07D8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0022	0x0855      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0023	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0024	0x0F55      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x0025	0x07D9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x0026	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x0027	0x0DD0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x0028	0x0DD1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x0029	0x0BDC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x002A	0x2815      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x002B	0x0008      	RETURN
; end of _Div_16X16_U
_transfer_data:
;second counter.c,15 :: 		void transfer_data(unsigned short temp){   //Transfer Data via 74HC595
;second counter.c,16 :: 		temp = anode[temp];
0x002C	0x1283      	BCF        STATUS, 5
0x002D	0x0836      	MOVF       FARG_transfer_data_temp, 0
0x002E	0x3E22      	ADDLW      _anode
0x002F	0x0084      	MOVWF      FSR
0x0030	0x0800      	MOVF       INDF, 0
0x0031	0x00B6      	MOVWF      FARG_transfer_data_temp
;second counter.c,17 :: 		DS = temp.b7; SH = 1; SH = 0;
0x0032	0x1BB6      	BTFSC      FARG_transfer_data_temp, 7
0x0033	0x2836      	GOTO       L__transfer_data11
0x0034	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
0x0035	0x2837      	GOTO       L__transfer_data12
L__transfer_data11:
0x0036	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
L__transfer_data12:
0x0037	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x0038	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;second counter.c,18 :: 		DS = temp.b6; SH = 1; SH = 0;
0x0039	0x1B36      	BTFSC      FARG_transfer_data_temp, 6
0x003A	0x283D      	GOTO       L__transfer_data13
0x003B	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
0x003C	0x283E      	GOTO       L__transfer_data14
L__transfer_data13:
0x003D	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
L__transfer_data14:
0x003E	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x003F	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;second counter.c,19 :: 		DS = temp.b5; SH = 1; SH = 0;
0x0040	0x1AB6      	BTFSC      FARG_transfer_data_temp, 5
0x0041	0x2844      	GOTO       L__transfer_data15
0x0042	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
0x0043	0x2845      	GOTO       L__transfer_data16
L__transfer_data15:
0x0044	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
L__transfer_data16:
0x0045	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x0046	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;second counter.c,20 :: 		DS = temp.b4; SH = 1; SH = 0;
0x0047	0x1A36      	BTFSC      FARG_transfer_data_temp, 4
0x0048	0x284B      	GOTO       L__transfer_data17
0x0049	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
0x004A	0x284C      	GOTO       L__transfer_data18
L__transfer_data17:
0x004B	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
L__transfer_data18:
0x004C	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x004D	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;second counter.c,21 :: 		DS = temp.b3; SH = 1; SH = 0;
0x004E	0x19B6      	BTFSC      FARG_transfer_data_temp, 3
0x004F	0x2852      	GOTO       L__transfer_data19
0x0050	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
0x0051	0x2853      	GOTO       L__transfer_data20
L__transfer_data19:
0x0052	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
L__transfer_data20:
0x0053	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x0054	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;second counter.c,22 :: 		DS = temp.b2; SH = 1; SH = 0;
0x0055	0x1936      	BTFSC      FARG_transfer_data_temp, 2
0x0056	0x2859      	GOTO       L__transfer_data21
0x0057	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
0x0058	0x285A      	GOTO       L__transfer_data22
L__transfer_data21:
0x0059	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
L__transfer_data22:
0x005A	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x005B	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;second counter.c,23 :: 		DS = temp.b1; SH = 1; SH = 0;
0x005C	0x18B6      	BTFSC      FARG_transfer_data_temp, 1
0x005D	0x2860      	GOTO       L__transfer_data23
0x005E	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
0x005F	0x2861      	GOTO       L__transfer_data24
L__transfer_data23:
0x0060	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
L__transfer_data24:
0x0061	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x0062	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;second counter.c,24 :: 		DS = temp.b0; SH = 1; SH = 0;
0x0063	0x1836      	BTFSC      FARG_transfer_data_temp, 0
0x0064	0x2867      	GOTO       L__transfer_data25
0x0065	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
0x0066	0x2868      	GOTO       L__transfer_data26
L__transfer_data25:
0x0067	0x1485      	BSF        RA1_bit, BitPos(RA1_bit+0)
L__transfer_data26:
0x0068	0x1405      	BSF        RA0_bit, BitPos(RA0_bit+0)
0x0069	0x1005      	BCF        RA0_bit, BitPos(RA0_bit+0)
;second counter.c,25 :: 		ST = 1; ST = 0; DS = 0;
0x006A	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
0x006B	0x1105      	BCF        RA2_bit, BitPos(RA2_bit+0)
0x006C	0x1085      	BCF        RA1_bit, BitPos(RA1_bit+0)
;second counter.c,26 :: 		}
L_end_transfer_data:
0x006D	0x0008      	RETURN
; end of _transfer_data
_show_segment:
;second counter.c,33 :: 		void show_segment(unsigned int count){
;second counter.c,35 :: 		digit[0] = count / 1000;
0x006E	0x30E8      	MOVLW      232
0x006F	0x1283      	BCF        STATUS, 5
0x0070	0x00D4      	MOVWF      R4
0x0071	0x3003      	MOVLW      3
0x0072	0x00D5      	MOVWF      R4+1
0x0073	0x0830      	MOVF       FARG_show_segment_count, 0
0x0074	0x00D0      	MOVWF      R0
0x0075	0x0831      	MOVF       FARG_show_segment_count+1, 0
0x0076	0x00D1      	MOVWF      R0+1
0x0077	0x200F      	CALL       _Div_16X16_U
0x0078	0x0850      	MOVF       R0, 0
0x0079	0x00B2      	MOVWF      show_segment_digit_L0
;second counter.c,36 :: 		digit[1] = (count % 1000) / 100;
0x007A	0x30E8      	MOVLW      232
0x007B	0x00D4      	MOVWF      R4
0x007C	0x3003      	MOVLW      3
0x007D	0x00D5      	MOVWF      R4+1
0x007E	0x0830      	MOVF       FARG_show_segment_count, 0
0x007F	0x00D0      	MOVWF      R0
0x0080	0x0831      	MOVF       FARG_show_segment_count+1, 0
0x0081	0x00D1      	MOVWF      R0+1
0x0082	0x200F      	CALL       _Div_16X16_U
0x0083	0x0858      	MOVF       R8, 0
0x0084	0x00D0      	MOVWF      R0
0x0085	0x0859      	MOVF       R8+1, 0
0x0086	0x00D1      	MOVWF      R0+1
0x0087	0x3064      	MOVLW      100
0x0088	0x00D4      	MOVWF      R4
0x0089	0x3000      	MOVLW      0
0x008A	0x00D5      	MOVWF      R4+1
0x008B	0x200F      	CALL       _Div_16X16_U
0x008C	0x0850      	MOVF       R0, 0
0x008D	0x00B3      	MOVWF      show_segment_digit_L0+1
;second counter.c,37 :: 		digit[2] = (count % 100) / 10;
0x008E	0x3064      	MOVLW      100
0x008F	0x00D4      	MOVWF      R4
0x0090	0x3000      	MOVLW      0
0x0091	0x00D5      	MOVWF      R4+1
0x0092	0x0830      	MOVF       FARG_show_segment_count, 0
0x0093	0x00D0      	MOVWF      R0
0x0094	0x0831      	MOVF       FARG_show_segment_count+1, 0
0x0095	0x00D1      	MOVWF      R0+1
0x0096	0x200F      	CALL       _Div_16X16_U
0x0097	0x0858      	MOVF       R8, 0
0x0098	0x00D0      	MOVWF      R0
0x0099	0x0859      	MOVF       R8+1, 0
0x009A	0x00D1      	MOVWF      R0+1
0x009B	0x300A      	MOVLW      10
0x009C	0x00D4      	MOVWF      R4
0x009D	0x3000      	MOVLW      0
0x009E	0x00D5      	MOVWF      R4+1
0x009F	0x200F      	CALL       _Div_16X16_U
0x00A0	0x0850      	MOVF       R0, 0
0x00A1	0x00B4      	MOVWF      show_segment_digit_L0+2
;second counter.c,38 :: 		digit[3] = count % 10;
0x00A2	0x300A      	MOVLW      10
0x00A3	0x00D4      	MOVWF      R4
0x00A4	0x3000      	MOVLW      0
0x00A5	0x00D5      	MOVWF      R4+1
0x00A6	0x0830      	MOVF       FARG_show_segment_count, 0
0x00A7	0x00D0      	MOVWF      R0
0x00A8	0x0831      	MOVF       FARG_show_segment_count+1, 0
0x00A9	0x00D1      	MOVWF      R0+1
0x00AA	0x200F      	CALL       _Div_16X16_U
0x00AB	0x0858      	MOVF       R8, 0
0x00AC	0x00D0      	MOVWF      R0
0x00AD	0x0859      	MOVF       R8+1, 0
0x00AE	0x00D1      	MOVWF      R0+1
0x00AF	0x0850      	MOVF       R0, 0
0x00B0	0x00B5      	MOVWF      show_segment_digit_L0+3
;second counter.c,40 :: 		transfer_data(digit[0]);
0x00B1	0x0832      	MOVF       show_segment_digit_L0, 0
0x00B2	0x00B6      	MOVWF      FARG_transfer_data_temp
0x00B3	0x202C      	CALL       _transfer_data
;second counter.c,41 :: 		digit_1 = 1; delay_ms(1); clear_digit();
0x00B4	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
0x00B5	0x3003      	MOVLW      3
0x00B6	0x00DC      	MOVWF      R12
0x00B7	0x3097      	MOVLW      151
0x00B8	0x00DD      	MOVWF      R13
L_show_segment0:
0x00B9	0x0BDD      	DECFSZ     R13, 1
0x00BA	0x28B9      	GOTO       L_show_segment0
0x00BB	0x0BDC      	DECFSZ     R12, 1
0x00BC	0x28B9      	GOTO       L_show_segment0
0x00BD	0x0000      	NOP
0x00BE	0x0000      	NOP
0x00BF	0x2003      	CALL       _clear_digit
;second counter.c,42 :: 		transfer_data(digit[1]);
0x00C0	0x0833      	MOVF       show_segment_digit_L0+1, 0
0x00C1	0x00B6      	MOVWF      FARG_transfer_data_temp
0x00C2	0x202C      	CALL       _transfer_data
;second counter.c,43 :: 		digit_2 = 1; delay_ms(1); clear_digit();
0x00C3	0x1487      	BSF        RC1_bit, BitPos(RC1_bit+0)
0x00C4	0x3003      	MOVLW      3
0x00C5	0x00DC      	MOVWF      R12
0x00C6	0x3097      	MOVLW      151
0x00C7	0x00DD      	MOVWF      R13
L_show_segment1:
0x00C8	0x0BDD      	DECFSZ     R13, 1
0x00C9	0x28C8      	GOTO       L_show_segment1
0x00CA	0x0BDC      	DECFSZ     R12, 1
0x00CB	0x28C8      	GOTO       L_show_segment1
0x00CC	0x0000      	NOP
0x00CD	0x0000      	NOP
0x00CE	0x2003      	CALL       _clear_digit
;second counter.c,44 :: 		transfer_data(digit[2]);
0x00CF	0x0834      	MOVF       show_segment_digit_L0+2, 0
0x00D0	0x00B6      	MOVWF      FARG_transfer_data_temp
0x00D1	0x202C      	CALL       _transfer_data
;second counter.c,45 :: 		digit_3 = 1; delay_ms(1); clear_digit();
0x00D2	0x1507      	BSF        RC2_bit, BitPos(RC2_bit+0)
0x00D3	0x3003      	MOVLW      3
0x00D4	0x00DC      	MOVWF      R12
0x00D5	0x3097      	MOVLW      151
0x00D6	0x00DD      	MOVWF      R13
L_show_segment2:
0x00D7	0x0BDD      	DECFSZ     R13, 1
0x00D8	0x28D7      	GOTO       L_show_segment2
0x00D9	0x0BDC      	DECFSZ     R12, 1
0x00DA	0x28D7      	GOTO       L_show_segment2
0x00DB	0x0000      	NOP
0x00DC	0x0000      	NOP
0x00DD	0x2003      	CALL       _clear_digit
;second counter.c,46 :: 		transfer_data(digit[3]);
0x00DE	0x0835      	MOVF       show_segment_digit_L0+3, 0
0x00DF	0x00B6      	MOVWF      FARG_transfer_data_temp
0x00E0	0x202C      	CALL       _transfer_data
;second counter.c,47 :: 		digit_4 = 1; delay_ms(1); clear_digit();
0x00E1	0x1587      	BSF        RC3_bit, BitPos(RC3_bit+0)
0x00E2	0x3003      	MOVLW      3
0x00E3	0x00DC      	MOVWF      R12
0x00E4	0x3097      	MOVLW      151
0x00E5	0x00DD      	MOVWF      R13
L_show_segment3:
0x00E6	0x0BDD      	DECFSZ     R13, 1
0x00E7	0x28E6      	GOTO       L_show_segment3
0x00E8	0x0BDC      	DECFSZ     R12, 1
0x00E9	0x28E6      	GOTO       L_show_segment3
0x00EA	0x0000      	NOP
0x00EB	0x0000      	NOP
0x00EC	0x2003      	CALL       _clear_digit
;second counter.c,48 :: 		}
L_end_show_segment:
0x00ED	0x0008      	RETURN
; end of _show_segment
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x00EE	0x2009      	CALL       _____DoICP
0x00EF	0x118A      	BCF        PCLATH, 3
0x00F0	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x00F1	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x00F2	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x00F3	0x0AAE      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x00F4	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x00F5	0x0AAF      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x00F6	0x03D0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x00F7	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x00F8	0x28EE      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x00F9	0x0008      	RETURN
; end of ___CC2DW
_main:
0x00FA	0x300A      	MOVLW      10
0x00FB	0x1283      	BCF        STATUS, 5
0x00FC	0x00A0      	MOVWF      _counter
0x00FD	0x01A1      	CLRF       33
0x00FE	0x30C0      	MOVLW      192
0x00FF	0x00A2      	MOVWF      _anode
0x0100	0x30F9      	MOVLW      249
0x0101	0x00A3      	MOVWF      35
0x0102	0x30A4      	MOVLW      164
0x0103	0x00A4      	MOVWF      36
0x0104	0x30B0      	MOVLW      176
0x0105	0x00A5      	MOVWF      37
0x0106	0x3099      	MOVLW      153
0x0107	0x00A6      	MOVWF      38
0x0108	0x3092      	MOVLW      146
0x0109	0x00A7      	MOVWF      39
0x010A	0x3082      	MOVLW      130
0x010B	0x00A8      	MOVWF      40
0x010C	0x30F8      	MOVLW      248
0x010D	0x00A9      	MOVWF      41
0x010E	0x3080      	MOVLW      128
0x010F	0x00AA      	MOVWF      42
0x0110	0x3090      	MOVLW      144
0x0111	0x00AB      	MOVWF      43
;second counter.c,50 :: 		void main() {
;second counter.c,51 :: 		ANSEL = 0x00;
0x0112	0x1683      	BSF        STATUS, 5
0x0113	0x0191      	CLRF       ANSEL
;second counter.c,52 :: 		CMCON = 0x07;
0x0114	0x3007      	MOVLW      7
0x0115	0x1283      	BCF        STATUS, 5
0x0116	0x0099      	MOVWF      CMCON
;second counter.c,53 :: 		TRISA = 0x00; PORTA = 0x00;
0x0117	0x1683      	BSF        STATUS, 5
0x0118	0x0185      	CLRF       TRISA
0x0119	0x1283      	BCF        STATUS, 5
0x011A	0x0185      	CLRF       PORTA
;second counter.c,54 :: 		TRISC = 0x00; PORTC = 0x00;
0x011B	0x1683      	BSF        STATUS, 5
0x011C	0x0187      	CLRF       TRISC
0x011D	0x1283      	BCF        STATUS, 5
0x011E	0x0187      	CLRF       PORTC
;second counter.c,56 :: 		while(1){
L_main4:
;second counter.c,57 :: 		for(delay = 0; delay < 250; delay++) show_segment(counter);
0x011F	0x01AC      	CLRF       _delay
0x0120	0x01AD      	CLRF       _delay+1
L_main6:
0x0121	0x3000      	MOVLW      0
0x0122	0x022D      	SUBWF      _delay+1, 0
0x0123	0x1D03      	BTFSS      STATUS, 2
0x0124	0x2927      	GOTO       L__main30
0x0125	0x30FA      	MOVLW      250
0x0126	0x022C      	SUBWF      _delay, 0
L__main30:
0x0127	0x1803      	BTFSC      STATUS, 0
0x0128	0x2932      	GOTO       L_main7
0x0129	0x0820      	MOVF       _counter, 0
0x012A	0x00B0      	MOVWF      FARG_show_segment_count
0x012B	0x0821      	MOVF       _counter+1, 0
0x012C	0x00B1      	MOVWF      FARG_show_segment_count+1
0x012D	0x206E      	CALL       _show_segment
0x012E	0x0AAC      	INCF       _delay, 1
0x012F	0x1903      	BTFSC      STATUS, 2
0x0130	0x0AAD      	INCF       _delay+1, 1
0x0131	0x2921      	GOTO       L_main6
L_main7:
;second counter.c,58 :: 		counter--;
0x0132	0x3001      	MOVLW      1
0x0133	0x02A0      	SUBWF      _counter, 1
0x0134	0x1C03      	BTFSS      STATUS, 0
0x0135	0x03A1      	DECF       _counter+1, 1
;second counter.c,59 :: 		if(counter < 0) counter = 0;
0x0136	0x3000      	MOVLW      0
0x0137	0x0221      	SUBWF      _counter+1, 0
0x0138	0x1D03      	BTFSS      STATUS, 2
0x0139	0x293C      	GOTO       L__main31
0x013A	0x3000      	MOVLW      0
0x013B	0x0220      	SUBWF      _counter, 0
L__main31:
0x013C	0x1803      	BTFSC      STATUS, 0
0x013D	0x2940      	GOTO       L_main9
0x013E	0x01A0      	CLRF       _counter
0x013F	0x01A1      	CLRF       _counter+1
L_main9:
;second counter.c,60 :: 		}
0x0140	0x291F      	GOTO       L_main4
;second counter.c,61 :: 		}
L_end_main:
0x0141	0x2941      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003       [6]    _clear_digit
0x0009       [6]    _____DoICP
0x000F      [29]    _Div_16X16_U
0x002C      [66]    _transfer_data
0x006E     [128]    _show_segment
0x00EE      [12]    ___CC2DW
0x00FA      [72]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA2_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC3_bit
0x0007       [1]    PORTC
0x0007       [0]    RC0_bit
0x000A       [1]    PCLATH
0x0019       [1]    CMCON
0x0020       [2]    _counter
0x0022      [10]    _anode
0x002C       [2]    _delay
0x002E       [2]    ___DoICPAddr
0x0030       [2]    FARG_show_segment_count
0x0032       [4]    show_segment_digit_L0
0x0036       [1]    FARG_transfer_data_temp
0x0050       [1]    R0
0x0051       [1]    R1
0x0052       [1]    R2
0x0053       [1]    R3
0x0054       [1]    R4
0x0055       [1]    R5
0x0056       [1]    R6
0x0057       [1]    R7
0x0058       [1]    R8
0x0059       [1]    R9
0x005A       [1]    R10
0x005B       [1]    R11
0x005C       [1]    R12
0x005D       [1]    R13
0x005E       [1]    R14
0x005F       [1]    R15
0x0085       [1]    TRISA
0x0087       [1]    TRISC
0x0091       [1]    ANSEL
