;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29-Oct-17 9:45:17 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2B6E      	GOTO       878
_Div_16x16_S_L:
;__Lib_Math.c,420 :: 		
;__Lib_Math.c,426 :: 		
0x0003	0x0D71      	RLF        R1, 0
;__Lib_Math.c,427 :: 		
0x0004	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,428 :: 		
0x0005	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,429 :: 		
0x0006	0x0874      	MOVF       R4, 0
;__Lib_Math.c,430 :: 		
0x0007	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,431 :: 		
0x0008	0x0875      	MOVF       R5, 0
;__Lib_Math.c,432 :: 		
0x0009	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,433 :: 		
0x000A	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,434 :: 		
0x000B	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,435 :: 		
0x000C	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,436 :: 		
0x000D	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,438 :: 		
0x000E	0x300F      	MOVLW      15
;__Lib_Math.c,439 :: 		
0x000F	0x00FC      	MOVWF      R12
;__Lib_Math.c,441 :: 		
0x0010	0x0D71      	RLF        R1, 0
;__Lib_Math.c,442 :: 		
0x0011	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,443 :: 		
0x0012	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,444 :: 		
0x0013	0x0874      	MOVF       R4, 0
;__Lib_Math.c,446 :: 		
0x0014	0x1C70      	BTFSS      R0, 0
;__Lib_Math.c,447 :: 		
0x0015	0x281C      	GOTO       $+7
;__Lib_Math.c,448 :: 		
0x0016	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,449 :: 		
0x0017	0x0875      	MOVF       R5, 0
;__Lib_Math.c,450 :: 		
0x0018	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,451 :: 		
0x0019	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,452 :: 		
0x001A	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,453 :: 		
0x001B	0x2821      	GOTO       $+6
;__Lib_Math.c,455 :: 		
0x001C	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,456 :: 		
0x001D	0x0875      	MOVF       R5, 0
;__Lib_Math.c,457 :: 		
0x001E	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,458 :: 		
0x001F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,459 :: 		
0x0020	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,461 :: 		
0x0021	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,462 :: 		
0x0022	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,464 :: 		
0x0023	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,465 :: 		
0x0024	0x2810      	GOTO       $-20
;__Lib_Math.c,467 :: 		
0x0025	0x1870      	BTFSC      R0, 0
;__Lib_Math.c,468 :: 		
0x0026	0x282D      	GOTO       $+7
;__Lib_Math.c,469 :: 		
0x0027	0x0874      	MOVF       R4, 0
;__Lib_Math.c,470 :: 		
0x0028	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,471 :: 		
0x0029	0x0875      	MOVF       R5, 0
;__Lib_Math.c,472 :: 		
0x002A	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,473 :: 		
0x002B	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,474 :: 		
0x002C	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,475 :: 		
0x002D	0x0000      	NOP
;__Lib_Math.c,477 :: 		
L_end_Div_16x16_S_L:
0x002E	0x0008      	RETURN
; end of _Div_16x16_S_L
_Div_16x16_S:
;__Lib_Math.c,479 :: 		
;__Lib_Math.c,487 :: 		
0x002F	0x1283      	BCF        STATUS, 5
0x0030	0x1303      	BCF        STATUS, 6
0x0031	0x0874      	MOVF       R4, 0
0x0032	0x3A00      	XORLW      0
0x0033	0x1D03      	BTFSS      STATUS, 2
0x0034	0x283E      	GOTO       L_Div_16x16_S0
;__Lib_Math.c,488 :: 		
0x0035	0x0875      	MOVF       R5, 0
0x0036	0x3A00      	XORLW      0
0x0037	0x1D03      	BTFSS      STATUS, 2
0x0038	0x283E      	GOTO       L_Div_16x16_S1
;__Lib_Math.c,489 :: 		
0x0039	0x30FF      	MOVLW      255
0x003A	0x00F0      	MOVWF      R0
;__Lib_Math.c,490 :: 		
0x003B	0x307F      	MOVLW      127
0x003C	0x00F1      	MOVWF      R1
;__Lib_Math.c,491 :: 		
0x003D	0x2897      	GOTO       L_end_Div_16x16_S
;__Lib_Math.c,492 :: 		
L_Div_16x16_S1:
L_Div_16x16_S0:
;__Lib_Math.c,495 :: 		
0x003E	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,496 :: 		
0x003F	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,497 :: 		
0x0040	0x01FD      	CLRF       R13
;__Lib_Math.c,498 :: 		
0x0041	0x01F9      	CLRF       R9
;__Lib_Math.c,499 :: 		
0x0042	0x01F8      	CLRF       R8
;__Lib_Math.c,500 :: 		
0x0043	0x0871      	MOVF       R1, 0
;__Lib_Math.c,501 :: 		
0x0044	0x0470      	IORWF      R0, 0
;__Lib_Math.c,502 :: 		
0x0045	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,503 :: 		
0x0046	0x3400      	RETLW      0
;__Lib_Math.c,505 :: 		
0x0047	0x0871      	MOVF       R1, 0
;__Lib_Math.c,506 :: 		
0x0048	0x0675      	XORWF      R5, 0
;__Lib_Math.c,507 :: 		
0x0049	0x00FA      	MOVWF      R10
;__Lib_Math.c,508 :: 		
0x004A	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,509 :: 		
0x004B	0x09FD      	COMF       R13, 1
;__Lib_Math.c,511 :: 		
0x004C	0x01FB      	CLRF       R11
;__Lib_Math.c,513 :: 		
0x004D	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,514 :: 		
0x004E	0x2854      	GOTO       $+6
;__Lib_Math.c,516 :: 		
0x004F	0x09F4      	COMF       R4, 1
;__Lib_Math.c,517 :: 		
0x0050	0x09F5      	COMF       R5, 1
;__Lib_Math.c,518 :: 		
0x0051	0x0AF4      	INCF       R4, 1
;__Lib_Math.c,519 :: 		
0x0052	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,520 :: 		
0x0053	0x0AF5      	INCF       R5, 1
;__Lib_Math.c,522 :: 		
0x0054	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,523 :: 		
0x0055	0x285B      	GOTO       $+6
;__Lib_Math.c,525 :: 		
0x0056	0x09F0      	COMF       R0, 1
;__Lib_Math.c,526 :: 		
0x0057	0x09F1      	COMF       R1, 1
;__Lib_Math.c,527 :: 		
0x0058	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,528 :: 		
0x0059	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,529 :: 		
0x005A	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,531 :: 		
0x005B	0x0871      	MOVF       R1, 0
;__Lib_Math.c,532 :: 		
0x005C	0x0475      	IORWF      R5, 0
;__Lib_Math.c,533 :: 		
0x005D	0x00FA      	MOVWF      R10
;__Lib_Math.c,534 :: 		
0x005E	0x1BFA      	BTFSC      R10, 7
;__Lib_Math.c,535 :: 		
0x005F	0x2870      	GOTO       $+17
;__Lib_Math.c,537 :: 		
0x0060	0x2003      	CALL       _Div_16x16_S_L
;__Lib_Math.c,539 :: 		
0x0061	0x187B      	BTFSC      R11, 0
;__Lib_Math.c,540 :: 		
0x0062	0x2883      	GOTO       $+33
;__Lib_Math.c,542 :: 		
0x0063	0x1FFD      	BTFSS      R13, 7
;__Lib_Math.c,543 :: 		
0x0064	0x3400      	RETLW      0
;__Lib_Math.c,545 :: 		
0x0065	0x09F0      	COMF       R0, 1
;__Lib_Math.c,546 :: 		
0x0066	0x09F1      	COMF       R1, 1
;__Lib_Math.c,547 :: 		
0x0067	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,548 :: 		
0x0068	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,549 :: 		
0x0069	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,551 :: 		
0x006A	0x09F8      	COMF       R8, 1
;__Lib_Math.c,552 :: 		
0x006B	0x09F9      	COMF       R9, 1
;__Lib_Math.c,553 :: 		
0x006C	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,554 :: 		
0x006D	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,555 :: 		
0x006E	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,557 :: 		
0x006F	0x3400      	RETLW      0
;__Lib_Math.c,559 :: 		
0x0070	0x1FF5      	BTFSS      R5, 7
;__Lib_Math.c,560 :: 		
0x0071	0x287F      	GOTO       $+14
;__Lib_Math.c,561 :: 		
0x0072	0x1BF1      	BTFSC      R1, 7
;__Lib_Math.c,562 :: 		
0x0073	0x287B      	GOTO       $+8
;__Lib_Math.c,563 :: 		
0x0074	0x0871      	MOVF       R1, 0
;__Lib_Math.c,564 :: 		
0x0075	0x00F9      	MOVWF      R9
;__Lib_Math.c,565 :: 		
0x0076	0x0870      	MOVF       R0, 0
;__Lib_Math.c,566 :: 		
0x0077	0x00F8      	MOVWF      R8
;__Lib_Math.c,567 :: 		
0x0078	0x01F1      	CLRF       R1
;__Lib_Math.c,568 :: 		
0x0079	0x01F0      	CLRF       R0
;__Lib_Math.c,569 :: 		
0x007A	0x2863      	GOTO       $-23
;__Lib_Math.c,570 :: 		
0x007B	0x01F1      	CLRF       R1
;__Lib_Math.c,571 :: 		
0x007C	0x01F0      	CLRF       R0
;__Lib_Math.c,572 :: 		
0x007D	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,573 :: 		
0x007E	0x3400      	RETLW      0
;__Lib_Math.c,575 :: 		
0x007F	0x09F1      	COMF       R1, 1
;__Lib_Math.c,576 :: 		
0x0080	0x09F0      	COMF       R0, 1
;__Lib_Math.c,577 :: 		
0x0081	0x0AFB      	INCF       R11, 1
;__Lib_Math.c,578 :: 		
0x0082	0x2860      	GOTO       $-34
;__Lib_Math.c,580 :: 		
0x0083	0x0AF8      	INCF       R8, 1
;__Lib_Math.c,581 :: 		
0x0084	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,582 :: 		
0x0085	0x0AF9      	INCF       R9, 1
;__Lib_Math.c,583 :: 		
0x0086	0x0874      	MOVF       R4, 0
;__Lib_Math.c,584 :: 		
0x0087	0x0278      	SUBWF      R8, 0
;__Lib_Math.c,585 :: 		
0x0088	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,586 :: 		
0x0089	0x2863      	GOTO       $-38
;__Lib_Math.c,587 :: 		
0x008A	0x0875      	MOVF       R5, 0
;__Lib_Math.c,588 :: 		
0x008B	0x0279      	SUBWF      R9, 0
;__Lib_Math.c,589 :: 		
0x008C	0x1D03      	BTFSS      STATUS, 2
;__Lib_Math.c,590 :: 		
0x008D	0x2863      	GOTO       $-42
;__Lib_Math.c,591 :: 		
0x008E	0x01F9      	CLRF       R9
;__Lib_Math.c,592 :: 		
0x008F	0x01F8      	CLRF       R8
;__Lib_Math.c,593 :: 		
0x0090	0x0AF0      	INCF       R0, 1
;__Lib_Math.c,594 :: 		
0x0091	0x1903      	BTFSC      STATUS, 2
;__Lib_Math.c,595 :: 		
0x0092	0x0AF1      	INCF       R1, 1
;__Lib_Math.c,596 :: 		
0x0093	0x1FF1      	BTFSS      R1, 7
;__Lib_Math.c,597 :: 		
0x0094	0x2863      	GOTO       $-49
;__Lib_Math.c,598 :: 		
0x0095	0x0000      	NOP
;__Lib_Math.c,599 :: 		
0x0096	0x34FF      	RETLW      255
;__Lib_Math.c,601 :: 		
L_end_Div_16x16_S:
0x0097	0x0008      	RETURN
; end of _Div_16x16_S
_clear:
;define.h,22 :: 		void clear(){
;define.h,23 :: 		digit_1 = OFF; digit_2 = OFF; digit_3 = OFF;
0x0098	0x1283      	BCF        STATUS, 5
0x0099	0x1303      	BCF        STATUS, 6
0x009A	0x1287      	BCF        RC5_bit, BitPos(RC5_bit+0)
0x009B	0x1307      	BCF        RC6_bit, BitPos(RC6_bit+0)
0x009C	0x1387      	BCF        RC7_bit, BitPos(RC7_bit+0)
;define.h,24 :: 		digit_4 = OFF; digit_5 = OFF; digit_6 = OFF;
0x009D	0x1105      	BCF        RA2_bit, BitPos(RA2_bit+0)
0x009E	0x1285      	BCF        RA5_bit, BitPos(RA5_bit+0)
0x009F	0x1386      	BCF        RB7_bit, BitPos(RB7_bit+0)
;define.h,25 :: 		}
L_end_clear:
0x00A0	0x0008      	RETURN
; end of _clear
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x00A1	0x1283      	BCF        STATUS, 5
0x00A2	0x1303      	BCF        STATUS, 6
0x00A3	0x0823      	MOVF       ___DoICPAddr+1, 0
0x00A4	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x00A5	0x0822      	MOVF       ___DoICPAddr, 0
0x00A6	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x00A7	0x0008      	RETURN
; end of _____DoICP
_Delay_22us:
;__Lib_Delays.c,15 :: 		void Delay_22us() {
;__Lib_Delays.c,16 :: 		Delay_us(22);
0x00A8	0x3024      	MOVLW      36
0x00A9	0x1283      	BCF        STATUS, 5
0x00AA	0x1303      	BCF        STATUS, 6
0x00AB	0x00FD      	MOVWF      R13
L_Delay_22us1:
0x00AC	0x0BFD      	DECFSZ     R13, 1
0x00AD	0x28AC      	GOTO       L_Delay_22us1
0x00AE	0x0000      	NOP
;__Lib_Delays.c,17 :: 		}
L_end_Delay_22us:
0x00AF	0x0008      	RETURN
; end of _Delay_22us
_dash_show:
;define.h,27 :: 		void dash_show(){
;define.h,28 :: 		display = font_a[2];
0x00B0	0x30C0      	MOVLW      192
0x00B1	0x1283      	BCF        STATUS, 5
0x00B2	0x1303      	BCF        STATUS, 6
0x00B3	0x0086      	MOVWF      PORTB
;define.h,29 :: 		digit_4 = ON; delay_ms(1); clear();
0x00B4	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
0x00B5	0x3007      	MOVLW      7
0x00B6	0x00FC      	MOVWF      R12
0x00B7	0x307D      	MOVLW      125
0x00B8	0x00FD      	MOVWF      R13
L_dash_show0:
0x00B9	0x0BFD      	DECFSZ     R13, 1
0x00BA	0x28B9      	GOTO       L_dash_show0
0x00BB	0x0BFC      	DECFSZ     R12, 1
0x00BC	0x28B9      	GOTO       L_dash_show0
0x00BD	0x2098      	CALL       _clear
;define.h,30 :: 		display = font_a[6];
0x00BE	0x308E      	MOVLW      142
0x00BF	0x0086      	MOVWF      PORTB
;define.h,31 :: 		digit_5 = ON; delay_ms(1); clear();
0x00C0	0x1685      	BSF        RA5_bit, BitPos(RA5_bit+0)
0x00C1	0x3007      	MOVLW      7
0x00C2	0x00FC      	MOVWF      R12
0x00C3	0x307D      	MOVLW      125
0x00C4	0x00FD      	MOVWF      R13
L_dash_show1:
0x00C5	0x0BFD      	DECFSZ     R13, 1
0x00C6	0x28C5      	GOTO       L_dash_show1
0x00C7	0x0BFC      	DECFSZ     R12, 1
0x00C8	0x28C5      	GOTO       L_dash_show1
0x00C9	0x2098      	CALL       _clear
;define.h,32 :: 		display = font_a[6];
0x00CA	0x308E      	MOVLW      142
0x00CB	0x0086      	MOVWF      PORTB
;define.h,33 :: 		digit_6 = ON; delay_ms(1); clear();
0x00CC	0x1786      	BSF        RB7_bit, BitPos(RB7_bit+0)
0x00CD	0x3007      	MOVLW      7
0x00CE	0x00FC      	MOVWF      R12
0x00CF	0x307D      	MOVLW      125
0x00D0	0x00FD      	MOVWF      R13
L_dash_show2:
0x00D1	0x0BFD      	DECFSZ     R13, 1
0x00D2	0x28D1      	GOTO       L_dash_show2
0x00D3	0x0BFC      	DECFSZ     R12, 1
0x00D4	0x28D1      	GOTO       L_dash_show2
0x00D5	0x2098      	CALL       _clear
;define.h,34 :: 		}
L_end_dash_show:
0x00D6	0x0008      	RETURN
; end of _dash_show
_ADC_Read:
;__Lib_ADC_A_A.c,39 :: 		
;__Lib_ADC_A_A.c,41 :: 		
0x00D7	0x1283      	BCF        STATUS, 5
0x00D8	0x1303      	BCF        STATUS, 6
0x00D9	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_A.c,42 :: 		
0x00DA	0x30C0      	MOVLW      192
0x00DB	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_A.c,43 :: 		
0x00DC	0x0840      	MOVF       FARG_ADC_Read_channel, 0
0x00DD	0x00F0      	MOVWF      R0
0x00DE	0x0DF0      	RLF        R0, 1
0x00DF	0x1070      	BCF        R0, 0
0x00E0	0x0DF0      	RLF        R0, 1
0x00E1	0x1070      	BCF        R0, 0
0x00E2	0x0DF0      	RLF        R0, 1
0x00E3	0x1070      	BCF        R0, 0
0x00E4	0x0870      	MOVF       R0, 0
0x00E5	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_A.c,44 :: 		
0x00E6	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_A.c,47 :: 		
0x00E7	0x20A8      	CALL       _Delay_22us
;__Lib_ADC_A_A.c,50 :: 		
0x00E8	0x151F      	BSF        ADCON0, 2
;__Lib_ADC_A_A.c,53 :: 		
L_ADC_Read2:
0x00E9	0x1D1F      	BTFSS      ADCON0, 2
0x00EA	0x28ED      	GOTO       L_ADC_Read3
;__Lib_ADC_A_A.c,54 :: 		
0x00EB	0x0000      	NOP
0x00EC	0x28E9      	GOTO       L_ADC_Read2
L_ADC_Read3:
;__Lib_ADC_A_A.c,57 :: 		
0x00ED	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_A.c,58 :: 		
0x00EE	0x081E      	MOVF       ADRES, 0
0x00EF	0x00F0      	MOVWF      R0
0x00F0	0x01F1      	CLRF       R0+1
;__Lib_ADC_A_A.c,60 :: 		
L_end_ADC_Read:
0x00F1	0x0008      	RETURN
; end of _ADC_Read
_segment_byte:
;define.h,36 :: 		void segment_byte(short seg, int value){
;define.h,38 :: 		temp = value / 100;
0x00F2	0x3064      	MOVLW      100
0x00F3	0x1283      	BCF        STATUS, 5
0x00F4	0x1303      	BCF        STATUS, 6
0x00F5	0x00F4      	MOVWF      R4
0x00F6	0x3000      	MOVLW      0
0x00F7	0x00F5      	MOVWF      R4+1
0x00F8	0x0841      	MOVF       FARG_segment_byte_value, 0
0x00F9	0x00F0      	MOVWF      R0
0x00FA	0x0842      	MOVF       FARG_segment_byte_value+1, 0
0x00FB	0x00F1      	MOVWF      R0+1
0x00FC	0x202F      	CALL       _Div_16x16_S
;define.h,39 :: 		display = anode[temp];
0x00FD	0x3000      	MOVLW      0
0x00FE	0x00F1      	MOVWF      R0+1
0x00FF	0x3080      	MOVLW      _anode
0x0100	0x07F0      	ADDWF      R0, 1
0x0101	0x3003      	MOVLW      hi_addr(_anode)
0x0102	0x1803      	BTFSC      STATUS, 0
0x0103	0x3E01      	ADDLW      1
0x0104	0x07F1      	ADDWF      R0+1, 1
0x0105	0x0870      	MOVF       R0, 0
0x0106	0x00A2      	MOVWF      ___DoICPAddr
0x0107	0x0871      	MOVF       R0+1, 0
0x0108	0x00A3      	MOVWF      ___DoICPAddr+1
0x0109	0x20A1      	CALL       _____DoICP
0x010A	0x118A      	BCF        PCLATH, 3
0x010B	0x120A      	BCF        PCLATH, 4
0x010C	0x0086      	MOVWF      PORTB
;define.h,40 :: 		if(seg == 0) {digit_1 = ON; delay_ms(1); clear();}
0x010D	0x0840      	MOVF       FARG_segment_byte_seg, 0
0x010E	0x3A00      	XORLW      0
0x010F	0x1D03      	BTFSS      STATUS, 2
0x0110	0x291C      	GOTO       L_segment_byte3
0x0111	0x1687      	BSF        RC5_bit, BitPos(RC5_bit+0)
0x0112	0x3007      	MOVLW      7
0x0113	0x00FC      	MOVWF      R12
0x0114	0x307D      	MOVLW      125
0x0115	0x00FD      	MOVWF      R13
L_segment_byte4:
0x0116	0x0BFD      	DECFSZ     R13, 1
0x0117	0x2916      	GOTO       L_segment_byte4
0x0118	0x0BFC      	DECFSZ     R12, 1
0x0119	0x2916      	GOTO       L_segment_byte4
0x011A	0x2098      	CALL       _clear
0x011B	0x2926      	GOTO       L_segment_byte5
L_segment_byte3:
;define.h,41 :: 		else {digit_4 = ON; delay_ms(1); clear();}
0x011C	0x1505      	BSF        RA2_bit, BitPos(RA2_bit+0)
0x011D	0x3007      	MOVLW      7
0x011E	0x00FC      	MOVWF      R12
0x011F	0x307D      	MOVLW      125
0x0120	0x00FD      	MOVWF      R13
L_segment_byte6:
0x0121	0x0BFD      	DECFSZ     R13, 1
0x0122	0x2921      	GOTO       L_segment_byte6
0x0123	0x0BFC      	DECFSZ     R12, 1
0x0124	0x2921      	GOTO       L_segment_byte6
0x0125	0x2098      	CALL       _clear
L_segment_byte5:
;define.h,42 :: 		temp = (value / 10) % 10;
0x0126	0x300A      	MOVLW      10
0x0127	0x00F4      	MOVWF      R4
0x0128	0x3000      	MOVLW      0
0x0129	0x00F5      	MOVWF      R4+1
0x012A	0x0841      	MOVF       FARG_segment_byte_value, 0
0x012B	0x00F0      	MOVWF      R0
0x012C	0x0842      	MOVF       FARG_segment_byte_value+1, 0
0x012D	0x00F1      	MOVWF      R0+1
0x012E	0x202F      	CALL       _Div_16x16_S
0x012F	0x300A      	MOVLW      10
0x0130	0x00F4      	MOVWF      R4
0x0131	0x3000      	MOVLW      0
0x0132	0x00F5      	MOVWF      R4+1
0x0133	0x202F      	CALL       _Div_16x16_S
0x0134	0x0878      	MOVF       R8, 0
0x0135	0x00F0      	MOVWF      R0
0x0136	0x0879      	MOVF       R8+1, 0
0x0137	0x00F1      	MOVWF      R0+1
;define.h,43 :: 		display = anode[temp];
0x0138	0x3000      	MOVLW      0
0x0139	0x00F1      	MOVWF      R0+1
0x013A	0x3080      	MOVLW      _anode
0x013B	0x07F0      	ADDWF      R0, 1
0x013C	0x3003      	MOVLW      hi_addr(_anode)
0x013D	0x1803      	BTFSC      STATUS, 0
0x013E	0x3E01      	ADDLW      1
0x013F	0x07F1      	ADDWF      R0+1, 1
0x0140	0x0870      	MOVF       R0, 0
0x0141	0x00A2      	MOVWF      ___DoICPAddr
0x0142	0x0871      	MOVF       R0+1, 0
0x0143	0x00A3      	MOVWF      ___DoICPAddr+1
0x0144	0x20A1      	CALL       _____DoICP
0x0145	0x118A      	BCF        PCLATH, 3
0x0146	0x120A      	BCF        PCLATH, 4
0x0147	0x0086      	MOVWF      PORTB
;define.h,44 :: 		if(seg == 0) {digit_2 = ON; delay_ms(1); clear();}
0x0148	0x0840      	MOVF       FARG_segment_byte_seg, 0
0x0149	0x3A00      	XORLW      0
0x014A	0x1D03      	BTFSS      STATUS, 2
0x014B	0x2957      	GOTO       L_segment_byte7
0x014C	0x1707      	BSF        RC6_bit, BitPos(RC6_bit+0)
0x014D	0x3007      	MOVLW      7
0x014E	0x00FC      	MOVWF      R12
0x014F	0x307D      	MOVLW      125
0x0150	0x00FD      	MOVWF      R13
L_segment_byte8:
0x0151	0x0BFD      	DECFSZ     R13, 1
0x0152	0x2951      	GOTO       L_segment_byte8
0x0153	0x0BFC      	DECFSZ     R12, 1
0x0154	0x2951      	GOTO       L_segment_byte8
0x0155	0x2098      	CALL       _clear
0x0156	0x2961      	GOTO       L_segment_byte9
L_segment_byte7:
;define.h,45 :: 		else {digit_5 = ON; delay_ms(1); clear();}
0x0157	0x1685      	BSF        RA5_bit, BitPos(RA5_bit+0)
0x0158	0x3007      	MOVLW      7
0x0159	0x00FC      	MOVWF      R12
0x015A	0x307D      	MOVLW      125
0x015B	0x00FD      	MOVWF      R13
L_segment_byte10:
0x015C	0x0BFD      	DECFSZ     R13, 1
0x015D	0x295C      	GOTO       L_segment_byte10
0x015E	0x0BFC      	DECFSZ     R12, 1
0x015F	0x295C      	GOTO       L_segment_byte10
0x0160	0x2098      	CALL       _clear
L_segment_byte9:
;define.h,46 :: 		temp = value % 10;
0x0161	0x300A      	MOVLW      10
0x0162	0x00F4      	MOVWF      R4
0x0163	0x3000      	MOVLW      0
0x0164	0x00F5      	MOVWF      R4+1
0x0165	0x0841      	MOVF       FARG_segment_byte_value, 0
0x0166	0x00F0      	MOVWF      R0
0x0167	0x0842      	MOVF       FARG_segment_byte_value+1, 0
0x0168	0x00F1      	MOVWF      R0+1
0x0169	0x202F      	CALL       _Div_16x16_S
0x016A	0x0878      	MOVF       R8, 0
0x016B	0x00F0      	MOVWF      R0
0x016C	0x0879      	MOVF       R8+1, 0
0x016D	0x00F1      	MOVWF      R0+1
;define.h,47 :: 		display = anode[temp];
0x016E	0x3000      	MOVLW      0
0x016F	0x00F1      	MOVWF      R0+1
0x0170	0x3080      	MOVLW      _anode
0x0171	0x07F0      	ADDWF      R0, 1
0x0172	0x3003      	MOVLW      hi_addr(_anode)
0x0173	0x1803      	BTFSC      STATUS, 0
0x0174	0x3E01      	ADDLW      1
0x0175	0x07F1      	ADDWF      R0+1, 1
0x0176	0x0870      	MOVF       R0, 0
0x0177	0x00A2      	MOVWF      ___DoICPAddr
0x0178	0x0871      	MOVF       R0+1, 0
0x0179	0x00A3      	MOVWF      ___DoICPAddr+1
0x017A	0x20A1      	CALL       _____DoICP
0x017B	0x118A      	BCF        PCLATH, 3
0x017C	0x120A      	BCF        PCLATH, 4
0x017D	0x0086      	MOVWF      PORTB
;define.h,48 :: 		if(seg == 0) {digit_3 = ON; delay_ms(1); clear();}
0x017E	0x0840      	MOVF       FARG_segment_byte_seg, 0
0x017F	0x3A00      	XORLW      0
0x0180	0x1D03      	BTFSS      STATUS, 2
0x0181	0x298D      	GOTO       L_segment_byte11
0x0182	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
0x0183	0x3007      	MOVLW      7
0x0184	0x00FC      	MOVWF      R12
0x0185	0x307D      	MOVLW      125
0x0186	0x00FD      	MOVWF      R13
L_segment_byte12:
0x0187	0x0BFD      	DECFSZ     R13, 1
0x0188	0x2987      	GOTO       L_segment_byte12
0x0189	0x0BFC      	DECFSZ     R12, 1
0x018A	0x2987      	GOTO       L_segment_byte12
0x018B	0x2098      	CALL       _clear
0x018C	0x2997      	GOTO       L_segment_byte13
L_segment_byte11:
;define.h,49 :: 		else {digit_6 = ON; delay_ms(1); clear();}
0x018D	0x1786      	BSF        RB7_bit, BitPos(RB7_bit+0)
0x018E	0x3007      	MOVLW      7
0x018F	0x00FC      	MOVWF      R12
0x0190	0x307D      	MOVLW      125
0x0191	0x00FD      	MOVWF      R13
L_segment_byte14:
0x0192	0x0BFD      	DECFSZ     R13, 1
0x0193	0x2992      	GOTO       L_segment_byte14
0x0194	0x0BFC      	DECFSZ     R12, 1
0x0195	0x2992      	GOTO       L_segment_byte14
0x0196	0x2098      	CALL       _clear
L_segment_byte13:
;define.h,50 :: 		}
L_end_segment_byte:
0x0197	0x0008      	RETURN
; end of _segment_byte
_check_inADC:
;define.h,63 :: 		void check_inADC(){
;define.h,64 :: 		in_ADC = adc_read(0);
0x0198	0x1283      	BCF        STATUS, 5
0x0199	0x1303      	BCF        STATUS, 6
0x019A	0x01C0      	CLRF       FARG_ADC_Read_channel
0x019B	0x20D7      	CALL       _ADC_Read
0x019C	0x0870      	MOVF       R0, 0
0x019D	0x00AC      	MOVWF      _in_ADC
0x019E	0x0871      	MOVF       R0+1, 0
0x019F	0x00AD      	MOVWF      _in_ADC+1
;define.h,65 :: 		in_ADC += in_volt_adj;
0x01A0	0x0834      	MOVF       _in_volt_adj, 0
0x01A1	0x0770      	ADDWF      R0, 0
0x01A2	0x00AC      	MOVWF      _in_ADC
0x01A3	0x0871      	MOVF       R0+1, 0
0x01A4	0x1803      	BTFSC      STATUS, 0
0x01A5	0x3E01      	ADDLW      1
0x01A6	0x0735      	ADDWF      _in_volt_adj+1, 0
0x01A7	0x00AD      	MOVWF      _in_ADC+1
;define.h,66 :: 		}
L_end_check_inADC:
0x01A8	0x0008      	RETURN
; end of _check_inADC
_delay:
;define.h,52 :: 		void delay(unsigned int time){
;define.h,54 :: 		rly1 = 0; rly2 = 0; rly3 = 0; rly4 = 0;
0x01A9	0x1283      	BCF        STATUS, 5
0x01AA	0x1303      	BCF        STATUS, 6
0x01AB	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
0x01AC	0x1087      	BCF        RC1_bit, BitPos(RC1_bit+0)
0x01AD	0x1107      	BCF        RC2_bit, BitPos(RC2_bit+0)
0x01AE	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
;define.h,55 :: 		for(count=0;count<=time;count++){
0x01AF	0x01BC      	CLRF       delay_count_L0
0x01B0	0x01BD      	CLRF       delay_count_L0+1
L_delay15:
0x01B1	0x083D      	MOVF       delay_count_L0+1, 0
0x01B2	0x023B      	SUBWF      FARG_delay_time+1, 0
0x01B3	0x1D03      	BTFSS      STATUS, 2
0x01B4	0x29B7      	GOTO       L__delay56
0x01B5	0x083C      	MOVF       delay_count_L0, 0
0x01B6	0x023A      	SUBWF      FARG_delay_time, 0
L__delay56:
0x01B7	0x1C03      	BTFSS      STATUS, 0
0x01B8	0x29D2      	GOTO       L_delay16
;define.h,56 :: 		for(count2=0;count2<166;count2++){
0x01B9	0x01BE      	CLRF       delay_count2_L0
0x01BA	0x01BF      	CLRF       delay_count2_L0+1
L_delay18:
0x01BB	0x3000      	MOVLW      0
0x01BC	0x023F      	SUBWF      delay_count2_L0+1, 0
0x01BD	0x1D03      	BTFSS      STATUS, 2
0x01BE	0x29C1      	GOTO       L__delay57
0x01BF	0x30A6      	MOVLW      166
0x01C0	0x023E      	SUBWF      delay_count2_L0, 0
L__delay57:
0x01C1	0x1803      	BTFSC      STATUS, 0
0x01C2	0x29CE      	GOTO       L_delay19
;define.h,57 :: 		segment_byte(0, count);
0x01C3	0x01C0      	CLRF       FARG_segment_byte_seg
0x01C4	0x083C      	MOVF       delay_count_L0, 0
0x01C5	0x00C1      	MOVWF      FARG_segment_byte_value
0x01C6	0x083D      	MOVF       delay_count_L0+1, 0
0x01C7	0x00C2      	MOVWF      FARG_segment_byte_value+1
0x01C8	0x20F2      	CALL       _segment_byte
;define.h,58 :: 		dash_show();
0x01C9	0x20B0      	CALL       _dash_show
;define.h,56 :: 		for(count2=0;count2<166;count2++){
0x01CA	0x0ABE      	INCF       delay_count2_L0, 1
0x01CB	0x1903      	BTFSC      STATUS, 2
0x01CC	0x0ABF      	INCF       delay_count2_L0+1, 1
;define.h,59 :: 		}
0x01CD	0x29BB      	GOTO       L_delay18
L_delay19:
;define.h,55 :: 		for(count=0;count<=time;count++){
0x01CE	0x0ABC      	INCF       delay_count_L0, 1
0x01CF	0x1903      	BTFSC      STATUS, 2
0x01D0	0x0ABD      	INCF       delay_count_L0+1, 1
;define.h,60 :: 		}
0x01D1	0x29B1      	GOTO       L_delay15
L_delay16:
;define.h,61 :: 		}
L_end_delay:
0x01D2	0x0008      	RETURN
; end of _delay
_Hi_volt:
;define.h,87 :: 		void Hi_volt(){
;define.h,88 :: 		rly1 = 0; rly2 = 0; rly3 = 0; rly4 = 0;
0x01D3	0x1283      	BCF        STATUS, 5
0x01D4	0x1303      	BCF        STATUS, 6
0x01D5	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
0x01D6	0x1087      	BCF        RC1_bit, BitPos(RC1_bit+0)
0x01D7	0x1107      	BCF        RC2_bit, BitPos(RC2_bit+0)
0x01D8	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
;define.h,89 :: 		while(1){
L_Hi_volt29:
;define.h,90 :: 		display = font_a[4];                    //H
0x01D9	0x3089      	MOVLW      137
0x01DA	0x0086      	MOVWF      PORTB
;define.h,91 :: 		digit_1 = ON; delay_ms(1); clear();
0x01DB	0x1687      	BSF        RC5_bit, BitPos(RC5_bit+0)
0x01DC	0x3007      	MOVLW      7
0x01DD	0x00FC      	MOVWF      R12
0x01DE	0x307D      	MOVLW      125
0x01DF	0x00FD      	MOVWF      R13
L_Hi_volt31:
0x01E0	0x0BFD      	DECFSZ     R13, 1
0x01E1	0x29E0      	GOTO       L_Hi_volt31
0x01E2	0x0BFC      	DECFSZ     R12, 1
0x01E3	0x29E0      	GOTO       L_Hi_volt31
0x01E4	0x2098      	CALL       _clear
;define.h,92 :: 		display = font_a[5];                    //I
0x01E5	0x30CF      	MOVLW      207
0x01E6	0x0086      	MOVWF      PORTB
;define.h,93 :: 		digit_2 = ON; delay_ms(1); clear();
0x01E7	0x1707      	BSF        RC6_bit, BitPos(RC6_bit+0)
0x01E8	0x3007      	MOVLW      7
0x01E9	0x00FC      	MOVWF      R12
0x01EA	0x307D      	MOVLW      125
0x01EB	0x00FD      	MOVWF      R13
L_Hi_volt32:
0x01EC	0x0BFD      	DECFSZ     R13, 1
0x01ED	0x29EC      	GOTO       L_Hi_volt32
0x01EE	0x0BFC      	DECFSZ     R12, 1
0x01EF	0x29EC      	GOTO       L_Hi_volt32
0x01F0	0x2098      	CALL       _clear
;define.h,96 :: 		display = font_a[3];                    //b
0x01F1	0x30C1      	MOVLW      193
0x01F2	0x0086      	MOVWF      PORTB
;define.h,97 :: 		digit_3 = ON; delay_ms(1); clear();
0x01F3	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
0x01F4	0x3007      	MOVLW      7
0x01F5	0x00FC      	MOVWF      R12
0x01F6	0x307D      	MOVLW      125
0x01F7	0x00FD      	MOVWF      R13
L_Hi_volt33:
0x01F8	0x0BFD      	DECFSZ     R13, 1
0x01F9	0x29F8      	GOTO       L_Hi_volt33
0x01FA	0x0BFC      	DECFSZ     R12, 1
0x01FB	0x29F8      	GOTO       L_Hi_volt33
0x01FC	0x2098      	CALL       _clear
;define.h,98 :: 		dash_show();                        //OFF
0x01FD	0x20B0      	CALL       _dash_show
;define.h,99 :: 		check_inADC();
0x01FE	0x2198      	CALL       _check_inADC
;define.h,100 :: 		if(in_ADC <= Hi_cut - 5)break;
0x01FF	0x3005      	MOVLW      5
0x0200	0x0230      	SUBWF      _Hi_cut, 0
0x0201	0x00F1      	MOVWF      R1
0x0202	0x3000      	MOVLW      0
0x0203	0x1C03      	BTFSS      STATUS, 0
0x0204	0x3E01      	ADDLW      1
0x0205	0x0231      	SUBWF      _Hi_cut+1, 0
0x0206	0x00F2      	MOVWF      R1+1
0x0207	0x3080      	MOVLW      128
0x0208	0x0672      	XORWF      R1+1, 0
0x0209	0x00F0      	MOVWF      R0
0x020A	0x3080      	MOVLW      128
0x020B	0x062D      	XORWF      _in_ADC+1, 0
0x020C	0x0270      	SUBWF      R0, 0
0x020D	0x1D03      	BTFSS      STATUS, 2
0x020E	0x2A11      	GOTO       L__Hi_volt62
0x020F	0x082C      	MOVF       _in_ADC, 0
0x0210	0x0271      	SUBWF      R1, 0
L__Hi_volt62:
0x0211	0x1C03      	BTFSS      STATUS, 0
0x0212	0x2A14      	GOTO       L_Hi_volt34
0x0213	0x2A15      	GOTO       L_Hi_volt30
L_Hi_volt34:
;define.h,101 :: 		}
0x0214	0x29D9      	GOTO       L_Hi_volt29
L_Hi_volt30:
;define.h,102 :: 		if(!delay_key) delay(min_time);
0x0215	0x1A05      	BTFSC      RA4_bit, BitPos(RA4_bit+0)
0x0216	0x2A1D      	GOTO       L_Hi_volt35
0x0217	0x082E      	MOVF       _min_time, 0
0x0218	0x00BA      	MOVWF      FARG_delay_time
0x0219	0x082F      	MOVF       _min_time+1, 0
0x021A	0x00BB      	MOVWF      FARG_delay_time+1
0x021B	0x21A9      	CALL       _delay
0x021C	0x2A22      	GOTO       L_Hi_volt36
L_Hi_volt35:
;define.h,103 :: 		else delay(max_time);
0x021D	0x0820      	MOVF       _max_time, 0
0x021E	0x00BA      	MOVWF      FARG_delay_time
0x021F	0x0821      	MOVF       _max_time+1, 0
0x0220	0x00BB      	MOVWF      FARG_delay_time+1
0x0221	0x21A9      	CALL       _delay
L_Hi_volt36:
;define.h,104 :: 		}
L_end_Hi_volt:
0x0222	0x0008      	RETURN
; end of _Hi_volt
_Low_volt:
;define.h,68 :: 		void Low_volt(){
;define.h,69 :: 		rly1 = 0; rly2 = 0; rly3 = 0; rly4 = 0;
0x0223	0x1283      	BCF        STATUS, 5
0x0224	0x1303      	BCF        STATUS, 6
0x0225	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
0x0226	0x1087      	BCF        RC1_bit, BitPos(RC1_bit+0)
0x0227	0x1107      	BCF        RC2_bit, BitPos(RC2_bit+0)
0x0228	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
;define.h,70 :: 		while(1){
L_Low_volt21:
;define.h,71 :: 		display = font_a[1];                    //L
0x0229	0x30C7      	MOVLW      199
0x022A	0x0086      	MOVWF      PORTB
;define.h,72 :: 		digit_1 = ON; delay_ms(1); clear();
0x022B	0x1687      	BSF        RC5_bit, BitPos(RC5_bit+0)
0x022C	0x3007      	MOVLW      7
0x022D	0x00FC      	MOVWF      R12
0x022E	0x307D      	MOVLW      125
0x022F	0x00FD      	MOVWF      R13
L_Low_volt23:
0x0230	0x0BFD      	DECFSZ     R13, 1
0x0231	0x2A30      	GOTO       L_Low_volt23
0x0232	0x0BFC      	DECFSZ     R12, 1
0x0233	0x2A30      	GOTO       L_Low_volt23
0x0234	0x2098      	CALL       _clear
;define.h,73 :: 		display = font_a[2];                    //O
0x0235	0x30C0      	MOVLW      192
0x0236	0x0086      	MOVWF      PORTB
;define.h,74 :: 		digit_2 = ON; delay_ms(1); clear();
0x0237	0x1707      	BSF        RC6_bit, BitPos(RC6_bit+0)
0x0238	0x3007      	MOVLW      7
0x0239	0x00FC      	MOVWF      R12
0x023A	0x307D      	MOVLW      125
0x023B	0x00FD      	MOVWF      R13
L_Low_volt24:
0x023C	0x0BFD      	DECFSZ     R13, 1
0x023D	0x2A3C      	GOTO       L_Low_volt24
0x023E	0x0BFC      	DECFSZ     R12, 1
0x023F	0x2A3C      	GOTO       L_Low_volt24
0x0240	0x2098      	CALL       _clear
;define.h,77 :: 		display = font_a[3];                    //b
0x0241	0x30C1      	MOVLW      193
0x0242	0x0086      	MOVWF      PORTB
;define.h,78 :: 		digit_3 = ON; delay_ms(1); clear();
0x0243	0x1787      	BSF        RC7_bit, BitPos(RC7_bit+0)
0x0244	0x3007      	MOVLW      7
0x0245	0x00FC      	MOVWF      R12
0x0246	0x307D      	MOVLW      125
0x0247	0x00FD      	MOVWF      R13
L_Low_volt25:
0x0248	0x0BFD      	DECFSZ     R13, 1
0x0249	0x2A48      	GOTO       L_Low_volt25
0x024A	0x0BFC      	DECFSZ     R12, 1
0x024B	0x2A48      	GOTO       L_Low_volt25
0x024C	0x2098      	CALL       _clear
;define.h,79 :: 		dash_show();                        //OFF
0x024D	0x20B0      	CALL       _dash_show
;define.h,80 :: 		check_inADC();
0x024E	0x2198      	CALL       _check_inADC
;define.h,81 :: 		if(in_ADC >= Lo_cut + 5)break;
0x024F	0x3005      	MOVLW      5
0x0250	0x0736      	ADDWF      _Lo_cut, 0
0x0251	0x00F1      	MOVWF      R1
0x0252	0x0837      	MOVF       _Lo_cut+1, 0
0x0253	0x1803      	BTFSC      STATUS, 0
0x0254	0x3E01      	ADDLW      1
0x0255	0x00F2      	MOVWF      R1+1
0x0256	0x3080      	MOVLW      128
0x0257	0x062D      	XORWF      _in_ADC+1, 0
0x0258	0x00F0      	MOVWF      R0
0x0259	0x3080      	MOVLW      128
0x025A	0x0672      	XORWF      R1+1, 0
0x025B	0x0270      	SUBWF      R0, 0
0x025C	0x1D03      	BTFSS      STATUS, 2
0x025D	0x2A60      	GOTO       L__Low_volt60
0x025E	0x0871      	MOVF       R1, 0
0x025F	0x022C      	SUBWF      _in_ADC, 0
L__Low_volt60:
0x0260	0x1C03      	BTFSS      STATUS, 0
0x0261	0x2A63      	GOTO       L_Low_volt26
0x0262	0x2A64      	GOTO       L_Low_volt22
L_Low_volt26:
;define.h,82 :: 		};
0x0263	0x2A29      	GOTO       L_Low_volt21
L_Low_volt22:
;define.h,83 :: 		if(!delay_key) delay(min_time);
0x0264	0x1A05      	BTFSC      RA4_bit, BitPos(RA4_bit+0)
0x0265	0x2A6C      	GOTO       L_Low_volt27
0x0266	0x082E      	MOVF       _min_time, 0
0x0267	0x00BA      	MOVWF      FARG_delay_time
0x0268	0x082F      	MOVF       _min_time+1, 0
0x0269	0x00BB      	MOVWF      FARG_delay_time+1
0x026A	0x21A9      	CALL       _delay
0x026B	0x2A71      	GOTO       L_Low_volt28
L_Low_volt27:
;define.h,84 :: 		else delay(max_time);
0x026C	0x0820      	MOVF       _max_time, 0
0x026D	0x00BA      	MOVWF      FARG_delay_time
0x026E	0x0821      	MOVF       _max_time+1, 0
0x026F	0x00BB      	MOVWF      FARG_delay_time+1
0x0270	0x21A9      	CALL       _delay
L_Low_volt28:
;define.h,85 :: 		}
L_end_Low_volt:
0x0271	0x0008      	RETURN
; end of _Low_volt
_check_AVR:
;define.h,106 :: 		void check_AVR(int avr_ADC){
;define.h,107 :: 		if(avr_ADC >= rly1_cut)rly1 = 1;
0x0272	0x3080      	MOVLW      128
0x0273	0x1283      	BCF        STATUS, 5
0x0274	0x1303      	BCF        STATUS, 6
0x0275	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x0276	0x00F0      	MOVWF      R0
0x0277	0x3080      	MOVLW      128
0x0278	0x062B      	XORWF      _rly1_cut+1, 0
0x0279	0x0270      	SUBWF      R0, 0
0x027A	0x1D03      	BTFSS      STATUS, 2
0x027B	0x2A7E      	GOTO       L__check_AVR64
0x027C	0x082A      	MOVF       _rly1_cut, 0
0x027D	0x0238      	SUBWF      FARG_check_AVR_avr_ADC, 0
L__check_AVR64:
0x027E	0x1C03      	BTFSS      STATUS, 0
0x027F	0x2A81      	GOTO       L_check_AVR37
0x0280	0x1407      	BSF        RC0_bit, BitPos(RC0_bit+0)
L_check_AVR37:
;define.h,108 :: 		if(avr_ADC <= rly1_cut - 5)rly1 = 0;
0x0281	0x3005      	MOVLW      5
0x0282	0x022A      	SUBWF      _rly1_cut, 0
0x0283	0x00F1      	MOVWF      R1
0x0284	0x3000      	MOVLW      0
0x0285	0x1C03      	BTFSS      STATUS, 0
0x0286	0x3E01      	ADDLW      1
0x0287	0x022B      	SUBWF      _rly1_cut+1, 0
0x0288	0x00F2      	MOVWF      R1+1
0x0289	0x3080      	MOVLW      128
0x028A	0x0672      	XORWF      R1+1, 0
0x028B	0x00F0      	MOVWF      R0
0x028C	0x3080      	MOVLW      128
0x028D	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x028E	0x0270      	SUBWF      R0, 0
0x028F	0x1D03      	BTFSS      STATUS, 2
0x0290	0x2A93      	GOTO       L__check_AVR65
0x0291	0x0838      	MOVF       FARG_check_AVR_avr_ADC, 0
0x0292	0x0271      	SUBWF      R1, 0
L__check_AVR65:
0x0293	0x1C03      	BTFSS      STATUS, 0
0x0294	0x2A96      	GOTO       L_check_AVR38
0x0295	0x1007      	BCF        RC0_bit, BitPos(RC0_bit+0)
L_check_AVR38:
;define.h,109 :: 		if(avr_ADC >= rly2_cut)rly2 = 1;
0x0296	0x3080      	MOVLW      128
0x0297	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x0298	0x00F0      	MOVWF      R0
0x0299	0x3080      	MOVLW      128
0x029A	0x0629      	XORWF      _rly2_cut+1, 0
0x029B	0x0270      	SUBWF      R0, 0
0x029C	0x1D03      	BTFSS      STATUS, 2
0x029D	0x2AA0      	GOTO       L__check_AVR66
0x029E	0x0828      	MOVF       _rly2_cut, 0
0x029F	0x0238      	SUBWF      FARG_check_AVR_avr_ADC, 0
L__check_AVR66:
0x02A0	0x1C03      	BTFSS      STATUS, 0
0x02A1	0x2AA3      	GOTO       L_check_AVR39
0x02A2	0x1487      	BSF        RC1_bit, BitPos(RC1_bit+0)
L_check_AVR39:
;define.h,110 :: 		if(avr_ADC <= rly2_cut - 5)rly2 = 0;
0x02A3	0x3005      	MOVLW      5
0x02A4	0x0228      	SUBWF      _rly2_cut, 0
0x02A5	0x00F1      	MOVWF      R1
0x02A6	0x3000      	MOVLW      0
0x02A7	0x1C03      	BTFSS      STATUS, 0
0x02A8	0x3E01      	ADDLW      1
0x02A9	0x0229      	SUBWF      _rly2_cut+1, 0
0x02AA	0x00F2      	MOVWF      R1+1
0x02AB	0x3080      	MOVLW      128
0x02AC	0x0672      	XORWF      R1+1, 0
0x02AD	0x00F0      	MOVWF      R0
0x02AE	0x3080      	MOVLW      128
0x02AF	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x02B0	0x0270      	SUBWF      R0, 0
0x02B1	0x1D03      	BTFSS      STATUS, 2
0x02B2	0x2AB5      	GOTO       L__check_AVR67
0x02B3	0x0838      	MOVF       FARG_check_AVR_avr_ADC, 0
0x02B4	0x0271      	SUBWF      R1, 0
L__check_AVR67:
0x02B5	0x1C03      	BTFSS      STATUS, 0
0x02B6	0x2AB8      	GOTO       L_check_AVR40
0x02B7	0x1087      	BCF        RC1_bit, BitPos(RC1_bit+0)
L_check_AVR40:
;define.h,111 :: 		if(avr_ADC >= rly3_cut)rly3 = 1;
0x02B8	0x3080      	MOVLW      128
0x02B9	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x02BA	0x00F0      	MOVWF      R0
0x02BB	0x3080      	MOVLW      128
0x02BC	0x0627      	XORWF      _rly3_cut+1, 0
0x02BD	0x0270      	SUBWF      R0, 0
0x02BE	0x1D03      	BTFSS      STATUS, 2
0x02BF	0x2AC2      	GOTO       L__check_AVR68
0x02C0	0x0826      	MOVF       _rly3_cut, 0
0x02C1	0x0238      	SUBWF      FARG_check_AVR_avr_ADC, 0
L__check_AVR68:
0x02C2	0x1C03      	BTFSS      STATUS, 0
0x02C3	0x2AC5      	GOTO       L_check_AVR41
0x02C4	0x1507      	BSF        RC2_bit, BitPos(RC2_bit+0)
L_check_AVR41:
;define.h,112 :: 		if(avr_ADC <= rly3_cut - 5)rly3 = 0;
0x02C5	0x3005      	MOVLW      5
0x02C6	0x0226      	SUBWF      _rly3_cut, 0
0x02C7	0x00F1      	MOVWF      R1
0x02C8	0x3000      	MOVLW      0
0x02C9	0x1C03      	BTFSS      STATUS, 0
0x02CA	0x3E01      	ADDLW      1
0x02CB	0x0227      	SUBWF      _rly3_cut+1, 0
0x02CC	0x00F2      	MOVWF      R1+1
0x02CD	0x3080      	MOVLW      128
0x02CE	0x0672      	XORWF      R1+1, 0
0x02CF	0x00F0      	MOVWF      R0
0x02D0	0x3080      	MOVLW      128
0x02D1	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x02D2	0x0270      	SUBWF      R0, 0
0x02D3	0x1D03      	BTFSS      STATUS, 2
0x02D4	0x2AD7      	GOTO       L__check_AVR69
0x02D5	0x0838      	MOVF       FARG_check_AVR_avr_ADC, 0
0x02D6	0x0271      	SUBWF      R1, 0
L__check_AVR69:
0x02D7	0x1C03      	BTFSS      STATUS, 0
0x02D8	0x2ADA      	GOTO       L_check_AVR42
0x02D9	0x1107      	BCF        RC2_bit, BitPos(RC2_bit+0)
L_check_AVR42:
;define.h,113 :: 		if(avr_ADC >= rly4_cut)rly4 = 1;
0x02DA	0x3080      	MOVLW      128
0x02DB	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x02DC	0x00F0      	MOVWF      R0
0x02DD	0x3080      	MOVLW      128
0x02DE	0x0633      	XORWF      _rly4_cut+1, 0
0x02DF	0x0270      	SUBWF      R0, 0
0x02E0	0x1D03      	BTFSS      STATUS, 2
0x02E1	0x2AE4      	GOTO       L__check_AVR70
0x02E2	0x0832      	MOVF       _rly4_cut, 0
0x02E3	0x0238      	SUBWF      FARG_check_AVR_avr_ADC, 0
L__check_AVR70:
0x02E4	0x1C03      	BTFSS      STATUS, 0
0x02E5	0x2AE7      	GOTO       L_check_AVR43
0x02E6	0x1587      	BSF        RC3_bit, BitPos(RC3_bit+0)
L_check_AVR43:
;define.h,114 :: 		if(avr_ADC <= rly4_cut - 5)rly4 = 0;
0x02E7	0x3005      	MOVLW      5
0x02E8	0x0232      	SUBWF      _rly4_cut, 0
0x02E9	0x00F1      	MOVWF      R1
0x02EA	0x3000      	MOVLW      0
0x02EB	0x1C03      	BTFSS      STATUS, 0
0x02EC	0x3E01      	ADDLW      1
0x02ED	0x0233      	SUBWF      _rly4_cut+1, 0
0x02EE	0x00F2      	MOVWF      R1+1
0x02EF	0x3080      	MOVLW      128
0x02F0	0x0672      	XORWF      R1+1, 0
0x02F1	0x00F0      	MOVWF      R0
0x02F2	0x3080      	MOVLW      128
0x02F3	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x02F4	0x0270      	SUBWF      R0, 0
0x02F5	0x1D03      	BTFSS      STATUS, 2
0x02F6	0x2AF9      	GOTO       L__check_AVR71
0x02F7	0x0838      	MOVF       FARG_check_AVR_avr_ADC, 0
0x02F8	0x0271      	SUBWF      R1, 0
L__check_AVR71:
0x02F9	0x1C03      	BTFSS      STATUS, 0
0x02FA	0x2AFC      	GOTO       L_check_AVR44
0x02FB	0x1187      	BCF        RC3_bit, BitPos(RC3_bit+0)
L_check_AVR44:
;define.h,115 :: 		if(avr_ADC <= Lo_cut)Low_volt();
0x02FC	0x3080      	MOVLW      128
0x02FD	0x0637      	XORWF      _Lo_cut+1, 0
0x02FE	0x00F0      	MOVWF      R0
0x02FF	0x3080      	MOVLW      128
0x0300	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x0301	0x0270      	SUBWF      R0, 0
0x0302	0x1D03      	BTFSS      STATUS, 2
0x0303	0x2B06      	GOTO       L__check_AVR72
0x0304	0x0838      	MOVF       FARG_check_AVR_avr_ADC, 0
0x0305	0x0236      	SUBWF      _Lo_cut, 0
L__check_AVR72:
0x0306	0x1C03      	BTFSS      STATUS, 0
0x0307	0x2B09      	GOTO       L_check_AVR45
0x0308	0x2223      	CALL       _Low_volt
L_check_AVR45:
;define.h,116 :: 		if(avr_ADC >= Hi_cut)Hi_volt();
0x0309	0x3080      	MOVLW      128
0x030A	0x0639      	XORWF      FARG_check_AVR_avr_ADC+1, 0
0x030B	0x00F0      	MOVWF      R0
0x030C	0x3080      	MOVLW      128
0x030D	0x0631      	XORWF      _Hi_cut+1, 0
0x030E	0x0270      	SUBWF      R0, 0
0x030F	0x1D03      	BTFSS      STATUS, 2
0x0310	0x2B13      	GOTO       L__check_AVR73
0x0311	0x0830      	MOVF       _Hi_cut, 0
0x0312	0x0238      	SUBWF      FARG_check_AVR_avr_ADC, 0
L__check_AVR73:
0x0313	0x1C03      	BTFSS      STATUS, 0
0x0314	0x2B16      	GOTO       L_check_AVR46
0x0315	0x21D3      	CALL       _Hi_volt
L_check_AVR46:
;define.h,117 :: 		}
L_end_check_AVR:
0x0316	0x0008      	RETURN
; end of _check_AVR
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0317	0x20A1      	CALL       _____DoICP
0x0318	0x118A      	BCF        PCLATH, 3
0x0319	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x031A	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x031B	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x031C	0x0AA2      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x031D	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x031E	0x0AA3      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x031F	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0320	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0321	0x2B17      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0322	0x0008      	RETURN
; end of ___CC2DW
_voltmeter:
;define.h,119 :: 		void voltmeter(){
;define.h,120 :: 		check_inADC();
0x0323	0x2198      	CALL       _check_inADC
;define.h,121 :: 		out_ADC = 220;
0x0324	0x30DC      	MOVLW      220
0x0325	0x00A4      	MOVWF      _out_ADC
0x0326	0x01A5      	CLRF       _out_ADC+1
;define.h,122 :: 		segment_byte(0, in_ADC);
0x0327	0x01C0      	CLRF       FARG_segment_byte_seg
0x0328	0x082C      	MOVF       _in_ADC, 0
0x0329	0x00C1      	MOVWF      FARG_segment_byte_value
0x032A	0x082D      	MOVF       _in_ADC+1, 0
0x032B	0x00C2      	MOVWF      FARG_segment_byte_value+1
0x032C	0x20F2      	CALL       _segment_byte
;define.h,123 :: 		segment_byte(1, out_ADC);
0x032D	0x3001      	MOVLW      1
0x032E	0x00C0      	MOVWF      FARG_segment_byte_seg
0x032F	0x0824      	MOVF       _out_ADC, 0
0x0330	0x00C1      	MOVWF      FARG_segment_byte_value
0x0331	0x0825      	MOVF       _out_ADC+1, 0
0x0332	0x00C2      	MOVWF      FARG_segment_byte_value+1
0x0333	0x20F2      	CALL       _segment_byte
;define.h,124 :: 		check_AVR(in_ADC);
0x0334	0x082C      	MOVF       _in_ADC, 0
0x0335	0x00B8      	MOVWF      FARG_check_AVR_avr_ADC
0x0336	0x082D      	MOVF       _in_ADC+1, 0
0x0337	0x00B9      	MOVWF      FARG_check_AVR_avr_ADC+1
0x0338	0x2272      	CALL       _check_AVR
;define.h,125 :: 		}
L_end_voltmeter:
0x0339	0x0008      	RETURN
; end of _voltmeter
_defult:
;stabilazer.c,17 :: 		void defult(){
;stabilazer.c,18 :: 		min_time = 30;    // delay time [in second]
0x033A	0x301E      	MOVLW      30
0x033B	0x1283      	BCF        STATUS, 5
0x033C	0x1303      	BCF        STATUS, 6
0x033D	0x00AE      	MOVWF      _min_time
0x033E	0x3000      	MOVLW      0
0x033F	0x00AF      	MOVWF      _min_time+1
;stabilazer.c,19 :: 		max_time = 300;   // delay time [in second]
0x0340	0x302C      	MOVLW      44
0x0341	0x00A0      	MOVWF      _max_time
0x0342	0x3001      	MOVLW      1
0x0343	0x00A1      	MOVWF      _max_time+1
;stabilazer.c,20 :: 		in_volt_adj = 45; // adjust Input Voltage internally
0x0344	0x302D      	MOVLW      45
0x0345	0x00B4      	MOVWF      _in_volt_adj
0x0346	0x3000      	MOVLW      0
0x0347	0x00B5      	MOVWF      _in_volt_adj+1
;stabilazer.c,21 :: 		Lo_cut = 150;
0x0348	0x3096      	MOVLW      150
0x0349	0x00B6      	MOVWF      _Lo_cut
0x034A	0x01B7      	CLRF       _Lo_cut+1
;stabilazer.c,22 :: 		rly1_cut = 180;
0x034B	0x30B4      	MOVLW      180
0x034C	0x00AA      	MOVWF      _rly1_cut
0x034D	0x01AB      	CLRF       _rly1_cut+1
;stabilazer.c,23 :: 		rly2_cut = 200;
0x034E	0x30C8      	MOVLW      200
0x034F	0x00A8      	MOVWF      _rly2_cut
0x0350	0x01A9      	CLRF       _rly2_cut+1
;stabilazer.c,24 :: 		rly3_cut = 240;
0x0351	0x30F0      	MOVLW      240
0x0352	0x00A6      	MOVWF      _rly3_cut
0x0353	0x01A7      	CLRF       _rly3_cut+1
;stabilazer.c,25 :: 		rly4_cut = 260;
0x0354	0x3004      	MOVLW      4
0x0355	0x00B2      	MOVWF      _rly4_cut
0x0356	0x3001      	MOVLW      1
0x0357	0x00B3      	MOVWF      _rly4_cut+1
;stabilazer.c,26 :: 		Hi_cut = 280;
0x0358	0x3018      	MOVLW      24
0x0359	0x00B0      	MOVWF      _Hi_cut
0x035A	0x3001      	MOVLW      1
0x035B	0x00B1      	MOVWF      _Hi_cut+1
;stabilazer.c,27 :: 		}
L_end_defult:
0x035C	0x0008      	RETURN
; end of _defult
_hardware_init:
;define.h,15 :: 		void hardware_init(){
;define.h,16 :: 		adcon1 = 0x04;
0x035D	0x3004      	MOVLW      4
0x035E	0x1683      	BSF        STATUS, 5
0x035F	0x1303      	BCF        STATUS, 6
0x0360	0x009F      	MOVWF      ADCON1
;define.h,17 :: 		trisA = 0x1B; portA = 0x00;
0x0361	0x301B      	MOVLW      27
0x0362	0x0085      	MOVWF      TRISA
0x0363	0x1283      	BCF        STATUS, 5
0x0364	0x0185      	CLRF       PORTA
;define.h,18 :: 		trisB = 0x00; portB = 0x00;
0x0365	0x1683      	BSF        STATUS, 5
0x0366	0x0186      	CLRF       TRISB
0x0367	0x1283      	BCF        STATUS, 5
0x0368	0x0186      	CLRF       PORTB
;define.h,19 :: 		trisC = 0x00; portC = 0x00;
0x0369	0x1683      	BSF        STATUS, 5
0x036A	0x0187      	CLRF       TRISC
0x036B	0x1283      	BCF        STATUS, 5
0x036C	0x0187      	CLRF       PORTC
;define.h,20 :: 		}
L_end_hardware_init:
0x036D	0x0008      	RETURN
; end of _hardware_init
_main:
;stabilazer.c,29 :: 		void main(){
;stabilazer.c,30 :: 		hardware_init();
0x036E	0x235D      	CALL       _hardware_init
;stabilazer.c,31 :: 		defult();
0x036F	0x233A      	CALL       _defult
;stabilazer.c,32 :: 		if(!delay_key) delay(min_time);
0x0370	0x1A05      	BTFSC      RA4_bit, BitPos(RA4_bit+0)
0x0371	0x2B78      	GOTO       L_main47
0x0372	0x082E      	MOVF       _min_time, 0
0x0373	0x00BA      	MOVWF      FARG_delay_time
0x0374	0x082F      	MOVF       _min_time+1, 0
0x0375	0x00BB      	MOVWF      FARG_delay_time+1
0x0376	0x21A9      	CALL       _delay
0x0377	0x2B7D      	GOTO       L_main48
L_main47:
;stabilazer.c,33 :: 		else delay(max_time);
0x0378	0x0820      	MOVF       _max_time, 0
0x0379	0x00BA      	MOVWF      FARG_delay_time
0x037A	0x0821      	MOVF       _max_time+1, 0
0x037B	0x00BB      	MOVWF      FARG_delay_time+1
0x037C	0x21A9      	CALL       _delay
L_main48:
;stabilazer.c,35 :: 		while(1){
L_main49:
;stabilazer.c,36 :: 		voltmeter();
0x037D	0x2323      	CALL       _voltmeter
;stabilazer.c,37 :: 		}
0x037E	0x2B7D      	GOTO       L_main49
;stabilazer.c,38 :: 		}
L_end_main:
0x037F	0x2B7F      	GOTO       $+0
; end of _main
;stabilazer.c,3 :: _anode
0x0380	0x34C0 ;_anode+0
0x0381	0x34F9 ;_anode+1
0x0382	0x34A4 ;_anode+2
0x0383	0x34B0 ;_anode+3
0x0384	0x3499 ;_anode+4
0x0385	0x3492 ;_anode+5
0x0386	0x3482 ;_anode+6
0x0387	0x34F8 ;_anode+7
0x0388	0x3480 ;_anode+8
0x0389	0x3490 ;_anode+9
; end of _anode
;stabilazer.c,6 :: _font_a
0x038A	0x34BF ;_font_a+0
0x038B	0x34C7 ;_font_a+1
0x038C	0x34C0 ;_font_a+2
0x038D	0x34C1 ;_font_a+3
0x038E	0x3489 ;_font_a+4
0x038F	0x34CF ;_font_a+5
0x0390	0x348E ;_font_a+6
; end of _font_a
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [44]    _Div_16x16_S_L
0x002F     [105]    _Div_16x16_S
0x0098       [9]    _clear
0x00A1       [7]    _____DoICP
0x00A8       [8]    _Delay_22us
0x00B0      [39]    _dash_show
0x00D7      [27]    _ADC_Read
0x00F2     [166]    _segment_byte
0x0198      [17]    _check_inADC
0x01A9      [42]    _delay
0x01D3      [80]    _Hi_volt
0x0223      [79]    _Low_volt
0x0272     [165]    _check_AVR
0x0317      [12]    ___CC2DW
0x0323      [23]    _voltmeter
0x033A      [35]    _defult
0x035D      [17]    _hardware_init
0x036E      [18]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [1]    PORTA
0x0005       [0]    RA4_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA5_bit
0x0006       [1]    PORTB
0x0006       [0]    RB7_bit
0x0007       [0]    RC5_bit
0x0007       [0]    RC6_bit
0x0007       [0]    RC3_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC1_bit
0x0007       [1]    PORTC
0x0007       [0]    RC7_bit
0x0007       [0]    RC2_bit
0x000A       [1]    PCLATH
0x001E       [1]    ADRES
0x001F       [1]    ADCON0
0x0020       [2]    _max_time
0x0022       [2]    ___DoICPAddr
0x0024       [2]    _out_ADC
0x0026       [2]    _rly3_cut
0x0028       [2]    _rly2_cut
0x002A       [2]    _rly1_cut
0x002C       [2]    _in_ADC
0x002E       [2]    _min_time
0x0030       [2]    _Hi_cut
0x0032       [2]    _rly4_cut
0x0034       [2]    _in_volt_adj
0x0036       [2]    _Lo_cut
0x0038       [2]    FARG_check_AVR_avr_ADC
0x003A       [2]    FARG_delay_time
0x003C       [2]    delay_count_L0
0x003E       [2]    delay_count2_L0
0x0040       [1]    FARG_ADC_Read_channel
0x0040       [1]    FARG_segment_byte_seg
0x0041       [2]    FARG_segment_byte_value
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0087       [1]    TRISC
0x009F       [1]    ADCON1
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x0380      [10]    _anode
0x038A       [7]    _font_a
